#
# The rules are generated from the Sigma GitHub repository at https://github.com/Neo23x0/sigma
# Follow these steps to get the latest rules from the repository with Python
#    1. Clone the repository locally
#    2. Using a commandline, change working directory to the just cloned repository
#    3. Run sigmac -I --target uberagent -r rules/
#
# The rules in this file are marked with sigma-level: medium
#

[ActivityMonitoringRule]
# Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code and making a network connections.
# One could easily make the DLL spawn a new process and inject to it to proxy the network connection and bypass this rule.
RuleName = Wuauclt Network Connection
EventType = Net.Any
Tag = wuauclt-network-connection
RiskScore = 50
Query = (Process.Path like r"%wuauclt%" and not ((Net.Target.Ip like r"51.10%") or (Process.CommandLine like r"%\\UpdateDeploy.dll /ClassId %")))
GenericProperty1 = Net.Target.Ip

[ActivityMonitoringRule]
# Detects suspicious connections from Microsoft Sync Center to non-private IPs.
RuleName = Microsoft Sync Center Suspicious Network Connections
EventType = Net.Any
Tag = microsoft-sync-center-suspicious-network-connections
RiskScore = 50
Query = (Process.Path like r"%\\mobsync.exe" and not ((Net.Target.Ip like r"10.%" or Net.Target.Ip like r"192.168.%" or Net.Target.Ip like r"172.16.%" or Net.Target.Ip like r"172.17.%" or Net.Target.Ip like r"172.18.%" or Net.Target.Ip like r"172.19.%" or Net.Target.Ip like r"172.20.%" or Net.Target.Ip like r"172.21.%" or Net.Target.Ip like r"172.22.%" or Net.Target.Ip like r"172.23.%" or Net.Target.Ip like r"172.24.%" or Net.Target.Ip like r"172.25.%" or Net.Target.Ip like r"172.26.%" or Net.Target.Ip like r"172.27.%" or Net.Target.Ip like r"172.28.%" or Net.Target.Ip like r"172.29.%" or Net.Target.Ip like r"172.30.%" or Net.Target.Ip like r"172.31.%") and Net.Target.IpIsV6 == "false"))
GenericProperty1 = Net.Target.Ip
GenericProperty2 = Net.Target.IpIsV6

[ActivityMonitoringRule]
# Detects the addition of office test registry that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started
RuleName = Office Application Startup - Office Test
EventType = Reg.Any
Tag = office-application-startup-office-test
RiskScore = 50
Query = (Reg.Key.Target like r"HKCU\\Software\\Microsoft\\Office test\\Special\\Perf" or Reg.Key.Target like r"HKLM\\Software\\Microsoft\\Office test\\Special\\Perf")
Hive = HKLM,HKU
GenericProperty1 = Reg.Key.Target

[ActivityMonitoringRule]
# Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation
# by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.
RuleName = New DLL Added to AppCertDlls Registry Key
EventType = Reg.Any
Tag = new-dll-added-to-appcertdlls-registry-key
RiskScore = 50
Query = (Reg.Key.Target like r"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls" or Reg.Key.Path.New like r"HKLM\\SYSTEM\\CurentControlSet\\Control\\Session Manager\\AppCertDlls")
Hive = HKLM,HKU
GenericProperty1 = Reg.Key.Target
GenericProperty2 = Reg.Key.Path.New

[ActivityMonitoringRule]
# Detects the modification of PortProxy registry key which is used for port forwarding. For command execution see rule win_netsh_port_fwd.yml.
RuleName = PortProxy Registry Key
EventType = Reg.Any
Tag = portproxy-registry-key
RiskScore = 50
Query = Reg.Key.Target like r"HKLM\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\\tcp"
Hive = HKLM,HKU
GenericProperty1 = Reg.Key.Target

[ActivityMonitoringRule]
# Detects value modification of registry key containing path to binary used as screensaver.
RuleName = Path To Screensaver Binary Modified
EventType = Reg.Any
Tag = path-to-screensaver-binary-modified
RiskScore = 50
Query = (Reg.Key.Target like r"%\\Control Panel\\Desktop\\SCRNSAVE.EXE" and not ((Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\explorer.exe")))
Hive = HKLM,HKU
GenericProperty1 = Reg.Key.Target

[ActivityMonitoringRule]
# Detects Possible Squirrel Packages Manager as Lolbin
RuleName = Squirrel Lolbin
EventType = Process.Start
Tag = proc-start-squirrel-lolbin
RiskScore = 50
Query = ((Process.Path like r"%\\update.exe" and Process.CommandLine like r"%.exe%" and (Process.CommandLine like r"%--processStart%" or Process.CommandLine like r"%--processStartAndWait%" or Process.CommandLine like r"%--createShortcut%")) and not ((Process.CommandLine like r"%C:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\Discord\\Update.exe%" and Process.CommandLine like r"% --processStart%" and Process.CommandLine like r"%Discord.exe%") or (Process.CommandLine like r"%C:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\GitHubDesktop\\Update.exe%" and Process.CommandLine like r"%GitHubDesktop.exe%" and (Process.CommandLine like r"%--createShortcut%" or Process.CommandLine like r"%--processStartAndWait%")) or (Process.CommandLine like r"%C:\\Users\\%" and Process.CommandLine like r"%\\AppData\\Local\\Microsoft\\Teams\\Update.exe%" and Process.CommandLine like r"%Teams.exe%" and (Process.CommandLine like r"%--processStart%" or Process.CommandLine like r"%--createShortcut%"))))

[ActivityMonitoringRule]
# Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack
RuleName = Findstr Launching .lnk File
EventType = Process.Start
Tag = proc-start-findstr-launching-.lnk-file
RiskScore = 50
Query = (Process.Path like r"%\\findstr.exe" and Process.CommandLine like r"%.lnk")

[ActivityMonitoringRule]
# Detects using register-cimprovider.exe to execute arbitrary dll file.
RuleName = DLL Execution Via Register-cimprovider.exe
EventType = Process.Start
Tag = proc-start-dll-execution-via-register-cimprovider.exe
RiskScore = 50
Query = (Process.Path like r"%\\register-cimprovider.exe" and Process.CommandLine like r"%-path%" and Process.CommandLine like r"%dll%")

[ActivityMonitoringRule]
# Detects the use of the PhoneDeepLink parameter to potentially sideload a DLL file that doesnt exist. This non-existent DLL file is named "ShellChromeAPI.dll". 
# Adversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter
RuleName = DLL Sideloading via DeviceEnroller.exe
EventType = Process.Start
Tag = proc-start-dll-sideloading-via-deviceenroller.exe
RiskScore = 50
Query = (Process.Path like r"%\\deviceenroller.exe" and Process.CommandLine like r"%/PhoneDeepLink%")

[ActivityMonitoringRule]
# Detects a suspicious call to the user32.dll function that locks the user workstation
RuleName = Suspicious Workstation Locking via Rundll32
EventType = Process.Start
Tag = proc-start-suspicious-workstation-locking-via-rundll32
RiskScore = 50
Query = (Process.Path like r"%\\rundll32.exe" and Parent.Path like r"%\\cmd.exe" and Process.CommandLine like r"%user32.dll,%" and Process.CommandLine like r"%LockWorkStation%")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Execute C# code located in the consoleapp folder
RuleName = Application Whitelisting Bypass via Dnx.exe
EventType = Process.Start
Tag = proc-start-application-whitelisting-bypass-via-dnx.exe
RiskScore = 50
Query = Process.Path like r"%\\dnx.exe"

[ActivityMonitoringRule]
# Execute VBscript code that is referenced within the *.bgi file.
RuleName = Application Whitelisting Bypass via Bginfo
EventType = Process.Start
Tag = proc-start-application-whitelisting-bypass-via-bginfo
RiskScore = 50
Query = (Process.Path like r"%\\bginfo.exe" and Process.CommandLine like r"%/popup%" and Process.CommandLine like r"%/nolicprompt%")

[ActivityMonitoringRule]
# Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources.
# Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives
RuleName = Overwrite Deleted Data with Cipher
EventType = Process.Start
Tag = proc-start-overwrite-deleted-data-with-cipher
RiskScore = 50
Query = (Process.Path like r"%\\cipher.exe" and Process.CommandLine like r"% /w:%")

[ActivityMonitoringRule]
# Detects usage of the Get-ADComputer cmdlet to collect computer information and output it to a file
RuleName = Computer Discovery And Export Via Get-ADComputer Cmdlet
EventType = Process.Start
Tag = proc-start-computer-discovery-and-export-via-get-adcomputer-cmdlet
RiskScore = 50
Query = (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and (Process.CommandLine like r"%Get-ADComputer %" and Process.CommandLine like r"% -Filter \*" and (Process.CommandLine like r"% > %" or Process.CommandLine like r"% | Select %" or Process.CommandLine like r"%Out-File%" or Process.CommandLine like r"%Set-Content%" or Process.CommandLine like r"%Add-Content%")))

[ActivityMonitoringRule]
# Once established within a system or network, an adversary may use automated techniques for collecting internal data.
RuleName = Recon Information for Export with Command Prompt
EventType = Process.Start
Tag = proc-start-recon-information-for-export-with-command-prompt
RiskScore = 50
Query = (((Process.Path like r"%\\tree.com" or Process.Path like r"%\\WMIC.exe" or Process.Path like r"%\\doskey.exe" or Process.Path like r"%\\sc.exe") or Process.Name in ["wmic.exe", "DOSKEY.EXE", "sc.exe"]) and (Parent.CommandLine like r"% > \%TEMP\%\\%" or Parent.CommandLine like r"% > \%TMP\%\\%"))
GenericProperty1 = Parent.CommandLine

[ActivityMonitoringRule]
# Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe.
RuleName = SyncAppvPublishingServer Execute Arbitrary PowerShell Code
EventType = Process.Start
Tag = proc-start-syncappvpublishingserver-execute-arbitrary-powershell-code
RiskScore = 50
Query = ((Process.Path like r"%\\SyncAppvPublishingServer.exe" or Process.Name == "syncappvpublishingserver.exe") and Process.CommandLine like r"%\"n; %")

[ActivityMonitoringRule]
# Detects usage of hh.exe to execute/download remotely hosted .chm files.
RuleName = HH.exe Remote CHM File Execution
EventType = Process.Start
Tag = proc-start-hh.exe-remote-chm-file-execution
RiskScore = 50
Query = (Process.Path like r"%\\hh.exe" and Process.CommandLine like r"% http%")

[ActivityMonitoringRule]
# Detects suspicious execution of 'Powercfg.exe' to change lock screen timeout
RuleName = Suspicious Powercfg Execution To Change Lock Screen Timeout
EventType = Process.Start
Tag = proc-start-suspicious-powercfg-execution-to-change-lock-screen-timeout
RiskScore = 50
Query = ((Process.Path like r"%\\powercfg.exe" or Process.Name == "PowerCfg.exe") and ((Process.CommandLine like r"%/setacvalueindex %" and Process.CommandLine like r"%SCHEME\_CURRENT%" and Process.CommandLine like r"%SUB\_VIDEO%" and Process.CommandLine like r"%VIDEOCONLOCK%") or (Process.CommandLine like r"%-change %" and Process.CommandLine like r"%-standby-timeout-%")))

[ActivityMonitoringRule]
# Detects when a possible suspicious driver is being installed via pnputil.exe lolbin
RuleName = Suspicious Driver Install by pnputil.exe
EventType = Process.Start
Tag = proc-start-suspicious-driver-install-by-pnputil.exe
RiskScore = 50
Query = ((Process.CommandLine like r"%-i%" or Process.CommandLine like r"%/install%" or Process.CommandLine like r"%-a%" or Process.CommandLine like r"%/add-driver%" or Process.CommandLine like r"%.inf%") and Process.Path like r"%\\pnputil.exe")

[ActivityMonitoringRule]
# Execution of well known tools for data exfiltration and tunneling
RuleName = Exfiltration and Tunneling Tools Execution
EventType = Process.Start
Tag = proc-start-exfiltration-and-tunneling-tools-execution
RiskScore = 50
Query = (Process.Path like r"%\\plink.exe" or Process.Path like r"%\\socat.exe" or Process.Path like r"%\\stunnel.exe" or Process.Path like r"%\\httptunnel.exe")

[ActivityMonitoringRule]
# This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio.
# Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
RuleName = SQL Client Tools PowerShell Session Detection
EventType = Process.Start
Tag = proc-start-sql-client-tools-powershell-session-detection
RiskScore = 50
Query = ((Process.Path like r"%\\sqltoolsps.exe" or Parent.Path like r"%\\sqltoolsps.exe" or Process.Name like r"\\sqltoolsps.exe") and not (Parent.Path like r"%\\smss.exe"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects defence evasion attempt via odbcconf.exe execution to load DLL
RuleName = Application Whitelisting Bypass via DLL Loaded by odbcconf.exe
EventType = Process.Start
Tag = proc-start-application-whitelisting-bypass-via-dll-loaded-by-odbcconf.exe
RiskScore = 50
Query = (((Process.Path like r"%\\odbcconf.exe" or Process.Name == "odbcconf.exe") and (Process.CommandLine like r"%-a%" or Process.CommandLine like r"%-f%" or Process.CommandLine like r"%/a%" or Process.CommandLine like r"%/f%" or Process.CommandLine like r"%regsvr%")) or (Parent.Path like r"%\\odbcconf.exe" and Process.Path like r"%\\rundll32.exe"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects Obfuscated Powershell via RUNDLL LAUNCHER
RuleName = Invoke-Obfuscation RUNDLL LAUNCHER
EventType = Process.Start
Tag = proc-start-invoke-obfuscation-rundll-launcher
RiskScore = 50
Query = (Process.CommandLine like r"%rundll32.exe%" and Process.CommandLine like r"%shell32.dll%" and Process.CommandLine like r"%shellexec\_rundll%" and Process.CommandLine like r"%powershell%")

[ActivityMonitoringRule]
# Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p.
RuleName = DLL Execution via Rasautou.exe
EventType = Process.Start
Tag = proc-start-dll-execution-via-rasautou.exe
RiskScore = 50
Query = ((Process.Path like r"%\\rasautou.exe" or Process.Name == "rasdlui.exe") and (Process.CommandLine like r"% -d %" and Process.CommandLine like r"% -p %"))

[ActivityMonitoringRule]
# Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809 and newer to debug time travel (underlying call of tttracer.exe)
RuleName = Use of TTDInject.exe
EventType = Process.Start
Tag = proc-start-use-of-ttdinject.exe
RiskScore = 50
Query = (Process.Path like r"%ttdinject.exe" or Process.Name == "TTDInject.EXE")

[ActivityMonitoringRule]
# Detects a JAVA process running with remote debugging allowing more than just localhost to connect
RuleName = Java Running with Remote Debugging
EventType = Process.Start
Tag = proc-start-java-running-with-remote-debugging
RiskScore = 50
Query = ((Process.CommandLine like r"%transport=dt\_socket,address=%" and (Process.CommandLine like r"%jre1.%" or Process.CommandLine like r"%jdk1.%")) and not (Process.CommandLine like r"%address=127.0.0.1%" or Process.CommandLine like r"%address=localhost%"))

[ActivityMonitoringRule]
# Detects user accept agreement execution in psexec commandline
RuleName = Psexec Accepteula Condition
EventType = Process.Start
Tag = proc-start-psexec-accepteula-condition
RiskScore = 50
Query = (Process.Path like r"%\\psexec.exe" and Process.CommandLine like r"%accepteula%")

[ActivityMonitoringRule]
# Detects usage of bitsadmin downloading a file from a suspicious domain
RuleName = Bitsadmin Download from Suspicious Domain
EventType = Process.Start
Tag = proc-start-bitsadmin-download-from-suspicious-domain
RiskScore = 50
Query = ((Process.Path like r"%\\bitsadmin.exe" or Process.Name == "bitsadmin.exe") and (Process.CommandLine like r"% /transfer %" or Process.CommandLine like r"% /create %" or Process.CommandLine like r"% /addfile %") and (Process.CommandLine like r"%raw.githubusercontent.com%" or Process.CommandLine like r"%gist.githubusercontent.com%" or Process.CommandLine like r"%pastebin.com%" or Process.CommandLine like r"%cdn.discordapp.com/attachments/%" or Process.CommandLine like r"%mediafire.com%" or Process.CommandLine like r"%mega.nz%" or Process.CommandLine like r"%ddns.net%" or Process.CommandLine like r"%.paste.ee%" or Process.CommandLine like r"%.hastebin.com%" or Process.CommandLine like r"%.ghostbin.co/%" or Process.CommandLine like r"%ufile.io%" or Process.CommandLine like r"%storage.googleapis.com%" or Process.CommandLine like r"%anonfiles.com%" or Process.CommandLine like r"%send.exploit.in%" or Process.CommandLine like r"%transfer.sh%" or Process.CommandLine like r"%privatlab.net%" or Process.CommandLine like r"%privatlab.com%" or Process.CommandLine like r"%sendspace.com%"))

[ActivityMonitoringRule]
# Detects the use of native Windows tool, forfiles to execute a file. Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters.
RuleName = Indirect Command Exectuion via Forfiles
EventType = Process.Start
Tag = proc-start-indirect-command-exectuion-via-forfiles
RiskScore = 50
Query = ((Parent.Path like r"%\\forfiles.exe" and (Parent.CommandLine like r"% /c %" or Parent.CommandLine like r"% -c %") and (Parent.CommandLine like r"% /p %" or Parent.CommandLine like r"% -p %") and (Parent.CommandLine like r"% /m %" or Parent.CommandLine like r"% -m %")) and not (Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%xcopy%" and Process.CommandLine like r"%cmd /c del%"))
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# Use of the commandline to shutdown or reboot windows
RuleName = Suspicious Execution of Shutdown
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-shutdown
RiskScore = 50
Query = (Process.Path like r"%\\shutdown.exe" and (Process.CommandLine like r"%/r %" or Process.CommandLine like r"%/s %"))

[ActivityMonitoringRule]
# Detects the execution of whoami, which is often used by attackers after exploitation / privilege escalation but rarely used by administrators
RuleName = Whoami Execution
EventType = Process.Start
Tag = proc-start-whoami-execution
RiskScore = 50
Query = (Process.Path like r"%\\whoami.exe" or Process.Name == "whoami.exe")

[ActivityMonitoringRule]
# Detects use of executionpolicy option to set insecure policies
RuleName = Change PowerShell Policies to an Insecure Level
EventType = Process.Start
Tag = proc-start-change-powershell-policies-to-an-insecure-level
RiskScore = 50
Query = (((Process.CommandLine like r"% -executionpolicy %" or Process.CommandLine like r"% -ep %" or Process.CommandLine like r"% -exec %") and (Process.CommandLine like r"%Unrestricted%" or Process.CommandLine like r"%bypass%" or Process.CommandLine like r"%RemoteSigned%")) and not ((Process.CommandLine like r"%C:\\Program Files%" or Process.CommandLine like r"%C:\\ProgramData%" or Process.CommandLine like r"%\\AppData\\Roaming\\Code\\%")))

[ActivityMonitoringRule]
# Detects a when net.exe is called with a password in the command line
RuleName = Password Provided In Command Line Of Net.exe
EventType = Process.Start
Tag = proc-start-password-provided-in-command-line-of-net.exe
RiskScore = 50
Query = ((Process.Path like r"C:\\Windows\\System32\\net.exe" and Process.CommandLine like r"%net%" and Process.CommandLine like r"% use %" and Process.CommandLine like r"%:%\\\*" and Process.CommandLine like r"%/USER:% %") and not ((Process.CommandLine like r"% ")))

[ActivityMonitoringRule]
# Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism
RuleName = Abusing Findstr for Defense Evasion
EventType = Process.Start
Tag = proc-start-abusing-findstr-for-defense-evasion
RiskScore = 50
Query = ((Process.CommandLine like r"%findstr%" or Process.Path like r"%findstr.exe" or Process.Name == "FINDSTR.EXE") and (((Process.CommandLine like r"% /v %" or Process.CommandLine like r"% -v %") and (Process.CommandLine like r"% /l %" or Process.CommandLine like r"% -l %")) or ((Process.CommandLine like r"% /s %" or Process.CommandLine like r"% -s %") and (Process.CommandLine like r"% /i %" or Process.CommandLine like r"% -i %"))))

[ActivityMonitoringRule]
# Detects the use of a Microsoft signed script to execute commands
RuleName = CL_Mutexverifiers.ps1 Proxy Execution
EventType = Process.Start
Tag = proc-start-cl_mutexverifiers.ps1-proxy-execution
RiskScore = 50
Query = (Process.CommandLine like r"%\\CL\_Mutexverifiers.ps1%" and Process.CommandLine like r"%runAfterCancelProcess %")

[ActivityMonitoringRule]
# Detects scheduled task creations or modification to be run with high privileges on a suspicious schedule type
RuleName = Suspicious Schtasks Schedule Type With High Privileges
EventType = Process.Start
Tag = proc-start-suspicious-schtasks-schedule-type-with-high-privileges
RiskScore = 50
Query = ((Process.Path like r"%\\schtasks.exe" or Process.Name == "schtasks.exe") and (Process.CommandLine like r"% ONLOGON %" or Process.CommandLine like r"% ONSTART %" or Process.CommandLine like r"% ONCE %" or Process.CommandLine like r"% ONIDLE %") and (Process.CommandLine like r"%NT AUT%" or Process.CommandLine like r"% SYSTEM%" or Process.CommandLine like r"%HIGHEST%"))

[ActivityMonitoringRule]
# Detects usage of a CLSID folder name located in a suspicious location from the commandline as seen being used in IcedID
RuleName = Suspicious CLSID Folder Name In Suspicious Locations
EventType = Process.Start
Tag = proc-start-suspicious-clsid-folder-name-in-suspicious-locations
RiskScore = 50
Query = (((Process.CommandLine like r"%\\AppData\\Roaming\\%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%") and Process.CommandLine like r"%\\{%" and Process.CommandLine like r"%}\\%") and not ((Process.Path like r"%\\{%" and Process.Path like r"%}\\%") or (Process.Path == '') or (Process.Path like r"C:\\Windows\\System32\\drvinst.exe")))

[ActivityMonitoringRule]
# Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)
RuleName = Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)
EventType = Process.Start
Tag = proc-start-invocation-of-active-directory-diagnostic-tool-(ntdsutil.exe)
RiskScore = 50
Query = Process.Path like r"%\\ntdsutil.exe"

[ActivityMonitoringRule]
# Detects possible payload obfuscation via the commandline
RuleName = Suspicious Dosfuscation Character in Commandline
EventType = Process.Start
Tag = proc-start-suspicious-dosfuscation-character-in-commandline
RiskScore = 50
Query = (Process.CommandLine like r"%^^%" or Process.CommandLine like r"%,;,%" or Process.CommandLine like r"%\%COMSPEC:~%" or Process.CommandLine like r"% s^et %" or Process.CommandLine like r"% s^e^t %" or Process.CommandLine like r"% se^t %")

[ActivityMonitoringRule]
# Detects wmic known recon method to look for installed hotfixes, often used by pentest and attackers enum scripts
RuleName = WMIC Hotfix Recon
EventType = Process.Start
Tag = proc-start-wmic-hotfix-recon
RiskScore = 50
Query = ((Process.Name == "wmic.exe" or Process.Path like r"%\\WMIC.exe") and (Process.CommandLine like r"% qfe %" and Process.CommandLine like r"% get %" and Process.CommandLine like r"%Caption,Description,HotFixID,InstalledOn%"))

[ActivityMonitoringRule]
# Detects a Powershell process that contains download commands in its command line string
RuleName = PowerShell Download from URL
EventType = Process.Start
Tag = proc-start-powershell-download-from-url
RiskScore = 50
Query = ((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and Process.CommandLine like r"%new-object%" and Process.CommandLine like r"%net.webclient).%" and Process.CommandLine like r"%download%" and (Process.CommandLine like r"%string(%" or Process.CommandLine like r"%file(%"))

[ActivityMonitoringRule]
# Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud
RuleName = Node Process Executions
EventType = Process.Start
Tag = proc-start-node-process-executions
RiskScore = 50
Query = (Process.Path like r"%\\Adobe Creative Cloud Experience\\libs\\node.exe" and not (Process.CommandLine like r"%Adobe Creative Cloud Experience\\js%"))

[ActivityMonitoringRule]
# Detects execution of msdt.exe using the "cab" flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190
RuleName = MSDT.EXE Execution With Suspicious Cab Option
EventType = Process.Start
Tag = proc-start-msdt.exe-execution-with-suspicious-cab-option
RiskScore = 50
Query = ((Process.Path like r"%\\msdt.exe" or Process.Name == "msdt.exe") and (Process.CommandLine like r"% /cab %" or Process.CommandLine like r"% -cab %"))

[ActivityMonitoringRule]
# Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.
RuleName = Direct Autorun Keys Modification
EventType = Process.Start
Tag = proc-start-direct-autorun-keys-modification
RiskScore = 50
Query = (Process.Path like r"%\\reg.exe" and Process.CommandLine like r"%add%" and (Process.CommandLine like r"%\\software\\Microsoft\\Windows\\CurrentVersion\\Run%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows%" or Process.CommandLine like r"%\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders%" or Process.CommandLine like r"%\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell%"))

[ActivityMonitoringRule]
# Detects Obfuscated Powershell via COMPRESS OBFUSCATION
RuleName = Invoke-Obfuscation COMPRESS OBFUSCATION
EventType = Process.Start
Tag = proc-start-invoke-obfuscation-compress-obfuscation
RiskScore = 50
Query = (Process.CommandLine like r"%new-object%" and Process.CommandLine like r"%text.encoding]::ascii%" and (Process.CommandLine like r"%system.io.compression.deflatestream%" or Process.CommandLine like r"%system.io.streamreader%") and Process.CommandLine like r"%readtoend")

[ActivityMonitoringRule]
# Detects process creation events that use the Sysnative folder (common for CobaltStrike spawns)
RuleName = Process Creation Using Sysnative Folder
EventType = Process.Start
Tag = proc-start-process-creation-using-sysnative-folder
RiskScore = 50
Query = Process.CommandLine like r"C:\\Windows\\Sysnative\\%"

[ActivityMonitoringRule]
# Detects capture a network trace via netsh.exe trace functionality
RuleName = Capture a Network Trace with netsh.exe
EventType = Process.Start
Tag = proc-start-capture-a-network-trace-with-netsh.exe
RiskScore = 50
Query = (Process.CommandLine like r"%netsh%" and Process.CommandLine like r"%trace%" and Process.CommandLine like r"%start%")

[ActivityMonitoringRule]
# Deployment Image Servicing and Management tool. DISM is used to enumerate, install, uninstall, configure, and update features and packages in Windows images
RuleName = Dism Remove Online Package
EventType = Process.Start
Tag = proc-start-dism-remove-online-package
RiskScore = 50
Query = ((Process.Path like r"%\\DismHost.exe" and Parent.CommandLine like r"%/Online%" and Parent.CommandLine like r"%/Disable-Feature%") or (Process.Path like r"%\\Dism.exe" and Process.CommandLine like r"%/Online%" and Process.CommandLine like r"%/Disable-Feature%"))
GenericProperty1 = Parent.CommandLine

[ActivityMonitoringRule]
# Detects specific combinations of encoding methods in the PowerShell command lines
RuleName = Suspicious Xor PowerShell Command Line
EventType = Process.Start
Tag = proc-start-suspicious-xor-powershell-command-line
RiskScore = 50
Query = ((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and Process.CommandLine like r"%ForEach%" and Process.CommandLine like r"%Xor%")

[ActivityMonitoringRule]
# Detects when the registration of a VSS/VDS Provider as a COM+ application.
RuleName = Suspicious Registration via cscript.exe
EventType = Process.Start
Tag = proc-start-suspicious-registration-via-cscript.exe
RiskScore = 50
Query = (Process.Path like r"%\\cscript.exe" and Process.CommandLine like r"%-register%" and (Process.CommandLine like r"%\\Windows Kits\\10\\bin\\10.0.22000.0\\x64%" or Process.CommandLine like r"%\\Windows Kits\\10\\bin\\10.0.19041.0\\x64%" or Process.CommandLine like r"%\\Windows Kits\\10\\bin\\10.0.17763.0\\x64%"))

[ActivityMonitoringRule]
# Detect use of "/R <" to read and execute a file via cmd.exe
RuleName = Read and Execute a File Via Cmd.exe
EventType = Process.Start
Tag = proc-start-read-and-execute-a-file-via-cmd.exe
RiskScore = 50
Query = ((Process.Name == "Cmd.Exe" or Process.Path like r"%\\cmd.exe") and ((Parent.CommandLine like r"%cmd %" and Parent.CommandLine like r"%/r %" and Parent.CommandLine like r"%<%") or (Process.CommandLine like r"%cmd %" and Process.CommandLine like r"%/r %" and Process.CommandLine like r"%<%")))
GenericProperty1 = Parent.CommandLine

[ActivityMonitoringRule]
# The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules.
RuleName = Use of FSharp Interpreters
EventType = Process.Start
Tag = proc-start-use-of-fsharp-interpreters
RiskScore = 50
Query = (Process.Path like r"%\\fsianycpu.exe" or Process.Name == "fsianycpu.exe" or Process.Path like r"%\\fsi.exe" or Process.Name == "fsi.exe")

[ActivityMonitoringRule]
# Monitors for the hiding possible malicious files in the C:\Windows\Fonts\ location. This folder doesn't require admin privillege to be written and executed from.
RuleName = Writing Of Malicious Files To The Fonts Folder
EventType = Process.Start
Tag = proc-start-writing-of-malicious-files-to-the-fonts-folder
RiskScore = 50
Query = ((Process.CommandLine like r"%echo%" or Process.CommandLine like r"%copy%" or Process.CommandLine like r"%type%" or Process.CommandLine like r"%file createnew%" or Process.CommandLine like r"%cacls%") and Process.CommandLine like r"%C:\\Windows\\Fonts\\%" and (Process.CommandLine like r"%.sh%" or Process.CommandLine like r"%.exe%" or Process.CommandLine like r"%.dll%" or Process.CommandLine like r"%.bin%" or Process.CommandLine like r"%.bat%" or Process.CommandLine like r"%.cmd%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.msh%" or Process.CommandLine like r"%.reg%" or Process.CommandLine like r"%.scr%" or Process.CommandLine like r"%.ps%" or Process.CommandLine like r"%.vb%" or Process.CommandLine like r"%.jar%" or Process.CommandLine like r"%.pl%" or Process.CommandLine like r"%.inf%" or Process.CommandLine like r"%.cpl%" or Process.CommandLine like r"%.hta%" or Process.CommandLine like r"%.msi%" or Process.CommandLine like r"%.vbs%"))

[ActivityMonitoringRule]
# An attacker may execute an application as a SCR File using rundll32.exe desk.cpl,InstallScreenSaver
RuleName = Rundll32 InstallScreenSaver Execution
EventType = Process.Start
Tag = proc-start-rundll32-installscreensaver-execution
RiskScore = 50
Query = (Process.Path like r"%\\rundll32.exe" and Process.CommandLine like r"%InstallScreenSaver%")

[ActivityMonitoringRule]
# Remote.exe is part of WinDbg in the Windows SDK and can be used for AWL bypass and running remote files.
RuleName = Use of Remote.exe
EventType = Process.Start
Tag = proc-start-use-of-remote.exe
RiskScore = 50
Query = (Process.Path like r"%\\remote.exe" or Process.Name == "remote.exe")

[ActivityMonitoringRule]
# Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262
RuleName = Exploit for CVE-2017-0261
EventType = Process.Start
Tag = proc-start-exploit-for-cve-2017-0261
RiskScore = 50
Query = (Parent.Path like r"%\\WINWORD.EXE" and Process.Path like r"%\\FLTLDR.exe%")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects suspicious command line reg.exe tool adding key to RUN key in Registry
RuleName = Reg Add RUN Key
EventType = Process.Start
Tag = proc-start-reg-add-run-key
RiskScore = 50
Query = (Process.CommandLine like r"%reg%" and Process.CommandLine like r"% ADD %" and Process.CommandLine like r"%Software\\Microsoft\\Windows\\CurrentVersion\\Run%")

[ActivityMonitoringRule]
# Detects when GfxDownloadWrapper.exe downloads file from non standard URL
RuleName = GfxDownloadWrapper.exe Downloads File from Suspicious URL
EventType = Process.Start
Tag = proc-start-gfxdownloadwrapper.exe-downloads-file-from-suspicious-url
RiskScore = 50
Query = (Process.Path like r"%\\GfxDownloadWrapper.exe" and not (Process.CommandLine like r"%gameplayapi.intel.com%" and Parent.Path like r"%\\GfxDownloadWrapper.exe"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects attempts to bypass User Account Control (UAC) by hijacking the Microsoft Management Console (MMC) Windows Firewall snap-in
RuleName = UAC Bypass via Windows Firewall Snap-In Hijack
EventType = Process.Start
Tag = proc-start-uac-bypass-via-windows-firewall-snap-in-hijack
RiskScore = 50
Query = ((Parent.Path like r"%\\mmc.exe" and Parent.CommandLine like r"%WF.msc%") and not (Process.Path like r"%\\WerFault.exe"))
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# Adversaries may establish persistence by executing malicious content triggered by user inactivity.
# Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension
RuleName = Suspicious ScreenSave Change by Reg.exe
EventType = Process.Start
Tag = proc-start-suspicious-screensave-change-by-reg.exe
RiskScore = 50
Query = ((Process.Path like r"%\\reg.exe" and (Process.CommandLine like r"%HKEY\_CURRENT\_USER\\Control Panel\\Desktop%" or Process.CommandLine like r"%HKCU\\Control Panel\\Desktop%")) and ((Process.CommandLine like r"%/v ScreenSaveActive%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d 1%" and Process.CommandLine like r"%/f%") or (Process.CommandLine like r"%/v ScreenSaveTimeout%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d %" and Process.CommandLine like r"%/f%") or (Process.CommandLine like r"%/v ScreenSaverIsSecure%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d 0%" and Process.CommandLine like r"%/f%") or (Process.CommandLine like r"%/v SCRNSAVE.EXE%" and Process.CommandLine like r"%/t REG\_SZ%" and Process.CommandLine like r"%/d %" and Process.CommandLine like r"%.scr%" and Process.CommandLine like r"%/f%")))

[ActivityMonitoringRule]
# Dump sam, system or security hives using REG.exe utility
RuleName = Grabbing Sensitive Hives via Reg Utility
EventType = Process.Start
Tag = proc-start-grabbing-sensitive-hives-via-reg-utility
RiskScore = 50
Query = (Process.Path like r"%\\reg.exe" and (Process.CommandLine like r"%save%" or Process.CommandLine like r"%export%" or Process.CommandLine like r"%ˢave%" or Process.CommandLine like r"%eˣport%") and (Process.CommandLine like r"%hklm%" or Process.CommandLine like r"%hk˪m%" or Process.CommandLine like r"%hkey\_local\_machine%" or Process.CommandLine like r"%hkey\_˪ocal\_machine%" or Process.CommandLine like r"%hkey\_loca˪\_machine%" or Process.CommandLine like r"%hkey\_˪oca˪\_machine%") and (Process.CommandLine like r"%\\system" or Process.CommandLine like r"%\\sam" or Process.CommandLine like r"%\\security" or Process.CommandLine like r"%\\ˢystem" or Process.CommandLine like r"%\\syˢtem" or Process.CommandLine like r"%\\ˢyˢtem" or Process.CommandLine like r"%\\ˢam" or Process.CommandLine like r"%\\ˢecurity"))

[ActivityMonitoringRule]
# Detects the execution of DeviceCredentialDeployment to hide a process from view
RuleName = DeviceCredentialDeployment Execution
EventType = Process.Start
Tag = proc-start-devicecredentialdeployment-execution
RiskScore = 50
Query = Process.Path like r"%\\DeviceCredentialDeployment.exe"

[ActivityMonitoringRule]
# Detects usage of Msiexec.exe to install packages hosted remotely quietly
RuleName = Suspicious Msiexec Quiet Install From Remote Location
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-quiet-install-from-remote-location
RiskScore = 50
Query = ((Process.Path like r"%\\msiexec.exe" or Process.Name == "msiexec.exe") and (Process.CommandLine like r"%/i%" or Process.CommandLine like r"%-i%" or Process.CommandLine like r"%/package%" or Process.CommandLine like r"%-package%" or Process.CommandLine like r"%/a%" or Process.CommandLine like r"%-a%" or Process.CommandLine like r"%/j%" or Process.CommandLine like r"%-j%") and (Process.CommandLine like r"%/q%" or Process.CommandLine like r"%-q%") and (Process.CommandLine like r"%http%" or Process.CommandLine like r"%\\\\\*"))

[ActivityMonitoringRule]
# Detects attempts to disable the Windows Firewall using PowerShell
RuleName = Windows Firewall Disabled via PowerShell
EventType = Process.Start
Tag = proc-start-windows-firewall-disabled-via-powershell
RiskScore = 50
Query = (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\powershell\_ise.exe") or Process.Name == "PowerShell.EXE") and (Process.CommandLine like r"%Set-NetFirewallProfile %" and Process.CommandLine like r"% -Enabled %" and Process.CommandLine like r"% False%") and (Process.CommandLine like r"% -All %" or Process.CommandLine like r"%Public%" or Process.CommandLine like r"%Domain%" or Process.CommandLine like r"%Private%"))

[ActivityMonitoringRule]
# Adversaries may search for private key certificate files on compromised systems for insecurely stored credential
RuleName = Discover Private Keys
EventType = Process.Start
Tag = proc-start-discover-private-keys
RiskScore = 50
Query = ((Process.CommandLine like r"%dir %" or Process.CommandLine like r"%findstr %") and (Process.CommandLine like r"%.key%" or Process.CommandLine like r"%.pgp%" or Process.CommandLine like r"%.gpg%" or Process.CommandLine like r"%.ppk%" or Process.CommandLine like r"%.p12%" or Process.CommandLine like r"%.pem%" or Process.CommandLine like r"%.pfx%" or Process.CommandLine like r"%.cer%" or Process.CommandLine like r"%.p7b%" or Process.CommandLine like r"%.asc%"))

[ActivityMonitoringRule]
# An adversary might use WMI to check if a certain Remote Service is running on a remote device.
# When the test completes, a service information will be displayed on the screen if it exists.
# A common feedback message is that "No instance(s) Available" if the service queried is not running.
# A common error message is "Node - (provided IP or default) ERROR Description =The RPC server is unavailable" if the provided remote host is unreachable
RuleName = WMI Reconnaissance List Remote Services
EventType = Process.Start
Tag = proc-start-wmi-reconnaissance-list-remote-services
RiskScore = 50
Query = ((Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%/node:%" and Process.CommandLine like r"%service%"))

[ActivityMonitoringRule]
# Detects use of an encoded/obfuscated version of an IP address (hex, octal...) in an URL combined with a download command
RuleName = Obfuscated IP Download
EventType = Process.Start
Tag = proc-start-obfuscated-ip-download
RiskScore = 50
Query = ((Process.CommandLine like r"%Invoke-WebRequest%" or Process.CommandLine like r"%iwr %" or Process.CommandLine like r"%wget %" or Process.CommandLine like r"%curl %" or Process.CommandLine like r"%DownloadFile%" or Process.CommandLine like r"%DownloadString%") and ((Process.CommandLine like r"%//0x%" or Process.CommandLine like r"%.0x%" or Process.CommandLine like r"%.00x%") or (Process.CommandLine like r"%http://\%%" and Process.CommandLine like r"%\%2e%")))

[ActivityMonitoringRule]
# Detects suspicious IIS native-code module installations via command line
RuleName = IIS Native-Code Module Command Line Installation
EventType = Process.Start
Tag = proc-start-iis-native-code-module-command-line-installation
RiskScore = 50
Query = (Process.Path like r"%\\appcmd.exe" and Process.CommandLine like r"%install%" and Process.CommandLine like r"%module%" and Process.CommandLine like r"%/name:%")

[ActivityMonitoringRule]
# Detects audio capture via PowerShell Cmdlet.
RuleName = Audio Capture via PowerShell
EventType = Process.Start
Tag = proc-start-audio-capture-via-powershell
RiskScore = 50
Query = Process.CommandLine like r"%WindowsAudioDevice-Powershell-Cmdlet%"

[ActivityMonitoringRule]
# Execute commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This is used as a LOLBIN for example to bypass application whitelisting.
RuleName = Use of Pcalua For Execution
EventType = Process.Start
Tag = proc-start-use-of-pcalua-for-execution
RiskScore = 50
Query = (Process.Path like r"%\\pcalua.exe" and Process.CommandLine like r"% -a%")

[ActivityMonitoringRule]
# Detects the rare use of the command line tool shutdown to logoff a user
RuleName = Suspicious Execution of Shutdown to Log Out
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-shutdown-to-log-out
RiskScore = 50
Query = (Process.Path like r"%\\shutdown.exe" and Process.CommandLine like r"%/l%")

[ActivityMonitoringRule]
# Detects suspicious msiexec process starts with web addresses as parameter
RuleName = MsiExec Web Install
EventType = Process.Start
Tag = proc-start-msiexec-web-install
RiskScore = 50
Query = (Process.CommandLine like r"% msiexec%" and Process.CommandLine like r"%://%")

[ActivityMonitoringRule]
# Detects the use of a Microsoft signed script to execute commands and bypassing AppLocker.
RuleName = CL_LoadAssembly.ps1 Proxy Execution
EventType = Process.Start
Tag = proc-start-cl_loadassembly.ps1-proxy-execution
RiskScore = 50
Query = (Process.CommandLine like r"%\\CL\_LoadAssembly.ps1%" or Process.CommandLine like r"%LoadAssemblyFromPath %")

[ActivityMonitoringRule]
# Detects usage of Sysinternals PsService for service reconnaissance or tamper
RuleName = Use of Sysinternals PsService
EventType = Process.Start
Tag = proc-start-use-of-sysinternals-psservice
RiskScore = 50
Query = (Process.Name == "psservice.exe" or (Process.Path like r"%\\PsService.exe" or Process.Path like r"%\\PsService64.exe"))

[ActivityMonitoringRule]
# Detects usage of "MSOHTMED" to download arbitrary files
RuleName = Download Arbitrary Files Via MSOHTMED.EXE
EventType = Process.Start
Tag = proc-start-download-arbitrary-files-via-msohtmed.exe
RiskScore = 50
Query = ((Process.Path like r"%\\MSOHTMED.exe" or Process.Name == "MsoHtmEd.exe") and (Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%" or Process.CommandLine like r"%ftp://%"))

[ActivityMonitoringRule]
# Shadow Copies creation using operating systems utilities, possible credential access
RuleName = Shadow Copies Creation Using Operating Systems Utilities
EventType = Process.Start
Tag = proc-start-shadow-copies-creation-using-operating-systems-utilities
RiskScore = 50
Query = (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\wmic.exe" or Process.Path like r"%\\vssadmin.exe") or Process.Name in ["PowerShell.EXE", "pwsh.dll", "wmic.exe", "VSSADMIN.EXE"]) and (Process.CommandLine like r"%shadow%" and Process.CommandLine like r"%create%"))

[ActivityMonitoringRule]
# Detects execution from an Alternate Data Stream (ADS). Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection
RuleName = Execute From Alternate Data Streams
EventType = Process.Start
Tag = proc-start-execute-from-alternate-data-streams
RiskScore = 50
Query = (Process.CommandLine like r"%txt:%" and ((Process.CommandLine like r"%type %" and Process.CommandLine like r"% > %") or (Process.CommandLine like r"%makecab %" and Process.CommandLine like r"%.cab%") or (Process.CommandLine like r"%reg %" and Process.CommandLine like r"% export %") or (Process.CommandLine like r"%regedit %" and Process.CommandLine like r"% /E %") or (Process.CommandLine like r"%esentutl %" and Process.CommandLine like r"% /y %" and Process.CommandLine like r"% /d %" and Process.CommandLine like r"% /o %")))

[ActivityMonitoringRule]
# Detects usage of the "type" command to download/upload data from WebDAV server
RuleName = Potential Download/Upload Activity Using Type Command
EventType = Process.Start
Tag = proc-start-potential-download/upload-activity-using-type-command
RiskScore = 50
Query = ((Process.CommandLine like r"%type %" and Process.CommandLine like r"% > \\\\\*") or (Process.CommandLine like r"%type \\\\\*" and Process.CommandLine like r"% > %"))

[ActivityMonitoringRule]
# Detects a suspicious copy operation that tries to copy a program from a system (System32 or SysWOW64) directory to another on disk.
# Often used to move LOLBINs such as 'certutil' or 'desktopimgdownldr' to a different location with a different name in order to bypass detections based on locations
RuleName = Suspicious Copy From or To System32
EventType = Process.Start
Tag = proc-start-suspicious-copy-from-or-to-system32
RiskScore = 50
Query = (((Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%copy %") or ((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"%copy-item%" or Process.CommandLine like r"% copy %" or Process.CommandLine like r"%cpi %" or Process.CommandLine like r"% cp %")) or (Process.Path like r"%\\robocopy.exe" or Process.Path like r"%\\xcopy.exe")) and (Process.CommandLine like r"%\\System32%" or Process.CommandLine like r"%\\SysWOW64%"))

[ActivityMonitoringRule]
# Detects Wscript or Cscript executing from a drive other than C. This has been observed with Qakbot executing from within a mounted ISO file.
RuleName = Wscript Execution from Non C Drive
EventType = Process.Start
Tag = proc-start-wscript-execution-from-non-c-drive
RiskScore = 50
Query = (((Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\cscript.exe") and (Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.vbs%" or Process.CommandLine like r"%.vbe%") and Process.CommandLine like r"%:\\%") and not (((Process.CommandLine like r"% C:\\\*" or Process.CommandLine like r"% 'C:\\%" or Process.CommandLine like r"% \"C:\\\*")) or (Process.CommandLine like r"%\%%") or (Process.CommandLine like r"% \\\\\*")))

[ActivityMonitoringRule]
# Download and compress a remote file and store it in a cab file on local machine.
RuleName = Suspicious Diantz Download and Compress Into a CAB File
EventType = Process.Start
Tag = proc-start-suspicious-diantz-download-and-compress-into-a-cab-file
RiskScore = 50
Query = (Process.CommandLine like r"%diantz.exe%" and Process.CommandLine like r"% \\\\\*" and Process.CommandLine like r"%.cab%")

[ActivityMonitoringRule]
# Execute commands and binaries from the context of "forfiles". This is used as a LOLBIN for example to bypass application whitelisting.
RuleName = Use of Forfiles For Execution
EventType = Process.Start
Tag = proc-start-use-of-forfiles-for-execution
RiskScore = 50
Query = ((Process.Path like r"%\\forfiles.exe" or Process.Name == "forfiles.exe") and (Process.CommandLine like r"% /p %" or Process.CommandLine like r"% -p %") and (Process.CommandLine like r"% /m %" or Process.CommandLine like r"% -m %") and (Process.CommandLine like r"% /c %" or Process.CommandLine like r"% -c %"))

[ActivityMonitoringRule]
# Detects suspicious file execution by wscript and cscript
RuleName = WSF/JSE/JS/VBA/VBE File Execution
EventType = Process.Start
Tag = proc-start-wsf/jse/js/vba/vbe-file-execution
RiskScore = 50
Query = ((Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\cscript.exe") and (Process.CommandLine like r"%.jse%" or Process.CommandLine like r"%.vbe%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.vba%"))

[ActivityMonitoringRule]
# Detects when verclsid.exe is used to run COM object via GUID
RuleName = Verclsid.exe Runs COM Object
EventType = Process.Start
Tag = proc-start-verclsid.exe-runs-com-object
RiskScore = 50
Query = ((Process.Path like r"%\\verclsid.exe" or Process.Name == "verclsid.exe") and (Process.CommandLine like r"%/S%" and Process.CommandLine like r"%/C%"))

[ActivityMonitoringRule]
# Detects execution of wmic utility with the "computersystem" flag in order to obtain information about the machine such as the domain, username, model...etc.
RuleName = Suspicious Get ComputerSystem Information with WMIC
EventType = Process.Start
Tag = proc-start-suspicious-get-computersystem-information-with-wmic
RiskScore = 50
Query = ((Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"% computersystem %" and Process.CommandLine like r"% get %"))

[ActivityMonitoringRule]
# Detects weak passwords or often abused passwords (seen used by threat actors) via the CLI. An example would be a threat actor creating a new user via the net command and providing the password inline
RuleName = Weak or Abused Passwords In CLI
EventType = Process.Start
Tag = proc-start-weak-or-abused-passwords-in-cli
RiskScore = 50
Query = (Process.CommandLine like r"%Asd123.aaaa%" or Process.CommandLine like r"%password123%" or Process.CommandLine like r"%123456789%" or Process.CommandLine like r"%P@ssw0rd!%")

[ActivityMonitoringRule]
# Detect use of DirLister.exe
RuleName = Launch DirLister Executable
EventType = Process.Start
Tag = proc-start-launch-dirlister-executable
RiskScore = 50
Query = (Process.Name == "DirLister.exe" or Process.Path like r"%\\dirlister.exe")

[ActivityMonitoringRule]
# Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. Rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.
RuleName = XSL Script Processing
EventType = Process.Start
Tag = proc-start-xsl-script-processing
RiskScore = 50
Query = (((Process.Path like r"%\\wmic.exe" and Process.CommandLine like r"%/format%") and not ((Process.CommandLine like r"%/Format:List%" or Process.CommandLine like r"%/Format:htable%" or Process.CommandLine like r"%/Format:hform%" or Process.CommandLine like r"%/Format:table%" or Process.CommandLine like r"%/Format:mof%" or Process.CommandLine like r"%/Format:value%" or Process.CommandLine like r"%/Format:rawxml%" or Process.CommandLine like r"%/Format:xml%" or Process.CommandLine like r"%/Format:csv%"))) or Process.Path like r"%\\msxsl.exe")

[ActivityMonitoringRule]
# Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system
RuleName = Suspicious Scan Loop Network
EventType = Process.Start
Tag = proc-start-suspicious-scan-loop-network
RiskScore = 50
Query = ((Process.CommandLine like r"%for %" or Process.CommandLine like r"%foreach %") and (Process.CommandLine like r"%nslookup%" or Process.CommandLine like r"%ping%"))

[ActivityMonitoringRule]
# Detects the use the .NET InstallUtil.exe application in order to download arbitrary files. The files will be written to %LOCALAPPDATA%\Microsoft\Windows\INetCache\IE\
RuleName = Suspicious Execution of InstallUtil To Download
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-installutil-to-download
RiskScore = 50
Query = ((Process.Path like r"%\\InstallUtil.exe" or Process.Name == "InstallUtil.exe") and (Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%" or Process.CommandLine like r"%ftp://%"))

[ActivityMonitoringRule]
# Detects suspicious process related to rasdial.exe
RuleName = Suspicious RASdial Activity
EventType = Process.Start
Tag = proc-start-suspicious-rasdial-activity
RiskScore = 50
Query = Process.Path like r"%rasdial.exe"

[ActivityMonitoringRule]
# Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
RuleName = Execute Code with Pester.bat
EventType = Process.Start
Tag = proc-start-execute-code-with-pester.bat
RiskScore = 50
Query = (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and Process.CommandLine like r"%Pester%" and Process.CommandLine like r"%Get-Help%") or (Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%pester%" and Process.CommandLine like r"%;%" and (Process.CommandLine like r"%help%" or Process.CommandLine like r"%_%")))

[ActivityMonitoringRule]
# Download or Copy file with Extrac32
RuleName = Suspicious Extrac32 Execution
EventType = Process.Start
Tag = proc-start-suspicious-extrac32-execution
RiskScore = 50
Query = ((Process.CommandLine like r"%extrac32.exe%" or Process.Path like r"%\\extrac32.exe" or Process.Name == "extrac32.exe") and Process.CommandLine like r"%.cab%" and (Process.CommandLine like r"%/C%" or Process.CommandLine like r"%/Y%" or Process.CommandLine like r"% \\\\\*"))

[ActivityMonitoringRule]
# Executes arbitrary PowerShell code using SyncAppvPublishingServer.vbs
RuleName = SyncAppvPublishingServer VBS Execute Arbitrary PowerShell Code
EventType = Process.Start
Tag = proc-start-syncappvpublishingserver-vbs-execute-arbitrary-powershell-code
RiskScore = 50
Query = (Process.CommandLine like r"%\\SyncAppvPublishingServer.vbs%" and Process.CommandLine like r"%;%")

[ActivityMonitoringRule]
# The "Trace log generation tool for Media Foundation Tools" (Mftrace.exe) can be used to execute arbitrary binaries
RuleName = Use of Mftrace.exe
EventType = Process.Start
Tag = proc-start-use-of-mftrace.exe
RiskScore = 50
Query = (((Process.Path like r"%\\mftrace.exe" or Process.Name == "mftrace.exe") and (Process.CommandLine like r"%.exe %" and Process.CommandLine like r"%.exe")) or Parent.Path like r"%\\mftrace.exe")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detect use of the Windows 8.3 short name. Which could be used as a method to avoid command-line detection
RuleName = Use NTFS Short Name in Command Line
EventType = Process.Start
Tag = proc-start-use-ntfs-short-name-in-command-line
RiskScore = 50
Query = ((Process.CommandLine like r"%~1.exe%" or Process.CommandLine like r"%~1.bat%" or Process.CommandLine like r"%~1.msi%" or Process.CommandLine like r"%~1.vbe%" or Process.CommandLine like r"%~1.vbs%" or Process.CommandLine like r"%~1.dll%" or Process.CommandLine like r"%~1.ps1%" or Process.CommandLine like r"%~1.js%" or Process.CommandLine like r"%~1.hta%" or Process.CommandLine like r"%~2.exe%" or Process.CommandLine like r"%~2.bat%" or Process.CommandLine like r"%~2.msi%" or Process.CommandLine like r"%~2.vbe%" or Process.CommandLine like r"%~2.vbs%" or Process.CommandLine like r"%~2.dll%" or Process.CommandLine like r"%~2.ps1%" or Process.CommandLine like r"%~2.js%" or Process.CommandLine like r"%~2.hta%") and not ((Parent.Path like r"%\\WebEx\\WebexHost.exe" or Parent.Path like r"%\\thor\\thor64.exe") or Process.CommandLine like r"%C:\\xampp\\vcredist\\VCREDI~1.EXE%"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detect use of Ilasm.exe to compile c# code into dll or exe.
RuleName = Ilasm Lolbin Use Compile C-Sharp
EventType = Process.Start
Tag = proc-start-ilasm-lolbin-use-compile-c-sharp
RiskScore = 50
Query = (Process.Path like r"%\\ilasm.exe" or Process.Name == "ilasm.exe")

[ActivityMonitoringRule]
# Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.
RuleName = Capture Credentials with Rpcping.exe
EventType = Process.Start
Tag = proc-start-capture-credentials-with-rpcping.exe
RiskScore = 50
Query = ((Process.Path like r"%\\rpcping.exe" and (Process.CommandLine like r"%-s%" or Process.CommandLine like r"%/s%")) and ((Process.CommandLine like r"%-u%" and Process.CommandLine like r"%NTLM%") or (Process.CommandLine like r"%/u%" and Process.CommandLine like r"%NTLM%") or (Process.CommandLine like r"%-t%" and Process.CommandLine like r"%ncacn\_np%") or (Process.CommandLine like r"%/t%" and Process.CommandLine like r"%ncacn\_np%")))

[ActivityMonitoringRule]
# Detects processes that query known 3rd party registry keys that holds credentials via commandline
RuleName = Enumeration for 3rd Party Creds From CLI
EventType = Process.Start
Tag = proc-start-enumeration-for-3rd-party-creds-from-cli
RiskScore = 50
Query = (Process.CommandLine like r"%\\Software\\SimonTatham\\PuTTY\\Sessions%" or Process.CommandLine like r"%\\Software\\SimonTatham\\PuTTY\\SshHostKeys\\%" or Process.CommandLine like r"%\\Software\\Mobatek\\MobaXterm\\%" or Process.CommandLine like r"%\\Software\\WOW6432Node\\Radmin\\v3.0\\Server\\Parameters\\Radmin%" or Process.CommandLine like r"%\\Software\\Aerofox\\FoxmailPreview%" or Process.CommandLine like r"%\\Software\\Aerofox\\Foxmail\\V3.1%" or Process.CommandLine like r"%\\Software\\IncrediMail\\Identities%" or Process.CommandLine like r"%\\Software\\Qualcomm\\Eudora\\CommandLine%" or Process.CommandLine like r"%\\Software\\RimArts\\B2\\Settings%" or Process.CommandLine like r"%\\Software\\OpenVPN-GUI\\configs%" or Process.CommandLine like r"%\\Software\\Martin Prikryl\\WinSCP 2\\Sessions%" or Process.CommandLine like r"%\\Software\\FTPWare\\COREFTP\\Sites%" or Process.CommandLine like r"%\\Software\\DownloadManager\\Passwords%" or Process.CommandLine like r"%\\Software\\OpenSSH\\Agent\\Keys%" or Process.CommandLine like r"%\\Software\\TightVNC\\Server%" or Process.CommandLine like r"%\\Software\\ORL\\WinVNC3\\Password%" or Process.CommandLine like r"%\\Software\\RealVNC\\WinVNC4%")

[ActivityMonitoringRule]
# Detects usage of "query.exe" a system binary to exfil information such as "sessions" and "processes" for later use
RuleName = Query Usage To Exfil Data
EventType = Process.Start
Tag = proc-start-query-usage-to-exfil-data
RiskScore = 50
Query = (Process.Path like r"%\\Windows\\System32\\query.exe" and (Process.CommandLine like r"%session >%" or Process.CommandLine like r"%process >%"))

[ActivityMonitoringRule]
# Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)
RuleName = Command Line Execution with Suspicious URL and AppData Strings
EventType = Process.Start
Tag = proc-start-command-line-execution-with-suspicious-url-and-appdata-strings
RiskScore = 50
Query = (Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%http%" and Process.CommandLine like r"%://%" and Process.CommandLine like r"%\%AppData\%%")

[ActivityMonitoringRule]
# Detects suspicious process related to rundll32 based on arguments
RuleName = Suspicious Rundll32 Script in CommandLine
EventType = Process.Start
Tag = proc-start-suspicious-rundll32-script-in-commandline
RiskScore = 50
Query = (Process.CommandLine like r"%rundll32%" and Process.CommandLine like r"%mshtml,RunHTMLApplication%" and (Process.CommandLine like r"%javascript:%" or Process.CommandLine like r"%vbscript:%"))

[ActivityMonitoringRule]
# Conti recommendation to its affiliates to use esentutl to access NTDS dumped file. Trickbot also uses this utilities to get MSEdge info via its module pwgrab.
RuleName = Esentutl Gather Credentials
EventType = Process.Start
Tag = proc-start-esentutl-gather-credentials
RiskScore = 50
Query = (Process.CommandLine like r"%esentutl%" and Process.CommandLine like r"% /p%")

[ActivityMonitoringRule]
# Attackers can use print.exe for remote file copy
RuleName = Abusing Print Executable
EventType = Process.Start
Tag = proc-start-abusing-print-executable
RiskScore = 50
Query = ((Process.Path like r"%\\print.exe" and Process.CommandLine like r"print%" and Process.CommandLine like r"%/D%" and Process.CommandLine like r"%.exe%") and not (Process.CommandLine like r"%print.exe%"))

[ActivityMonitoringRule]
# Detects the desktopimgdownldr utility being used to download a remote file. An adversary may use desktopimgdownldr to download arbitrary files as an alternative to certutil.
RuleName = Remote File Download via Desktopimgdownldr Utility
EventType = Process.Start
Tag = proc-start-remote-file-download-via-desktopimgdownldr-utility
RiskScore = 50
Query = (Process.Path like r"%\\desktopimgdownldr.exe" and Parent.Path like r"%\\desktopimgdownldr.exe" and Process.CommandLine like r"%/lockscreenurl:http%")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects usage of "MSPUB" (Microsoft Publisher) to download arbitrary files
RuleName = Download Arbitrary Files Via MSPUB.EXE
EventType = Process.Start
Tag = proc-start-download-arbitrary-files-via-mspub.exe
RiskScore = 50
Query = ((Process.Path like r"%\\MSPUB.exe" or Process.Name == "MSPUB.exe") and (Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%" or Process.CommandLine like r"%ftp://%"))

[ActivityMonitoringRule]
# Detects the import of the '.reg' files from suspicious paths using the 'reg.exe' utility
RuleName = Imports Registry Key From a File Using Reg.exe
EventType = Process.Start
Tag = proc-start-imports-registry-key-from-a-file-using-reg.exe
RiskScore = 50
Query = (Process.Path like r"%\\reg.exe" and Process.CommandLine like r"% import %" and (Process.CommandLine like r"%C:\\Users\\%" or Process.CommandLine like r"%\%temp\%%" or Process.CommandLine like r"%\%tmp\%%" or Process.CommandLine like r"%\%appdata\%%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%C:\\Windows\\Temp\\%" or Process.CommandLine like r"%C:\\ProgramData\\%"))

[ActivityMonitoringRule]
# Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets
RuleName = Powershell Defender Exclusion
EventType = Process.Start
Tag = proc-start-powershell-defender-exclusion
RiskScore = 50
Query = ((Process.CommandLine like r"%Add-MpPreference %" or Process.CommandLine like r"%Set-MpPreference %") and (Process.CommandLine like r"% -ExclusionPath %" or Process.CommandLine like r"% -ExclusionExtension %" or Process.CommandLine like r"% -ExclusionProcess %" or Process.CommandLine like r"% -ExclusionIpAddress %"))

[ActivityMonitoringRule]
# Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.
RuleName = Detected Windows Software Discovery
EventType = Process.Start
Tag = proc-start-detected-windows-software-discovery
RiskScore = 50
Query = (Process.Path like r"%\\reg.exe" and Process.CommandLine like r"%query%" and Process.CommandLine like r"%\\software\\%" and Process.CommandLine like r"%/v%" and Process.CommandLine like r"%svcversion%")

[ActivityMonitoringRule]
# Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
# Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
RuleName = Suspicious Msiexec Execute Arbitrary DLL
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-execute-arbitrary-dll
RiskScore = 50
Query = ((Process.Path like r"%\\msiexec.exe" and (Process.CommandLine like r"% /y%" or Process.CommandLine like r"% -y%")) and not (((Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y \"C:\\Windows\\CCM\\%" or Process.CommandLine like r"%\\MsiExec.exe\" /Y C:\\Windows\\CCM\\%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y \"C:\\Windows\\CCM\\%" or Process.CommandLine like r"%\\MsiExec.exe\" -Y C:\\Windows\\CCM\\%"))))

[ActivityMonitoringRule]
# Detects an attempt to add a potentially crafted DLL as a plug in of the DNS Service.
# Detects an attempt to leverage dnscmd.exe to enumerate the DNS zones of a domain.
# DNS zones used to host the DNS records for a particular domain
RuleName = Discovery/Execution via dnscmd.exe
EventType = Process.Start
Tag = proc-start-discovery/execution-via-dnscmd.exe
RiskScore = 50
Query = (Process.Path like r"%\\dnscmd.exe" and ((Process.CommandLine like r"%/enumrecords%" or Process.CommandLine like r"%/enumzones%" or Process.CommandLine like r"%/ZonePrint%" or Process.CommandLine like r"%/info%") or (Process.CommandLine like r"%/config%" and Process.CommandLine like r"%/serverlevelplugindll%")))

[ActivityMonitoringRule]
# Detects usage of the 'Get-Clipboard' cmdlet via CLI
RuleName = PowerShell Get-Clipboard Cmdlet Via CLI
EventType = Process.Start
Tag = proc-start-powershell-get-clipboard-cmdlet-via-cli
RiskScore = 50
Query = Process.CommandLine like r"%Get-Clipboard%"

[ActivityMonitoringRule]
# Detects suspicious child processes of the Microsoft OneNote application. This may indicate an attempt to execute malicious embedded objects from a .one file.
RuleName = Suspicious Microsoft OneNote Child Process
EventType = Process.Start
Tag = proc-start-suspicious-microsoft-onenote-child-process
RiskScore = 50
Query = (Parent.Path like r"%\\onenote.exe" and ((Process.Name in ["RUNDLL32.exe", "REGSVR32.exe", "bitsadmin.exe", "CertUtil.exe", "InstallUtil.exe", "schtasks.exe", "wmic.exe", "cscript.exe", "wscript.exe", "CMSTP.EXE", "Microsoft.Workflow.Compiler.exe", "RegAsm.exe", "RegSvcs.exe", "MSHTA.EXE", "Msxsl.exe", "IEExec.exe", "Cmd.Exe", "PowerShell.EXE", "HH.exe", "javaw.exe", "pcalua.exe", "curl.exe", "ScriptRunner.exe", "CertOC.exe", "WorkFolders.exe", "odbcconf.exe", "msiexec.exe", "msdt.exe"] or (Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\bitsadmin.exe" or Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\installutil.exe" or Process.Path like r"%\\schtasks.exe" or Process.Path like r"%\\wmic.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\cmstp.exe" or Process.Path like r"%\\Microsoft.Workflow.Compiler.exe" or Process.Path like r"%\\regasm.exe" or Process.Path like r"%\\regsvcs.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\msxsl.exe" or Process.Path like r"%\\ieexec.exe" or Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\hh.exe" or Process.Path like r"%\\javaw.exe" or Process.Path like r"%\\pcalua.exe" or Process.Path like r"%\\curl.exe" or Process.Path like r"%\\scriptrunner.exe" or Process.Path like r"%\\certoc.exe" or Process.Path like r"%\\workfolders.exe" or Process.Path like r"%\\odbcconf.exe" or Process.Path like r"%\\msiexec.exe" or Process.Path like r"%\\msdt.exe")) or (Process.Path like r"%\\explorer.exe" and (Process.CommandLine like r"%.hta%" or Process.CommandLine like r"%.vb%" or Process.CommandLine like r"%.wsh%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.ps%" or Process.CommandLine like r"%.scr%" or Process.CommandLine like r"%.pif%" or Process.CommandLine like r"%.bat%" or Process.CommandLine like r"%.cmd%")) or (Process.Path like r"%\\AppData\\%" or Process.Path like r"%\\Users\\Public\\%" or Process.Path like r"%\\ProgramData\\%" or Process.Path like r"%\\Windows\\Tasks\\%" or Process.Path like r"%\\Windows\\Temp\\%" or Process.Path like r"%\\Windows\\System32\\Tasks\\%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects an attempt to execute code or create service on remote host via winrm.vbs.
RuleName = Remote Code Execute via Winrm.vbs
EventType = Process.Start
Tag = proc-start-remote-code-execute-via-winrm.vbs
RiskScore = 50
Query = ((Process.Path like r"%\\cscript.exe" or Process.Name == "cscript.exe") and (Process.CommandLine like r"%winrm%" and Process.CommandLine like r"%invoke Create wmicimv2/Win32\_%" and Process.CommandLine like r"%-r:http%"))

[ActivityMonitoringRule]
# Adversaries can abuse of C:\Windows\System32\gatherNetworkInfo.vbs script along with cscript.exe to gather information about the target
RuleName = GatherNetworkInfo.vbs Script Usage
EventType = Process.Start
Tag = proc-start-gathernetworkinfo.vbs-script-usage
RiskScore = 50
Query = (Process.CommandLine like r"%cscript.exe%" and Process.CommandLine like r"%gatherNetworkInfo.vbs%")

[ActivityMonitoringRule]
# Detects nltest commands that can be used for information discovery
RuleName = Recon Activity with NLTEST
EventType = Process.Start
Tag = proc-start-recon-activity-with-nltest
RiskScore = 50
Query = ((Process.Path like r"%\\nltest.exe" or Process.Name == "nltestrk.exe") and ((Process.CommandLine like r"%/server%" and Process.CommandLine like r"%/query%") or (Process.CommandLine like r"%/dclist:%" or Process.CommandLine like r"%/parentdomain%" or Process.CommandLine like r"%/domain\_trusts%" or Process.CommandLine like r"%/trusted\_domains%" or Process.CommandLine like r"%/user%")))

[ActivityMonitoringRule]
# Detects a command line process that uses explorer.exe to launch arbitrary commands or binaries,
# which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer spawning from "svchost"
RuleName = Explorer Process Tree Break
EventType = Process.Start
Tag = proc-start-explorer-process-tree-break
RiskScore = 50
Query = (Process.CommandLine like r"%/factory,{75dff2b7-6936-4c06-a8bb-676a7b00b24b}%" or (Process.CommandLine like r"%explorer.exe%" and Process.CommandLine like r"% /root,%"))

[ActivityMonitoringRule]
# Detects the use of a Microsoft signed script executing a managed DLL with PowerShell.
RuleName = UtilityFunctions.ps1 Proxy Dll
EventType = Process.Start
Tag = proc-start-utilityfunctions.ps1-proxy-dll
RiskScore = 50
Query = (Process.CommandLine like r"%UtilityFunctions.ps1%" or Process.CommandLine like r"%RegSnapin %")

[ActivityMonitoringRule]
# Detects modification addition to the 'TypedPaths' key in the user or admin registry via the commandline. Which might indicate persistence attempt
RuleName = Persistence Via TypedPaths - CommandLine
EventType = Process.Start
Tag = proc-start-persistence-via-typedpaths-commandline
RiskScore = 50
Query = Process.CommandLine like r"%\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\TypedPaths%"

[ActivityMonitoringRule]
# Detect the use of Jlaive to execute assemblies in a copied PowerShell
RuleName = Jlaive Usage For Assembly Execution In-Memory
EventType = Process.Start
Tag = proc-start-jlaive-usage-for-assembly-execution-in-memory
RiskScore = 50
Query = ((Parent.Path like r"%\\cmd.exe" and Parent.CommandLine like r"%.bat") and ((Process.Path like r"%\\xcopy.exe" and Process.CommandLine like r"%powershell.exe%" and Process.CommandLine like r"%.bat.exe%") or (Process.Path like r"%\\xcopy.exe" and Process.CommandLine like r"%pwsh.exe%" and Process.CommandLine like r"%.bat.exe%") or (Process.Path like r"%\\attrib.exe" and Process.CommandLine like r"%+s%" and Process.CommandLine like r"%+h%" and Process.CommandLine like r"%.bat.exe%")))
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# Detects potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to enable routing of network packets that would otherwise not reach their intended destination.
RuleName = Potential Remote Desktop Tunneling
EventType = Process.Start
Tag = proc-start-potential-remote-desktop-tunneling
RiskScore = 50
Query = (Process.CommandLine like r"%:3389%" and (Process.CommandLine like r"% -L %" or Process.CommandLine like r"% -P %" or Process.CommandLine like r"% -R %" or Process.CommandLine like r"% -pw %" or Process.CommandLine like r"% -ssh %"))

[ActivityMonitoringRule]
# Detects execution of ftp.exe script execution with the "-s" flag and any child processes ran by ftp.exe
RuleName = LOLBIN Execution Of The FTP.EXE Binary
EventType = Process.Start
Tag = proc-start-lolbin-execution-of-the-ftp.exe-binary
RiskScore = 50
Query = (Parent.Path like r"%\\ftp.exe" or ((Process.Path like r"%\\ftp.exe" or Process.Name == "ftp.exe") and Process.CommandLine like r"%-s:%"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects WMIC executing suspicious or recon commands
RuleName = Suspicious WMIC Execution
EventType = Process.Start
Tag = proc-start-suspicious-wmic-execution
RiskScore = 50
Query = (((Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%process%" and Process.CommandLine like r"%call%" and Process.CommandLine like r"%create %")) or ((Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"% path %" and (Process.CommandLine like r"%AntiVirus%" or Process.CommandLine like r"%Firewall%") and Process.CommandLine like r"%Product%" and Process.CommandLine like r"% get %" and Process.CommandLine like r"%wmic csproduct get name%")))

[ActivityMonitoringRule]
# Adversaries can interact with the DACLs using built-in Windows commands takeown which can grant adversaries higher permissions on specific files and folders
RuleName = Suspicious Recursive Takeown
EventType = Process.Start
Tag = proc-start-suspicious-recursive-takeown
RiskScore = 50
Query = (Process.Path like r"%\\takeown.exe" and Process.CommandLine like r"%/f %" and Process.CommandLine like r"%/r%")

[ActivityMonitoringRule]
# Executes SCT script using scrobj.dll from a command in entered into a specially prepared INF file.
RuleName = InfDefaultInstall.exe .inf Execution
EventType = Process.Start
Tag = proc-start-infdefaultinstall.exe-.inf-execution
RiskScore = 50
Query = (Process.CommandLine like r"%InfDefaultInstall.exe %" and Process.CommandLine like r"%.inf%")

[ActivityMonitoringRule]
# Detects when attackers use "sc.exe" or the powershell "Set-Service" cmdlet to change the startup type of a service to "disabled"
RuleName = Sc Or Set-Service Cmdlet Execution to Disable Services
EventType = Process.Start
Tag = proc-start-sc-or-set-service-cmdlet-execution-to-disable-services
RiskScore = 50
Query = (((Process.Path like r"%\\sc.exe" or Process.Name == "sc.exe") and (Process.CommandLine like r"% config %" and Process.CommandLine like r"%start%" and (Process.CommandLine like r"%disabled%" or Process.CommandLine like r"%demand%"))) or (Process.CommandLine like r"%Set-Service%" and Process.CommandLine like r"%-StartupType%" and (Process.CommandLine like r"%Disabled%" or Process.CommandLine like r"%Manual%")))

[ActivityMonitoringRule]
# Adversaries can use the inbuilt expand utility to decompress cab files as seen in recent Iranian MeteorExpress attack
RuleName = Cabinet File Expansion
EventType = Process.Start
Tag = proc-start-cabinet-file-expansion
RiskScore = 50
Query = ((Process.Path like r"%\\expand.exe" and (Process.CommandLine like r"%.cab%" or Process.CommandLine like r"%/F:%" or Process.CommandLine like r"%-F:%" or Process.CommandLine like r"%C:\\ProgramData\\%" or Process.CommandLine like r"%C:\\Public\\%" or Process.CommandLine like r"%\\AppData\\Local\\Temp\\%" or Process.CommandLine like r"%\\AppData\\Roaming\\Temp\\%")) and not ((Parent.Path like r"C:\\Program Files (x86)\\Dell\\UpdateService\\ServiceShell.exe" and Process.CommandLine like r"%C:\\ProgramData\\Dell\\UpdateService\\Temp\\%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects suspicious command line that adds an account to the local administrators/administrateurs group
RuleName = Add User to Local Administrators
EventType = Process.Start
Tag = proc-start-add-user-to-local-administrators
RiskScore = 50
Query = (((Process.CommandLine like r"%localgroup %" and Process.CommandLine like r"% /add%") or (Process.CommandLine like r"%Add-LocalGroupMember %" and Process.CommandLine like r"% -Group %")) and (Process.CommandLine like r"% administrators %" or Process.CommandLine like r"% administrateur%"))

[ActivityMonitoringRule]
# Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format
RuleName = JSC Convert Javascript To Executable
EventType = Process.Start
Tag = proc-start-jsc-convert-javascript-to-executable
RiskScore = 50
Query = (Process.Path like r"%\\jsc.exe" and Process.CommandLine like r"%.js%")

[ActivityMonitoringRule]
# BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished. When the job runs on the system the command specified in the BITS job will be executed. This can be abused by actors to create a backdoor within the system and for persistence. It will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded
RuleName = Monitoring For Persistence Via BITS
EventType = Process.Start
Tag = proc-start-monitoring-for-persistence-via-bits
RiskScore = 50
Query = ((Process.CommandLine like r"%bitsadmin%" and Process.CommandLine like r"%/SetNotifyCmdLine%" and (Process.CommandLine like r"%\%COMSPEC\%%" or Process.CommandLine like r"%cmd.exe%" or Process.CommandLine like r"%regsvr32.exe%")) or (Process.CommandLine like r"%bitsadmin%" and Process.CommandLine like r"%/Addfile%" and (Process.CommandLine like r"%http:%" or Process.CommandLine like r"%https:%" or Process.CommandLine like r"%ftp:%" or Process.CommandLine like r"%ftps:%")))

[ActivityMonitoringRule]
# Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.
# Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.
# Windows stores local service configuration information in the Registry under HKLM\SYSTEM\CurrentControlSet\Services
RuleName = Service ImagePath Change with Reg.exe
EventType = Process.Start
Tag = proc-start-service-imagepath-change-with-reg.exe
RiskScore = 50
Query = (Process.Path like r"%\\reg.exe" and Process.CommandLine like r"%add %" and Process.CommandLine like r"%SYSTEM\\CurrentControlSet\\Services\\%" and Process.CommandLine like r"% ImagePath %" and (Process.CommandLine like r"% /d %" or Process.CommandLine like r"% -d %"))

[ActivityMonitoringRule]
# Detects the execution of sigverif binary as a parent process which could indicate it being used as a LOLBIN to proxy execution
RuleName = Suspicious Sigverif Execution
EventType = Process.Start
Tag = proc-start-suspicious-sigverif-execution
RiskScore = 50
Query = Parent.Path like r"%\\sigverif.exe"
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Performs execution of specified file, can be used for defensive evasion.
RuleName = Suspicious Subsystem for Linux Bash Execution
EventType = Process.Start
Tag = proc-start-suspicious-subsystem-for-linux-bash-execution
RiskScore = 50
Query = ((Process.CommandLine like r"%bash.exe%" and Process.CommandLine like r"%-c %") and not (((Parent.CommandLine like r"%C:\\Program Files\\Git\\post-install.bat%" or Parent.CommandLine like r"%C:\\Program Files (x86)\\Git\\post-install.bat%" or Parent.CommandLine like r"%echo /etc/post-install/%.post%") or Process.CommandLine like r"%echo /etc/post-install/%.post%")))
GenericProperty1 = Parent.CommandLine

[ActivityMonitoringRule]
# Detects inline windows shell commands redirecting output via the ">" symbol to a suspicious location
RuleName = Suspicious CMD Shell Redirect
EventType = Process.Start
Tag = proc-start-suspicious-cmd-shell-redirect
RiskScore = 50
Query = ((Process.Path like r"%\\cmd.exe" or Process.Name == "Cmd.Exe") and (Process.CommandLine like r"% > \%USERPROFILE\%\\%" and Process.CommandLine like r"% > \%APPDATA\%\\%" and Process.CommandLine like r"% > \\Users\\Public\\%" and Process.CommandLine like r"% > C:\\Users\\Public\\%" and Process.CommandLine like r"% > \%TEMP\%\\%" and Process.CommandLine like r"% > \%TMP\%\\%"))

[ActivityMonitoringRule]
# Once established within a system or network, an adversary may use automated techniques for collecting internal data.
RuleName = Automated Collection Command Prompt
EventType = Process.Start
Tag = proc-start-automated-collection-command-prompt
RiskScore = 50
Query = ((Process.CommandLine like r"%.doc%" or Process.CommandLine like r"%.docx%" or Process.CommandLine like r"%.xls%" or Process.CommandLine like r"%.xlsx%" or Process.CommandLine like r"%.ppt%" or Process.CommandLine like r"%.pptx%" or Process.CommandLine like r"%.rtf%" or Process.CommandLine like r"%.pdf%" or Process.CommandLine like r"%.txt%") and ((Process.CommandLine like r"%dir %" and Process.CommandLine like r"% /b %" and Process.CommandLine like r"% /s %") or (Process.Name == "FINDSTR.EXE" and (Process.CommandLine like r"% /e %" or Process.CommandLine like r"% /si %"))))

[ActivityMonitoringRule]
# Detects process dump via legitimate sqldumper.exe binary
RuleName = Dumping Process via Sqldumper.exe
EventType = Process.Start
Tag = proc-start-dumping-process-via-sqldumper.exe
RiskScore = 50
Query = (Process.Path like r"%\\sqldumper.exe" and (Process.CommandLine like r"%0x0110%" or Process.CommandLine like r"%0x01100:40%"))

[ActivityMonitoringRule]
# Detects events that appear when a user click on a link file with a powershell command in it
RuleName = Hidden Powershell in Link File Pattern
EventType = Process.Start
Tag = proc-start-hidden-powershell-in-link-file-pattern
RiskScore = 50
Query = (Parent.Path like r"C:\\Windows\\explorer.exe" and Process.Path like r"C:\\Windows\\System32\\cmd.exe" and Process.CommandLine like r"%powershell%" and Process.CommandLine like r"%.lnk%")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects execution of of Dxcap.exe
RuleName = Application Whitelisting Bypass via Dxcap.exe
EventType = Process.Start
Tag = proc-start-application-whitelisting-bypass-via-dxcap.exe
RiskScore = 50
Query = ((Process.Path like r"%\\DXCap.exe" or Process.Name == "DXCap.exe") and Process.CommandLine like r"% -c %")

[ActivityMonitoringRule]
# By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system.
# When the sticky keys are "activated" the privilleged shell is launched.
RuleName = Sticky-Key Backdoor Copy Cmd.exe
EventType = Process.Start
Tag = proc-start-sticky-key-backdoor-copy-cmd.exe
RiskScore = 50
Query = Process.CommandLine like r"copy /y C:\\windows\\system32\\cmd.exe C:\\windows\\system32\\sethc.exe"

[ActivityMonitoringRule]
# Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files
RuleName = Remove Windows Defender Definition Files
EventType = Process.Start
Tag = proc-start-remove-windows-defender-definition-files
RiskScore = 50
Query = (Process.Name == "MpCmdRun.exe" and Process.CommandLine like r"% -RemoveDefinitions%" and Process.CommandLine like r"% -All%")

[ActivityMonitoringRule]
# Detects svchost process spawning an instance of an office application. This happens when the initial word application create an instance of one of the office COM objects such as 'Word.Application', 'Excel.Application'...etc. This can be used by malicious actor to create a malicious office document with macros on the fly. (See vba2clr project in reference)
RuleName = Svchost Spawning Office Application
EventType = Process.Start
Tag = proc-start-svchost-spawning-office-application
RiskScore = 50
Query = (Parent.Path like r"%\\svchost.exe" and (Process.Path like r"%\\winword.exe" or Process.Path like r"%\\excel.exe" or Process.Path like r"%\\powerpnt.exe" or Process.Path like r"%\\msaccess.exe" or Process.Path like r"%\\mspub.exe" or Process.Path like r"%\\eqnedt32.exe" or Process.Path like r"%\\visio.exe"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects a suspicious child process of userinit
RuleName = Suspicious Userinit Child Process
EventType = Process.Start
Tag = proc-start-suspicious-userinit-child-process
RiskScore = 50
Query = (Parent.Path like r"%\\userinit.exe" and not ((Process.CommandLine like r"%\\netlogon\\%") or (Process.Path like r"%\\explorer.exe" or Process.Name == "explorer.exe")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects the use of the 'Launch-VsDevShell.ps1' Microsoft signed script to execute commands.
RuleName = Launch-VsDevShell.PS1 Proxy Execution
EventType = Process.Start
Tag = proc-start-launch-vsdevshell.ps1-proxy-execution
RiskScore = 50
Query = (Process.CommandLine like r"%Launch-VsDevShell.ps1%" and (Process.CommandLine like r"%VsWherePath %" or Process.CommandLine like r"%VsInstallationPath %"))

[ActivityMonitoringRule]
# Detects usage of Dsacls to grant over permissive permissions
RuleName = Abusing Permissions Using Dsacls
EventType = Process.Start
Tag = proc-start-abusing-permissions-using-dsacls
RiskScore = 50
Query = ((Process.Path like r"%\\dsacls.exe" or Process.Name == "DSACLS.EXE") and Process.CommandLine like r"% /G %" and (Process.CommandLine like r"%GR%" or Process.CommandLine like r"%GE%" or Process.CommandLine like r"%GW%" or Process.CommandLine like r"%GA%" or Process.CommandLine like r"%WP%" or Process.CommandLine like r"%WD%"))

[ActivityMonitoringRule]
# Detects suspicious process run from unusual locations
RuleName = Suspicious Process Start Locations
EventType = Process.Start
Tag = proc-start-suspicious-process-start-locations
RiskScore = 50
Query = ((Process.Path like r"%:\\RECYCLER\\%" or Process.Path like r"%:\\SystemVolumeInformation\\%") or (Process.Path like r"C:\\Windows\\Tasks\\%" or Process.Path like r"C:\\Windows\\debug\\%" or Process.Path like r"C:\\Windows\\fonts\\%" or Process.Path like r"C:\\Windows\\help\\%" or Process.Path like r"C:\\Windows\\drivers\\%" or Process.Path like r"C:\\Windows\\addins\\%" or Process.Path like r"C:\\Windows\\cursors\\%" or Process.Path like r"C:\\Windows\\system32\\tasks\\%"))

[ActivityMonitoringRule]
# Detects execution of ntdsutil.exe to perform different actions such as restoring snapshots...etc.
RuleName = Suspicious Usage Of Active Directory Diagnostic Tool (ntdsutil.exe)
EventType = Process.Start
Tag = proc-start-suspicious-usage-of-active-directory-diagnostic-tool-(ntdsutil.exe)
RiskScore = 50
Query = ((Process.Path like r"%\\ntdsutil.exe" or Process.Name == "ntdsutil.exe") and ((Process.CommandLine like r"%snapshot%" and Process.CommandLine like r"%mount %") or (Process.CommandLine like r"%ac%" and Process.CommandLine like r"% i%" and Process.CommandLine like r"% ntds%")))

[ActivityMonitoringRule]
# Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon
RuleName = Uninstall Crowdstrike Falcon
EventType = Process.Start
Tag = proc-start-uninstall-crowdstrike-falcon
RiskScore = 50
Query = (Process.CommandLine like r"%\\WindowsSensor.exe%" and Process.CommandLine like r"% /uninstall%" and Process.CommandLine like r"% /quiet%")

[ActivityMonitoringRule]
# Qbot used reg.exe to add Defender folder exceptions for folders within AppData and ProgramData.
RuleName = Registry Defender Exclusions
EventType = Process.Start
Tag = proc-start-registry-defender-exclusions
RiskScore = 50
Query = (Process.Path like r"%\\reg.exe" and (Process.CommandLine like r"%SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Paths%" or Process.CommandLine like r"%SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Paths%") and Process.CommandLine like r"%ADD %" and Process.CommandLine like r"%/t %" and Process.CommandLine like r"%REG\_DWORD %" and Process.CommandLine like r"%/v %" and Process.CommandLine like r"%/d %" and Process.CommandLine like r"%0%")

[ActivityMonitoringRule]
# Detects the execution utitilies often found in Visual Studio tools that hardcode the call to the binary "link.exe". They can be abused to sideload any binary with the same name
RuleName = Sideloading Link.EXE
EventType = Process.Start
Tag = proc-start-sideloading-link.exe
RiskScore = 50
Query = ((Process.Path like r"%\\link.exe" and Process.CommandLine like r"%LINK /%") and not (((Parent.Path like r"C:\\Program Files\\Microsoft Visual Studio\\%" or Parent.Path like r"C:\\Program Files (x86)\\Microsoft Visual Studio\\%") and Parent.Path like r"%\\VC\\Tools\\MSVC\\%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects usage of the "wusa.exe" (Windows Update Standalone Installer) utility to extract cab using the "/extract" argument which is not longer supported. This could indicate an attacker using an old technique
RuleName = Wusa Extracting Cab Files
EventType = Process.Start
Tag = proc-start-wusa-extracting-cab-files
RiskScore = 50
Query = (Process.Path like r"%\\wusa.exe" and Process.CommandLine like r"%/extract:%")

[ActivityMonitoringRule]
# Detection well-known mimikatz command line arguments
RuleName = Mimikatz Command Line
EventType = Process.Start
Tag = proc-start-mimikatz-command-line
RiskScore = 50
Query = ((((Process.CommandLine like r"%DumpCreds%" or Process.CommandLine like r"%invoke-mimikatz%") or ((Process.CommandLine like r"%rpc%" or Process.CommandLine like r"%token%" or Process.CommandLine like r"%crypto%" or Process.CommandLine like r"%dpapi%" or Process.CommandLine like r"%sekurlsa%" or Process.CommandLine like r"%kerberos%" or Process.CommandLine like r"%lsadump%" or Process.CommandLine like r"%privilege%" or Process.CommandLine like r"%process%" or Process.CommandLine like r"%vault%") and Process.CommandLine like r"%::%")) or ((Process.CommandLine like r"%aadcookie%" or Process.CommandLine like r"%detours%" or Process.CommandLine like r"%memssp%" or Process.CommandLine like r"%mflt%" or Process.CommandLine like r"%ncroutemon%" or Process.CommandLine like r"%ngcsign%" or Process.CommandLine like r"%printnightmare%" or Process.CommandLine like r"%skeleton%" or Process.CommandLine like r"%preshutdown%" or Process.CommandLine like r"%mstsc%" or Process.CommandLine like r"%multirdp%") and Process.CommandLine like r"%::%")) and not ((Process.CommandLine like r"%function Convert-GuidToCompressedGuid%") or (Parent.Path like r"%\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe" and Process.CommandLine like r"%/d /s /c %" and Process.CommandLine like r"%checkfilenameiocs --ioc-path %")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects a copy execution that targets a shadow copy (sometimes used to copy registry hives that are in use)
RuleName = Copy from Volume Shadow Copy
EventType = Process.Start
Tag = proc-start-copy-from-volume-shadow-copy
RiskScore = 50
Query = Process.CommandLine like r"%copy \\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy%"

[ActivityMonitoringRule]
# Detect use of icacls to deny access for everyone in Users folder sometimes used to hide malicious files
RuleName = Use Icacls to Hide File to Everyone
EventType = Process.Start
Tag = proc-start-use-icacls-to-hide-file-to-everyone
RiskScore = 50
Query = ((Process.Name == "iCACLS.EXE" or Process.Path like r"%\\icacls.exe") and (Process.CommandLine like r"%C:\\Users\\%" and Process.CommandLine like r"%/deny%" and Process.CommandLine like r"%S-1-1-0:%"))

[ActivityMonitoringRule]
# VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass and is listed in Microsoft's recommended block rules.
RuleName = Use of VisualUiaVerifyNative.exe
EventType = Process.Start
Tag = proc-start-use-of-visualuiaverifynative.exe
RiskScore = 50
Query = (Process.Path like r"%\\VisualUiaVerifyNative.exe" or Process.Name == "VisualUiaVerifyNative.exe")

[ActivityMonitoringRule]
# Detects when a user installs certificates by using CertOC.exe to loads the target DLL file.
RuleName = Suspicious Load DLL via CertOC.exe
EventType = Process.Start
Tag = proc-start-suspicious-load-dll-via-certoc.exe
RiskScore = 50
Query = ((Process.Path like r"%\\certoc.exe" or Process.Name == "CertOC.exe") and (Process.CommandLine like r"% -LoadDLL %" or Process.CommandLine like r"% /LoadDLL %"))

[ActivityMonitoringRule]
# Detects usage of the wevtutil utility to perform reconnaissance
RuleName = Wevtutil Recon
EventType = Process.Start
Tag = proc-start-wevtutil-recon
RiskScore = 50
Query = (Process.Path like r"%\\wevtutil.exe" and (Process.CommandLine like r"% qe %" or Process.CommandLine like r"% query-events %") and (Process.CommandLine like r"%Microsoft-Windows-TerminalServices-LocalSessionManager/Operational%" or Process.CommandLine like r"%Microsoft-Windows-Terminal-Services-RemoteConnectionManager/Operational%"))

[ActivityMonitoringRule]
# Detects suspicious command line flags that let the user set a target user and command as e.g. seen in PsExec-like tools
RuleName = Suspicious RunAs-Like Flag Combination
EventType = Process.Start
Tag = proc-start-suspicious-runas-like-flag-combination
RiskScore = 50
Query = ((Process.CommandLine like r"% -u system %" or Process.CommandLine like r"% --user system %" or Process.CommandLine like r"% -u NT%" or Process.CommandLine like r"% -u \"NT%" or Process.CommandLine like r"% -u 'NT%" or Process.CommandLine like r"% --system %" or Process.CommandLine like r"% -u administrator %") and (Process.CommandLine like r"% -c cmd%" or Process.CommandLine like r"% -c \"cmd%" or Process.CommandLine like r"% -c powershell%" or Process.CommandLine like r"% -c \"powershell%" or Process.CommandLine like r"% --command cmd%" or Process.CommandLine like r"% --command powershell%" or Process.CommandLine like r"% -c whoami%" or Process.CommandLine like r"% -c wscript%" or Process.CommandLine like r"% -c cscript%"))

[ActivityMonitoringRule]
# Detects binaries that use the same name as legitimate sysinternals tools to evade detection
RuleName = Potential Binary Impersonating Sysinternals Tools
EventType = Process.Start
Tag = proc-start-potential-binary-impersonating-sysinternals-tools
RiskScore = 50
Query = ((Process.Path like r"%\\accesschk.exe" or Process.Path like r"%\\accesschk64.exe" or Process.Path like r"%\\AccessEnum.exe" or Process.Path like r"%\\ADExplorer.exe" or Process.Path like r"%\\ADExplorer64.exe" or Process.Path like r"%\\ADInsight.exe" or Process.Path like r"%\\ADInsight64.exe" or Process.Path like r"%\\adrestore.exe" or Process.Path like r"%\\adrestore64.exe" or Process.Path like r"%\\Autologon.exe" or Process.Path like r"%\\Autologon64.exe" or Process.Path like r"%\\Autoruns.exe" or Process.Path like r"%\\Autoruns64.exe" or Process.Path like r"%\\autorunsc.exe" or Process.Path like r"%\\autorunsc64.exe" or Process.Path like r"%\\Bginfo.exe" or Process.Path like r"%\\Bginfo64.exe" or Process.Path like r"%\\Cacheset.exe" or Process.Path like r"%\\Cacheset64.exe" or Process.Path like r"%\\Clockres.exe" or Process.Path like r"%\\Clockres64.exe" or Process.Path like r"%\\Contig.exe" or Process.Path like r"%\\Contig64.exe" or Process.Path like r"%\\Coreinfo.exe" or Process.Path like r"%\\Coreinfo64.exe" or Process.Path like r"%\\CPUSTRES.EXE" or Process.Path like r"%\\CPUSTRES64.EXE" or Process.Path like r"%\\ctrl2cap.exe" or Process.Path like r"%\\Dbgview.exe" or Process.Path like r"%\\dbgview64.exe" or Process.Path like r"%\\Desktops.exe" or Process.Path like r"%\\Desktops64.exe" or Process.Path like r"%\\disk2vhd.exe" or Process.Path like r"%\\disk2vhd64.exe" or Process.Path like r"%\\diskext.exe" or Process.Path like r"%\\diskext64.exe" or Process.Path like r"%\\Diskmon.exe" or Process.Path like r"%\\Diskmon64.exe" or Process.Path like r"%\\DiskView.exe" or Process.Path like r"%\\DiskView64.exe" or Process.Path like r"%\\du.exe" or Process.Path like r"%\\du64.exe" or Process.Path like r"%\\efsdump.exe" or Process.Path like r"%\\FindLinks.exe" or Process.Path like r"%\\FindLinks64.exe" or Process.Path like r"%\\handle.exe" or Process.Path like r"%\\handle64.exe" or Process.Path like r"%\\hex2dec.exe" or Process.Path like r"%\\hex2dec64.exe" or Process.Path like r"%\\junction.exe" or Process.Path like r"%\\junction64.exe" or Process.Path like r"%\\ldmdump.exe" or Process.Path like r"%\\listdlls.exe" or Process.Path like r"%\\listdlls64.exe" or Process.Path like r"%\\livekd.exe" or Process.Path like r"%\\livekd64.exe" or Process.Path like r"%\\loadOrd.exe" or Process.Path like r"%\\loadOrd64.exe" or Process.Path like r"%\\loadOrdC.exe" or Process.Path like r"%\\loadOrdC64.exe" or Process.Path like r"%\\logonsessions.exe" or Process.Path like r"%\\logonsessions64.exe" or Process.Path like r"%\\movefile.exe" or Process.Path like r"%\\movefile64.exe" or Process.Path like r"%\\notmyfault.exe" or Process.Path like r"%\\notmyfault64.exe" or Process.Path like r"%\\notmyfaultc.exe" or Process.Path like r"%\\notmyfaultc64.exe" or Process.Path like r"%\\ntfsinfo.exe" or Process.Path like r"%\\ntfsinfo64.exe" or Process.Path like r"%\\pendmoves.exe" or Process.Path like r"%\\pendmoves64.exe" or Process.Path like r"%\\pipelist.exe" or Process.Path like r"%\\pipelist64.exe" or Process.Path like r"%\\portmon.exe" or Process.Path like r"%\\procdump.exe" or Process.Path like r"%\\procdump64.exe" or Process.Path like r"%\\procexp.exe" or Process.Path like r"%\\procexp64.exe" or Process.Path like r"%\\Procmon.exe" or Process.Path like r"%\\Procmon64.exe" or Process.Path like r"%\\psExec.exe" or Process.Path like r"%\\psExec64.exe" or Process.Path like r"%\\psfile.exe" or Process.Path like r"%\\psfile64.exe" or Process.Path like r"%\\psGetsid.exe" or Process.Path like r"%\\psGetsid64.exe" or Process.Path like r"%\\psInfo.exe" or Process.Path like r"%\\psInfo64.exe" or Process.Path like r"%\\pskill.exe" or Process.Path like r"%\\pskill64.exe" or Process.Path like r"%\\pslist.exe" or Process.Path like r"%\\pslist64.exe" or Process.Path like r"%\\psLoggedon.exe" or Process.Path like r"%\\psLoggedon64.exe" or Process.Path like r"%\\psloglist.exe" or Process.Path like r"%\\psloglist64.exe" or Process.Path like r"%\\pspasswd.exe" or Process.Path like r"%\\pspasswd64.exe" or Process.Path like r"%\\psping.exe" or Process.Path like r"%\\psping64.exe" or Process.Path like r"%\\psService.exe" or Process.Path like r"%\\psService64.exe" or Process.Path like r"%\\psshutdown.exe" or Process.Path like r"%\\psshutdown64.exe" or Process.Path like r"%\\pssuspend.exe" or Process.Path like r"%\\pssuspend64.exe" or Process.Path like r"%\\RAMMap.exe" or Process.Path like r"%\\RDCMan.exe" or Process.Path like r"%\\RegDelNull.exe" or Process.Path like r"%\\RegDelNull64.exe" or Process.Path like r"%\\regjump.exe" or Process.Path like r"%\\ru.exe" or Process.Path like r"%\\ru64.exe" or Process.Path like r"%\\sdelete.exe" or Process.Path like r"%\\sdelete64.exe" or Process.Path like r"%\\ShareEnum.exe" or Process.Path like r"%\\ShareEnum64.exe" or Process.Path like r"%\\shellRunas.exe" or Process.Path like r"%\\sigcheck.exe" or Process.Path like r"%\\sigcheck64.exe" or Process.Path like r"%\\streams.exe" or Process.Path like r"%\\streams64.exe" or Process.Path like r"%\\strings.exe" or Process.Path like r"%\\strings64.exe" or Process.Path like r"%\\sync.exe" or Process.Path like r"%\\sync64.exe" or Process.Path like r"%\\Sysmon.exe" or Process.Path like r"%\\Sysmon64.exe" or Process.Path like r"%\\tcpvcon.exe" or Process.Path like r"%\\tcpvcon64.exe" or Process.Path like r"%\\tcpview.exe" or Process.Path like r"%\\tcpview64.exe" or Process.Path like r"%\\Testlimit.exe" or Process.Path like r"%\\Testlimit64.exe" or Process.Path like r"%\\vmmap.exe" or Process.Path like r"%\\vmmap64.exe" or Process.Path like r"%\\Volumeid.exe" or Process.Path like r"%\\Volumeid64.exe" or Process.Path like r"%\\whois.exe" or Process.Path like r"%\\whois64.exe" or Process.Path like r"%\\Winobj.exe" or Process.Path like r"%\\Winobj64.exe" or Process.Path like r"%\\ZoomIt.exe" or Process.Path like r"%\\ZoomIt64.exe") and not ((Process.Company in ["Sysinternals - www.sysinternals.com", "Sysinternals"]) or (Process.Company == '')))
GenericProperty1 = Process.Company

[ActivityMonitoringRule]
# Detects transferring files from system on a server bitstransfer Powershell cmdlets
RuleName = Suspicious Bitstransfer via PowerShell
EventType = Process.Start
Tag = proc-start-suspicious-bitstransfer-via-powershell
RiskScore = 50
Query = ((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\powershell\_ise.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"%Get-BitsTransfer%" or Process.CommandLine like r"%Add-BitsFile%"))

[ActivityMonitoringRule]
# Detects browsers starting with the remote debugging flags. Which is a technique often used to perform browser injection attacks
RuleName = Browser Started with Remote Debugging
EventType = Process.Start
Tag = proc-start-browser-started-with-remote-debugging
RiskScore = 50
Query = (Process.CommandLine like r"% --remote-debugging-%" or (Process.Path like r"%\\firefox.exe" and Process.CommandLine like r"% -start-debugger-server %"))

[ActivityMonitoringRule]
# Detects suspicious execution of "PDQDeployRunner" which is part of the PDQDeploy service stack that is responsible for executing commands and packages on a remote machines
RuleName = Suspicious Execution Of PDQDeployRunner
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-pdqdeployrunner
RiskScore = 50
Query = (Parent.Path like r"%PDQDeployRunner-%" and ((Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\wmic.exe" or Process.Path like r"%\\msiexec.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\csc.exe" or Process.Path like r"%\\dllhost.exe" or Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\scriptrunner.exe" or Process.Path like r"%\\bash.exe" or Process.Path like r"%\\wsl.exe") or (Process.Path like r"%C:\\Users\\Public\\%" or Process.Path like r"%C:\\ProgramData\\%" or Process.Path like r"%C:\\Windows\\TEMP\\%" or Process.Path like r"%\\AppData\\Local\\Temp%") or (Process.CommandLine like r"%iex %" or Process.CommandLine like r"%Invoke-%" or Process.CommandLine like r"%DownloadString%" or Process.CommandLine like r"%http%" or Process.CommandLine like r"% -enc %" or Process.CommandLine like r"% -encodedcommand %" or Process.CommandLine like r"%FromBase64String%" or Process.CommandLine like r"% -decode %" or Process.CommandLine like r"% -w hidden%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Adversaries can abuse winget to download payloads remotely and execute them without touching disk. Winget will be included by default in Windows 10 and is already available in Windows 10 insider programs. The manifest option enables you to install an application by passing in a YAML file directly to the client. Winget can be used to download and install exe's, msi, msix files later.
RuleName = Monitoring Winget For LOLbin Execution
EventType = Process.Start
Tag = proc-start-monitoring-winget-for-lolbin-execution
RiskScore = 50
Query = (Process.CommandLine like r"%winget%" and Process.CommandLine like r"%install%" and (Process.CommandLine like r"%-m %" or Process.CommandLine like r"%--manifest%"))

[ActivityMonitoringRule]
# Detects a usage of the manage-bde.wsf script that may indicate an attempt of proxy execution from script
RuleName = Suspicious Usage of the Manage-bde.wsf Script
EventType = Process.Start
Tag = proc-start-suspicious-usage-of-the-manage-bde.wsf-script
RiskScore = 50
Query = (Process.CommandLine like r"%cscript%" and Process.CommandLine like r"%manage-bde.wsf%")

[ActivityMonitoringRule]
# Detects suspicious children spawned via the Windows Terminal application which could be a sign of persistence via WindowsTerminal (see references section)
RuleName = Suspicious WindowsTerminal Child Processes
EventType = Process.Start
Tag = proc-start-suspicious-windowsterminal-child-processes
RiskScore = 50
Query = ((Parent.Path like r"%\\WindowsTerminal.exe" and ((Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\csc.exe") or (Process.Path like r"%C:\\Users\\Public\\%" or Process.Path like r"%\\Downloads\\%" or Process.Path like r"%\\Desktop\\%" or Process.Path like r"%\\AppData\\Local\\Temp\\%" or Process.Path like r"%\\Windows\\TEMP\\%") or (Process.CommandLine like r"% iex %" or Process.CommandLine like r"%Invoke-%" or Process.CommandLine like r"%Import-Module%" or Process.CommandLine like r"%DownloadString(%" or Process.CommandLine like r"% /c %" or Process.CommandLine like r"% /k %" or Process.CommandLine like r"% /r %"))) and not ((Process.CommandLine like r"%Import-Module%" and Process.CommandLine like r"%Microsoft.VisualStudio.DevShell.dll%" and Process.CommandLine like r"%Enter-VsDevShell%") or (Process.CommandLine like r"%\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal\_%" and Process.CommandLine like r"%\\LocalState\\settings.json%") or (Process.CommandLine like r"%C:\\Program Files\\Microsoft Visual Studio\\%" and Process.CommandLine like r"%\\Common7\\Tools\\VsDevCmd.bat%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# The "ScriptRunner.exe" binary can be abused to proxy execution through it and bypass possible whitelisting
RuleName = Use of Scriptrunner.exe
EventType = Process.Start
Tag = proc-start-use-of-scriptrunner.exe
RiskScore = 50
Query = ((Process.Path like r"%\\ScriptRunner.exe" or Process.Name == "ScriptRunner.exe") and Process.CommandLine like r"% -appvscript %")

[ActivityMonitoringRule]
# Detects suspicious command line to remove and 'exe' or 'dll'
RuleName = Suspicious Del in CommandLine
EventType = Process.Start
Tag = proc-start-suspicious-del-in-commandline
RiskScore = 50
Query = ((Process.CommandLine like r"%del %" and Process.CommandLine like r"%\*.exe%" and Process.CommandLine like r"%/f %" and Process.CommandLine like r"%/q %") or (Process.CommandLine like r"%del %" and Process.CommandLine like r"%\*.dll%" and Process.CommandLine like r"%C:\\ProgramData\\%"))

[ActivityMonitoringRule]
# An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities
RuleName = Compress Data and Lock With Password for Exfiltration With WINZIP
EventType = Process.Start
Tag = proc-start-compress-data-and-lock-with-password-for-exfiltration-with-winzip
RiskScore = 50
Query = ((Process.CommandLine like r"%winzip.exe%" or Process.CommandLine like r"%winzip64.exe%") and Process.CommandLine like r"%-s\"%" and (Process.CommandLine like r"% -min %" or Process.CommandLine like r"% -a %"))

[ActivityMonitoringRule]
# Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session).
RuleName = Remote PowerShell Session Host Process (WinRM)
EventType = Process.Start
Tag = proc-start-remote-powershell-session-host-process-(winrm)
RiskScore = 50
Query = (Process.Path like r"%\\wsmprovhost.exe" or Parent.Path like r"%\\wsmprovhost.exe")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects a suspicious program execution in a web service root folder (filter out false positives)
RuleName = Execution in Webserver Root Folder
EventType = Process.Start
Tag = proc-start-execution-in-webserver-root-folder
RiskScore = 50
Query = ((Process.Path like r"%\\wwwroot\\%" or Process.Path like r"%\\wmpub\\%" or Process.Path like r"%\\htdocs\\%") and not ((Process.Path like r"%bin\\%" or Process.Path like r"%\\Tools\\%" or Process.Path like r"%\\SMSComponent\\%") and Parent.Path like r"%\\services.exe"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects suspicious scheduled task creations from a parent stored in a temporary folder
RuleName = Suspicious Add Scheduled Task Parent
EventType = Process.Start
Tag = proc-start-suspicious-add-scheduled-task-parent
RiskScore = 50
Query = ((Process.Path like r"%\\schtasks.exe" and Process.CommandLine like r"%/Create %" and (Parent.Path like r"%\\AppData\\Local\\%" or Parent.Path like r"%\\AppData\\Roaming\\%" or Parent.Path like r"%\\Temporary Internet%" or Parent.Path like r"%\\Users\\Public\\%")) and not (((Process.CommandLine like r"%update\_task.xml%" or Process.CommandLine like r"%unattended.ini%"))))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects usage of "PresentationHost" which is a utility that runs ".xbap" (Browser Applications) files to download arbitrary files
RuleName = Download Arbitrary Files Via PresentationHost.exe
EventType = Process.Start
Tag = proc-start-download-arbitrary-files-via-presentationhost.exe
RiskScore = 50
Query = ((Process.Path like r"%\\presentationhost.exe" or Process.Name == "PresentationHost.exe") and (Process.CommandLine like r"%http://%" or Process.CommandLine like r"%https://%" or Process.CommandLine like r"%ftp://%"))

[ActivityMonitoringRule]
# Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy
RuleName = Gpscript Execution
EventType = Process.Start
Tag = proc-start-gpscript-execution
RiskScore = 50
Query = ((Process.Path like r"%\\gpscript.exe" or Process.Name == "GPSCRIPT.EXE") and (Process.CommandLine like r"% /logon%" or Process.CommandLine like r"% /startup%"))

[ActivityMonitoringRule]
# Detects possible password spraying attempts using Dsacls
RuleName = Password Spraying Attempts Using Dsacls
EventType = Process.Start
Tag = proc-start-password-spraying-attempts-using-dsacls
RiskScore = 50
Query = ((Process.Path like r"%\\dsacls.exe" or Process.Name == "DSACLS.EXE") and (Process.CommandLine like r"%/user:%" and Process.CommandLine like r"%/passwd:%"))

[ActivityMonitoringRule]
# Detects usage of the SysInternals Procdump utility
RuleName = Procdump Usage
EventType = Process.Start
Tag = proc-start-procdump-usage
RiskScore = 50
Query = (Process.Path like r"%\\procdump.exe" or Process.Path like r"%\\procdump64.exe")

[ActivityMonitoringRule]
# The "VSIISExeLauncher.exe" binary part of the Visual Studio/VS Code can be used to execute arbitrary binaries
RuleName = Use of VSIISExeLauncher.exe
EventType = Process.Start
Tag = proc-start-use-of-vsiisexelauncher.exe
RiskScore = 50
Query = ((Process.Path like r"%\\VSIISExeLauncher.exe" or Process.Name == "VSIISExeLauncher.exe") and (Process.CommandLine like r"% -p %" or Process.CommandLine like r"% -a %"))

[ActivityMonitoringRule]
# An adversary might use WMI to list Processes running on the compromised host or list installed Software hotfix and patches.
RuleName = Suspicious WMI Reconnaissance
EventType = Process.Start
Tag = proc-start-suspicious-wmi-reconnaissance
RiskScore = 50
Query = (((Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%process%" or Process.CommandLine like r"%qfe%")) and not (Process.CommandLine like r"%call%" and Process.CommandLine like r"%create%"))

[ActivityMonitoringRule]
# A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.
RuleName = Sdclt Child Processes
EventType = Process.Start
Tag = proc-start-sdclt-child-processes
RiskScore = 50
Query = Parent.Path like r"%\\sdclt.exe"
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Allow Incoming Connections by Port or Application on Windows Firewall
RuleName = Netsh Port or Application Allowed
EventType = Process.Start
Tag = proc-start-netsh-port-or-application-allowed
RiskScore = 50
Query = ((Process.Path like r"%\\netsh.exe" and Process.CommandLine like r"%firewall%" and Process.CommandLine like r"%add%") and not (((Process.CommandLine like r"%\\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program Files (x86)\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any%" or Process.CommandLine like r"%\\netsh.exe advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=C:\\Program Files\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any%"))))

[ActivityMonitoringRule]
# Detects suspicious command execution (cmd) via Windows Management Instrumentation (WMI) on a remote host. This could be indicative of adversary lateral movement.
RuleName = Suspicious Cmd Execution via WMI
EventType = Process.Start
Tag = proc-start-suspicious-cmd-execution-via-wmi
RiskScore = 50
Query = (Process.Path like r"%\\cmd.exe" and Parent.Path like r"%\\WmiPrvSE.exe" and Process.CommandLine like r"%\\\\127.0.0.1\\\*" and (Process.CommandLine like r"%2>&1%" or Process.CommandLine like r"%1>%"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.
RuleName = Code Execution via Pcwutl.dll
EventType = Process.Start
Tag = proc-start-code-execution-via-pcwutl.dll
RiskScore = 50
Query = (Process.Path like r"%\\rundll32.exe" and Process.CommandLine like r"%pcwutl%" and Process.CommandLine like r"%LaunchApplication%")

[ActivityMonitoringRule]
# Ntvdm.exe allows the execution of 16-bit Windows applications on 32-bit Windows operating systems, as well as the execution of both 16-bit and 32-bit DOS applications
RuleName = Start of NT Virtual DOS Machine
EventType = Process.Start
Tag = proc-start-start-of-nt-virtual-dos-machine
RiskScore = 50
Query = (Process.Path like r"%\\ntvdm.exe" or Process.Path like r"%\\csrstub.exe")

[ActivityMonitoringRule]
# Detects launch of the PSEXESVC service, which means that this system was the target of a psexec remote execution
RuleName = PsExec Service Execution
EventType = Process.Start
Tag = proc-start-psexec-service-execution
RiskScore = 50
Query = (Process.Path like r"C:\\Windows\\PSEXESVC.exe" or Process.Name == "psexesvc.exe")

[ActivityMonitoringRule]
# Uninstall an application with wmic
RuleName = WMI Uninstall An Application
EventType = Process.Start
Tag = proc-start-wmi-uninstall-an-application
RiskScore = 50
Query = ((Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and Process.CommandLine like r"%call uninstall%")

[ActivityMonitoringRule]
# Detects the deactivation and disabling of the Scheduled defragmentation task as seen by Slingshot APT group
RuleName = Defrag Deactivation
EventType = Process.Start
Tag = proc-start-defrag-deactivation
RiskScore = 50
Query = (Process.Path like r"%\\schtasks.exe" and (Process.CommandLine like r"%/delete%" or Process.CommandLine like r"%/change%") and Process.CommandLine like r"%/TN%" and Process.CommandLine like r"%\\Microsoft\\Windows\\Defrag\\ScheduledDefrag%")

[ActivityMonitoringRule]
# There is an option for a MS VS Just-In-Time Debugger "vsjitdebugger.exe" to launch specified executable and attach a debugger.
# This option may be used adversaries to execute malicious code by signed verified binary.
# The debugger is installed alongside with Microsoft Visual Studio package.
RuleName = Malicious PE Execution by Microsoft Visual Studio Debugger
EventType = Process.Start
Tag = proc-start-malicious-pe-execution-by-microsoft-visual-studio-debugger
RiskScore = 50
Query = (Parent.Path like r"%\\vsjitdebugger.exe" and not ((Process.Path like r"%\\vsimmersiveactivatehelper%.exe" or Process.Path like r"%\\devenv.exe")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server.
# Script blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.
RuleName = Detection of PowerShell Execution via Sqlps.exe
EventType = Process.Start
Tag = proc-start-detection-of-powershell-execution-via-sqlps.exe
RiskScore = 50
Query = (Parent.Path like r"%\\sqlps.exe" or ((Process.Path like r"%\\sqlps.exe" or Process.Name == "sqlps.exe") and not (Parent.Path like r"%\\sqlagent.exe")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects use of Wlrmdr.exe in which the -u parameter is passed to ShellExecute
RuleName = Wlrmdr Lolbin Use as Launcher
EventType = Process.Start
Tag = proc-start-wlrmdr-lolbin-use-as-launcher
RiskScore = 50
Query = (Parent.Path like r"%\\wlrmdr.exe" or (((Process.Path like r"%\\wlrmdr.exe" or Process.Name == "WLRMNDR.EXE") and (Process.CommandLine like r"%-s %" and Process.CommandLine like r"%-f %" and Process.CommandLine like r"%-t %" and Process.CommandLine like r"%-m %" and Process.CommandLine like r"%-a %" and Process.CommandLine like r"%-u %")) and not ((Parent.Path like r"C:\\Windows\\System32\\winlogon.exe") or (Parent.Path == "-"))))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects creation of a new service (kernel driver) with the type "kernel"
RuleName = New Kernel Driver Via SC.EXE
EventType = Process.Start
Tag = proc-start-new-kernel-driver-via-sc.exe
RiskScore = 50
Query = (Process.Path like r"%\\sc.exe" and (Process.CommandLine like r"%create%" or Process.CommandLine like r"%config%") and Process.CommandLine like r"%binPath%" and Process.CommandLine like r"%type%" and Process.CommandLine like r"%kernel%")

[ActivityMonitoringRule]
# Detects usage of "PresentationHost" which is a utility that runs ".xbap" (Browser Applications) files. It can be abused to run malicious ".xbap" files any bypass AWL
RuleName = Application Whitelisting Bypass via PresentationHost.exe
EventType = Process.Start
Tag = proc-start-application-whitelisting-bypass-via-presentationhost.exe
RiskScore = 50
Query = (((Process.Path like r"%\\presentationhost.exe" or Process.Name == "PresentationHost.exe") and Process.CommandLine like r"%.xbap%") and not ((Process.CommandLine like r"%C:\\Windows\\%" or Process.CommandLine like r"%C:\\Program Files%")))

[ActivityMonitoringRule]
# List credentials currently stored in Windows Credential Manager via the native Windows utility vaultcmd.exe
RuleName = Windows Credential Manager Access via VaultCmd
EventType = Process.Start
Tag = proc-start-windows-credential-manager-access-via-vaultcmd
RiskScore = 50
Query = ((Process.Path like r"%\\VaultCmd.exe" or Process.Name == "VAULTCMD.EXE") and Process.CommandLine like r"%/listcreds:%")

[ActivityMonitoringRule]
# Detects execution of renamed ftp.exe binary based on OriginalFileName field
RuleName = Renamed FTP.EXE Binary Execution
EventType = Process.Start
Tag = proc-start-renamed-ftp.exe-binary-execution
RiskScore = 50
Query = (Process.Name == "ftp.exe" and not (Process.Path like r"%\\ftp.exe"))

[ActivityMonitoringRule]
# Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting
RuleName = Use of OpenConsole
EventType = Process.Start
Tag = proc-start-use-of-openconsole
RiskScore = 50
Query = ((Process.Name == "OpenConsole.exe" or Process.Path like r"%\\OpenConsole.exe") and not (Process.Path like r"C:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal%"))

[ActivityMonitoringRule]
# Detects the use of a Microsoft signed script 'REGISTER_APP.VBS' to register a VSS/VDS Provider as a COM+ application.
RuleName = REGISTER_APP.VBS Proxy Execution
EventType = Process.Start
Tag = proc-start-register_app.vbs-proxy-execution
RiskScore = 50
Query = (Process.CommandLine like r"%\\register\_app.vbs%" and Process.CommandLine like r"%-register%")

[ActivityMonitoringRule]
# Detects a file or folder's permissions being modified or tampered with.
RuleName = File or Folder Permissions Modifications
EventType = Process.Start
Tag = proc-start-file-or-folder-permissions-modifications
RiskScore = 50
Query = ((((Process.Path like r"%\\cacls.exe" or Process.Path like r"%\\icacls.exe" or Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe") and (Process.CommandLine like r"%/grant%" or Process.CommandLine like r"%/setowner%" or Process.CommandLine like r"%/inheritance:r%")) or (Process.Path like r"%\\attrib.exe" and Process.CommandLine like r"%-r%") or Process.Path like r"%\\takeown.exe") and not ((Process.CommandLine like r"%ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\connectivity.history /reset") or (Process.CommandLine like r"%ICACLS C:\\ProgramData\\dynatrace\\gateway\\config\\config.properties /grant :r %" and Process.CommandLine like r"%S-1-5-19:F%") or (Process.CommandLine like r"%\\AppData\\Local\\Programs\\Microsoft VS Code%" or Parent.Path like r"%\\Microsoft VS Code\\Code.exe")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detect VBoxDrvInst.exe run with parameters allowing processing INF file.
# This allows to create values in the registry and install drivers.
# For example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys
RuleName = Suspicious VBoxDrvInst.exe Parameters
EventType = Process.Start
Tag = proc-start-suspicious-vboxdrvinst.exe-parameters
RiskScore = 50
Query = (Process.Path like r"%\\VBoxDrvInst.exe" and Process.CommandLine like r"%driver%" and Process.CommandLine like r"%executeinf%")

[ActivityMonitoringRule]
# Detects execution of powershell scripts via Runscripthelper.exe
RuleName = Suspicious Runscripthelper.exe
EventType = Process.Start
Tag = proc-start-suspicious-runscripthelper.exe
RiskScore = 50
Query = (Process.Path like r"%\\Runscripthelper.exe" and Process.CommandLine like r"%surfacecheck%")

[ActivityMonitoringRule]
# Detects usage of bitsadmin downloading a file to uncommon target folder
RuleName = Bitsadmin Download to Uncommon Target Folder
EventType = Process.Start
Tag = proc-start-bitsadmin-download-to-uncommon-target-folder
RiskScore = 50
Query = ((Process.Path like r"%\\bitsadmin.exe" or Process.Name == "bitsadmin.exe") and (Process.CommandLine like r"% /transfer %" or Process.CommandLine like r"% /create %" or Process.CommandLine like r"% /addfile %") and (Process.CommandLine like r"%C:\\Windows\\Temp\\%" or Process.CommandLine like r"%\%temp\%%" or Process.CommandLine like r"%\%tmp\%%" or Process.CommandLine like r"%C:\\ProgramData\\%" or Process.CommandLine like r"%\%ProgramData\%%" or Process.CommandLine like r"%\\AppData\\Local\\%" or Process.CommandLine like r"%\%AppData\%%"))

[ActivityMonitoringRule]
# setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file.
RuleName = Suspicious Rundll32 Setupapi.dll Activity
EventType = Process.Start
Tag = proc-start-suspicious-rundll32-setupapi.dll-activity
RiskScore = 50
Query = (Process.Path like r"%\\runonce.exe" and Parent.Path like r"%\\rundll32.exe" and Parent.CommandLine like r"%setupapi.dll%" and Parent.CommandLine like r"%InstallHinfSection%")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# Detects wmic known recon method to look for unquoted service paths, often used by pentest and attackers enum scripts
RuleName = WMIC Unquoted Services Path Lookup
EventType = Process.Start
Tag = proc-start-wmic-unquoted-services-path-lookup
RiskScore = 50
Query = ((Process.Name == "wmic.exe" or Process.Path like r"%\\WMIC.exe") and (Process.CommandLine like r"% service %" and Process.CommandLine like r"% get %" and (Process.CommandLine like r"%name%" or Process.CommandLine like r"%displayname%" or Process.CommandLine like r"%pathname%" or Process.CommandLine like r"%startmode%")))

[ActivityMonitoringRule]
# Detects usage of bitsadmin downloading a file
RuleName = Bitsadmin Download
EventType = Process.Start
Tag = proc-start-bitsadmin-download
RiskScore = 50
Query = (((Process.Path like r"%\\bitsadmin.exe" or Process.Name == "bitsadmin.exe") and (Process.CommandLine like r"% /create %" or Process.CommandLine like r"% /addfile %") and Process.CommandLine like r"%http%") or ((Process.Path like r"%\\bitsadmin.exe" or Process.Name == "bitsadmin.exe") and Process.CommandLine like r"% /transfer %") or Process.CommandLine like r"%copy bitsadmin.exe%")

[ActivityMonitoringRule]
# Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder
RuleName = PowerShell Script Run in AppData
EventType = Process.Start
Tag = proc-start-powershell-script-run-in-appdata
RiskScore = 50
Query = ((Process.CommandLine like r"%powershell.exe%" or Process.CommandLine like r"%\\powershell%" or Process.CommandLine like r"%\\pwsh%" or Process.CommandLine like r"%pwsh.exe%") and Process.CommandLine like r"%/c %" and Process.CommandLine like r"%\\AppData\\%" and (Process.CommandLine like r"%Local\\%" or Process.CommandLine like r"%Roaming\\%"))

[ActivityMonitoringRule]
# Adversaries may abuse Visual Basic (VB) for execution
RuleName = Cscript Visual Basic Script Execution
EventType = Process.Start
Tag = proc-start-cscript-visual-basic-script-execution
RiskScore = 50
Query = (Process.Path like r"%\\cscript.exe" and Process.CommandLine like r"%.vbs%")

[ActivityMonitoringRule]
# Detects suspicious start of rundll32.exe with a parent process of Explorer.exe. Variant of Raspberry Robin, as first reported by Red Canary.
RuleName = Rundll32 With Suspicious Parent Process
EventType = Process.Start
Tag = proc-start-rundll32-with-suspicious-parent-process
RiskScore = 50
Query = ((Process.Path like r"%\\rundll32.exe" and Parent.Path like r"%\\explorer.exe") and not (Process.CommandLine like r"% C:\\Windows\\System32\\%"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects suspicious reconnaissance command line activity on Windows systems using Net.EXE
RuleName = Suspicious Reconnaissance Activity Using Net
EventType = Process.Start
Tag = proc-start-suspicious-reconnaissance-activity-using-net
RiskScore = 50
Query = (((Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe") or Process.Name in ["net.exe", "net1.exe"]) and (((Process.CommandLine like r"% group %" or Process.CommandLine like r"% localgroup %") and (Process.CommandLine like r"%domain admins%" or Process.CommandLine like r"% administrator%" or Process.CommandLine like r"% administrateur%" or Process.CommandLine like r"%enterprise admins%" or Process.CommandLine like r"%Exchange Trusted Subsystem%" or Process.CommandLine like r"%Remote Desktop Users%" or Process.CommandLine like r"%Utilisateurs du Bureau à distance%" or Process.CommandLine like r"%Usuarios de escritorio remoto%" or Process.CommandLine like r"% /do%")) or (Process.CommandLine like r"% accounts %" and Process.CommandLine like r"% /do%")))

[ActivityMonitoringRule]
# Detects usage of wmic to start or stop a service
RuleName = WMIC Service Start/Stop
EventType = Process.Start
Tag = proc-start-wmic-service-start/stop
RiskScore = 50
Query = ((Process.Name == "wmic.exe" or Process.Path like r"%\\WMIC.exe") and (Process.CommandLine like r"% service %" and Process.CommandLine like r"% call %" and (Process.CommandLine like r"%stopservice%" or Process.CommandLine like r"%startservice%")))

[ActivityMonitoringRule]
# Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques
RuleName = Tap Installer Execution
EventType = Process.Start
Tag = proc-start-tap-installer-execution
RiskScore = 50
Query = (Process.Path like r"%\\tapinstall.exe" and not (((Process.Path like r"C:\\Program Files\\Avast Software\\SecureLine VPN\\tapinstall.exe" or Process.Path like r"C:\\Program Files (x86)\\Avast Software\\SecureLine VPN\\tapinstall.exe"))))

[ActivityMonitoringRule]
# Detects suspicious parent process for cmd.exe
RuleName = Unusual Parent Process for cmd.exe
EventType = Process.Start
Tag = proc-start-unusual-parent-process-for-cmd.exe
RiskScore = 50
Query = (Process.Path like r"%\\cmd.exe" and (Parent.Path like r"%\\lsass.exe" or Parent.Path like r"%\\csrss.exe" or Parent.Path like r"%\\epad.exe" or Parent.Path like r"%\\regsvr32.exe" or Parent.Path like r"%\\dllhost.exe" or Parent.Path like r"%\\LogonUI.exe" or Parent.Path like r"%\\wergmgr.exe" or Parent.Path like r"%\\spoolsv.exe" or Parent.Path like r"%\\jucheck.exe" or Parent.Path like r"%\\jusched.exe" or Parent.Path like r"%\\ctfmon.exe" or Parent.Path like r"%\\taskhostw.exe" or Parent.Path like r"%\\GoogleUpdate.exe" or Parent.Path like r"%\\sppsvc.exe" or Parent.Path like r"%\\sihost.exe" or Parent.Path like r"%\\slui.exe" or Parent.Path like r"%\\SIHClient.exe" or Parent.Path like r"%\\SearchIndexer.exe" or Parent.Path like r"%\\SearchProtocolHost.exe" or Parent.Path like r"%\\FlashPlayerUpdateService.exe" or Parent.Path like r"%\\WerFault.exe" or Parent.Path like r"%\\WUDFHost.exe" or Parent.Path like r"%\\unsecapp.exe" or Parent.Path like r"%\\wlanext.exe"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases)
RuleName = Usage Of Web Request Commands And Cmdlets
EventType = Process.Start
Tag = proc-start-usage-of-web-request-commands-and-cmdlets
RiskScore = 50
Query = (Process.CommandLine like r"%Invoke-WebRequest%" or Process.CommandLine like r"%iwr %" or Process.CommandLine like r"%wget %" or Process.CommandLine like r"%curl %" or Process.CommandLine like r"%Net.WebClient%" or Process.CommandLine like r"%Start-BitsTransfer%")

[ActivityMonitoringRule]
# Detects when an admin share is mounted using net.exe
RuleName = Mounted Windows Admin Shares with net.exe
EventType = Process.Start
Tag = proc-start-mounted-windows-admin-shares-with-net.exe
RiskScore = 50
Query = ((Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe") and Process.CommandLine like r"% use %" and Process.CommandLine like r"%\\\*\\%$%")

[ActivityMonitoringRule]
# Shadow Copies storage symbolic link creation using operating systems utilities
RuleName = Shadow Copies Access via Symlink
EventType = Process.Start
Tag = proc-start-shadow-copies-access-via-symlink
RiskScore = 50
Query = (Process.CommandLine like r"%mklink%" and Process.CommandLine like r"%HarddiskVolumeShadowCopy%")

[ActivityMonitoringRule]
# Detects netsh commands that turns off the Windows firewall
RuleName = Firewall Disabled via Netsh
EventType = Process.Start
Tag = proc-start-firewall-disabled-via-netsh
RiskScore = 50
Query = ((Process.CommandLine like r"%netsh%" and Process.CommandLine like r"%firewall%" and Process.CommandLine like r"%set%" and Process.CommandLine like r"%opmode%" and Process.CommandLine like r"%mode=disable%") or (Process.CommandLine like r"%netsh%" and Process.CommandLine like r"%advfirewall%" and Process.CommandLine like r"%set%" and Process.CommandLine like r"%state%" and Process.CommandLine like r"%off%"))

[ActivityMonitoringRule]
# Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash
RuleName = SquiblyTwo Execution
EventType = Process.Start
Tag = proc-start-squiblytwo-execution
RiskScore = 50
Query = (((Process.Path like r"%\\wmic.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%wmic%" and Process.CommandLine like r"%format%" and Process.CommandLine like r"%http%")) or ((Process.Hash.IMP in ["1B1A3F43BF37B5BFE60751F2EE2F326E", "37777A96245A3C74EB217308F3546F4C", "9D87C9D67CE724033C0B40CC4CA1B206"] or (Process.Hashes like r"%IMPHASH=1B1A3F43BF37B5BFE60751F2EE2F326E%" or Process.Hashes like r"%IMPHASH=37777A96245A3C74EB217308F3546F4C%" or Process.Hashes like r"%IMPHASH=9D87C9D67CE724033C0B40CC4CA1B206%")) and (Process.CommandLine like r"%format:%" and Process.CommandLine like r"%http%")))
GenericProperty1 = Process.Hash.IMP
GenericProperty2 = Process.Hashes

[ActivityMonitoringRule]
# Identifies creation of local users via the net.exe command.
RuleName = Net.exe User Account Creation
EventType = Process.Start
Tag = proc-start-net.exe-user-account-creation
RiskScore = 50
Query = ((Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe") and Process.CommandLine like r"%user%" and Process.CommandLine like r"%add%")

[ActivityMonitoringRule]
# Detects modification of an existing service on a compromised host in order to execute an arbitrary payload when the service is started or killed as a method of persistence.
RuleName = Modification Of Existing Services For Persistence
EventType = Process.Start
Tag = proc-start-modification-of-existing-services-for-persistence
RiskScore = 50
Query = ((Process.CommandLine like r"%sc %" and Process.CommandLine like r"%config %" and Process.CommandLine like r"%binpath=%") or (Process.CommandLine like r"%sc %" and Process.CommandLine like r"%failure%" and Process.CommandLine like r"%command=%") or (Process.CommandLine like r"%reg %" and Process.CommandLine like r"%add %" and Process.CommandLine like r"%FailureCommand%" and (Process.CommandLine like r"%.sh%" or Process.CommandLine like r"%.exe%" or Process.CommandLine like r"%.dll%" or Process.CommandLine like r"%.bin$%" or Process.CommandLine like r"%.bat%" or Process.CommandLine like r"%.cmd%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.msh$%" or Process.CommandLine like r"%.reg$%" or Process.CommandLine like r"%.scr%" or Process.CommandLine like r"%.ps%" or Process.CommandLine like r"%.vb%" or Process.CommandLine like r"%.jar%" or Process.CommandLine like r"%.pl%")) or (Process.CommandLine like r"%reg %" and Process.CommandLine like r"%add %" and Process.CommandLine like r"%ImagePath%" and (Process.CommandLine like r"%.sh%" or Process.CommandLine like r"%.exe%" or Process.CommandLine like r"%.dll%" or Process.CommandLine like r"%.bin$%" or Process.CommandLine like r"%.bat%" or Process.CommandLine like r"%.cmd%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.msh$%" or Process.CommandLine like r"%.reg$%" or Process.CommandLine like r"%.scr%" or Process.CommandLine like r"%.ps%" or Process.CommandLine like r"%.vb%" or Process.CommandLine like r"%.jar%" or Process.CommandLine like r"%.pl%")))

[ActivityMonitoringRule]
# Detects suspicious reconnaissance command line activity on Windows systems using the PowerShell Get-LocalGroupMember Cmdlet
RuleName = Suspicious Reconnaissance Activity Using Get-LocalGroupMember Cmdlet
EventType = Process.Start
Tag = proc-start-suspicious-reconnaissance-activity-using-get-localgroupmember-cmdlet
RiskScore = 50
Query = (Process.CommandLine like r"%Get-LocalGroupMember %" and (Process.CommandLine like r"%domain admins%" or Process.CommandLine like r"% administrator%" or Process.CommandLine like r"% administrateur%" or Process.CommandLine like r"%enterprise admins%" or Process.CommandLine like r"%Exchange Trusted Subsystem%" or Process.CommandLine like r"%Remote Desktop Users%" or Process.CommandLine like r"%Utilisateurs du Bureau à distance%" or Process.CommandLine like r"%Usuarios de escritorio remoto%"))

[ActivityMonitoringRule]
# Detects usage of findstr with the "EVERYONE" keyword. This is often used in combination with icacls to look for misconfigured files or folders permissions
RuleName = Suspicious Recon Activity Using Findstr Keywords
EventType = Process.Start
Tag = proc-start-suspicious-recon-activity-using-findstr-keywords
RiskScore = 50
Query = ((Process.Path like r"%\\findstr.exe" and Process.Name == "FINDSTR.EXE" and (Process.CommandLine like r"%\"Everyone\"%" or Process.CommandLine like r"%'Everyone'%")) or (Process.CommandLine like r"%icacls %" and Process.CommandLine like r"%findstr %" and Process.CommandLine like r"%Everyone%"))

[ActivityMonitoringRule]
# lolbas Cmdl32 is use to download a payload to evade antivirus
RuleName = Suspicious Cmdl32 Execution
EventType = Process.Start
Tag = proc-start-suspicious-cmdl32-execution
RiskScore = 50
Query = ((Process.Path like r"%\\cmdl32.exe" or Process.Name == "CMDL32.EXE") and (Process.CommandLine like r"%/vpn %" and Process.CommandLine like r"%/lan %"))

[ActivityMonitoringRule]
# Adversaries may  modify system firewalls in order to bypass controls limiting network usage
RuleName = Netsh Allow Group Policy on Microsoft Defender Firewall
EventType = Process.Start
Tag = proc-start-netsh-allow-group-policy-on-microsoft-defender-firewall
RiskScore = 50
Query = (Process.Path like r"%\\netsh.exe" and Process.CommandLine like r"%advfirewall%" and Process.CommandLine like r"%firewall%" and Process.CommandLine like r"%set%" and Process.CommandLine like r"%rule%" and Process.CommandLine like r"%group=%" and Process.CommandLine like r"%new%" and Process.CommandLine like r"%enable=Yes%")

[ActivityMonitoringRule]
# ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file.
RuleName = Suspicious ZipExec Execution
EventType = Process.Start
Tag = proc-start-suspicious-zipexec-execution
RiskScore = 50
Query = ((Process.CommandLine like r"%/generic:Microsoft\_Windows\_Shell\_ZipFolder:filename=%" and Process.CommandLine like r"%.zip%" and Process.CommandLine like r"%/pass:%" and Process.CommandLine like r"%/user:%") or (Process.CommandLine like r"%/delete%" and Process.CommandLine like r"%Microsoft\_Windows\_Shell\_ZipFolder:filename=%" and Process.CommandLine like r"%.zip%"))

[ActivityMonitoringRule]
# Detect the harvesting of wifi credentials using netsh.exe
RuleName = Harvesting of Wifi Credentials Using netsh.exe
EventType = Process.Start
Tag = proc-start-harvesting-of-wifi-credentials-using-netsh.exe
RiskScore = 50
Query = (Process.Path like r"%\\netsh.exe" and Process.CommandLine like r"%wlan%" and Process.CommandLine like r"% s%" and Process.CommandLine like r"% p%" and Process.CommandLine like r"% k%" and Process.CommandLine like r"%=clear%")

[ActivityMonitoringRule]
# Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information
RuleName = Gpresult Display Group Policy Information
EventType = Process.Start
Tag = proc-start-gpresult-display-group-policy-information
RiskScore = 50
Query = (Process.Path like r"%\\gpresult.exe" and (Process.CommandLine like r"%/z%" or Process.CommandLine like r"%/v%"))

[ActivityMonitoringRule]
# Detects the use of Replace.exe which can be used to replace file with another file
RuleName = Replace.exe Usage
EventType = Process.Start
Tag = proc-start-replace.exe-usage
RiskScore = 50
Query = (Process.Path like r"%\\replace.exe" and (Process.CommandLine like r"%/a%" or Process.CommandLine like r"%-a%"))

[ActivityMonitoringRule]
# Commandline to launch powershell with a base64 payload
RuleName = Suspicious Execution of Powershell with Base64
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-powershell-with-base64
RiskScore = 50
Query = (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"% -e %" or Process.CommandLine like r"% -en %" or Process.CommandLine like r"% -enc %" or Process.CommandLine like r"% -enco%" or Process.CommandLine like r"% -ec %")) and not ((Process.CommandLine like r"% -Encoding %") or ((Parent.Path like r"%C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\%" or Parent.Path like r"%\\gc\_worker.exe%"))))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe
RuleName = Esentutl Steals Browser Information
EventType = Process.Start
Tag = proc-start-esentutl-steals-browser-information
RiskScore = 50
Query = ((Process.Path like r"%\\esentutl.exe" or Process.Name == "esentutl.exe") and (Process.CommandLine like r"%/r%" or Process.CommandLine like r"%-r%") and Process.CommandLine like r"%\\Windows\\WebCache%")

[ActivityMonitoringRule]
# The "AdPlus.exe" binary that is part of the Windows SDK can be used as a lolbin to dump process memory and execute arbitrary commands
RuleName = Use of Adplus.exe
EventType = Process.Start
Tag = proc-start-use-of-adplus.exe
RiskScore = 50
Query = ((Process.Path like r"%\\adplus.exe" or Process.Name == "Adplus.exe") and (Process.CommandLine like r"% -hang %" or Process.CommandLine like r"% -pn %" or Process.CommandLine like r"% -pmn %" or Process.CommandLine like r"% -p %" or Process.CommandLine like r"% -po %" or Process.CommandLine like r"% -c %" or Process.CommandLine like r"% -sc %"))

[ActivityMonitoringRule]
# Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)
RuleName = Suspicious Csc.exe Source File Folder
EventType = Process.Start
Tag = proc-start-suspicious-csc.exe-source-file-folder
RiskScore = 50
Query = ((Process.Path like r"%\\csc.exe" and (Process.CommandLine like r"%\\AppData\\%" or Process.CommandLine like r"%\\Windows\\Temp\\%")) and not (Parent.Path like r"C:\\Program Files%" or (Parent.Path like r"%\\sdiagnhost.exe" or Parent.Path like r"%\\w3wp.exe" or Parent.Path like r"%\\choco.exe") or Parent.CommandLine like r"%\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection%"))
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create "shortcuts" to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries.
RuleName = Arbitrary Shell Command Execution Via Settingcontent-Ms
EventType = Process.Start
Tag = proc-start-arbitrary-shell-command-execution-via-settingcontent-ms
RiskScore = 50
Query = (Process.CommandLine like r"%.SettingContent-ms%" and not (Process.CommandLine like r"%immersivecontrolpanel%"))

[ActivityMonitoringRule]
# An adversary might use WMI to execute commands on a remote system
RuleName = WMI Remote Command Execution
EventType = Process.Start
Tag = proc-start-wmi-remote-command-execution
RiskScore = 50
Query = ((Process.Path like r"%\\WMIC.exe" or Process.Name == "wmic.exe") and (Process.CommandLine like r"%/node:%" and Process.CommandLine like r"%process%" and Process.CommandLine like r"%call%" and Process.CommandLine like r"%create%"))

[ActivityMonitoringRule]
# Detects suspicious process related to rundll32 based on arguments
RuleName = Suspicious Rundll32 Activity
EventType = Process.Start
Tag = proc-start-suspicious-rundll32-activity
RiskScore = 50
Query = (((Process.CommandLine like r"%javascript:%" and Process.CommandLine like r"%.RegisterXLL%") or (Process.CommandLine like r"%url.dll%" and Process.CommandLine like r"%OpenURL%") or (Process.CommandLine like r"%url.dll%" and Process.CommandLine like r"%OpenURLA%") or (Process.CommandLine like r"%url.dll%" and Process.CommandLine like r"%FileProtocolHandler%") or (Process.CommandLine like r"%zipfldr.dll%" and Process.CommandLine like r"%RouteTheCall%") or (Process.CommandLine like r"%shell32.dll%" and Process.CommandLine like r"%Control\_RunDLL%") or (Process.CommandLine like r"%shell32.dll%" and Process.CommandLine like r"%ShellExec\_RunDLL%") or (Process.CommandLine like r"%mshtml.dll%" and Process.CommandLine like r"%PrintHTML%") or (Process.CommandLine like r"%advpack.dll%" and Process.CommandLine like r"%LaunchINFSection%") or (Process.CommandLine like r"%advpack.dll%" and Process.CommandLine like r"%RegisterOCX%") or (Process.CommandLine like r"%ieadvpack.dll%" and Process.CommandLine like r"%LaunchINFSection%") or (Process.CommandLine like r"%ieadvpack.dll%" and Process.CommandLine like r"%RegisterOCX%") or (Process.CommandLine like r"%ieframe.dll%" and Process.CommandLine like r"%OpenURL%") or (Process.CommandLine like r"%shdocvw.dll%" and Process.CommandLine like r"%OpenURL%") or (Process.CommandLine like r"%syssetup.dll%" and Process.CommandLine like r"%SetupInfObjectInstallAction%") or (Process.CommandLine like r"%setupapi.dll%" and Process.CommandLine like r"%InstallHinfSection%") or (Process.CommandLine like r"%pcwutl.dll%" and Process.CommandLine like r"%LaunchApplication%") or (Process.CommandLine like r"%dfshim.dll%" and Process.CommandLine like r"%ShOpenVerbApplication%") or (Process.CommandLine like r"%dfshim.dll%" and Process.CommandLine like r"%ShOpenVerbShortcut%") or (Process.CommandLine like r"%scrobj.dll%" and Process.CommandLine like r"%GenerateTypeLib%" and Process.CommandLine like r"%http%") or (Process.CommandLine like r"%shimgvw.dll%" and Process.CommandLine like r"%ImageView\_Fullscreen%" and Process.CommandLine like r"%http%")) and not ((Process.CommandLine like r"%shell32.dll,Control\_RunDLL desk.cpl,screensaver,@screensaver%") or (Parent.Path like r"C:\\Windows\\System32\\control.exe" and Parent.CommandLine like r"%.cpl%") or (Parent.Path like r"C:\\Windows\\System32\\control.exe" and Process.CommandLine like r"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control\_RunDLL \"C:\\Windows\\System32\\%" and Process.CommandLine like r"%.cpl\",")))
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# Detects when a user performs data exfiltration by using DataSvcUtil.exe
RuleName = LOLBAS Data Exfiltration by DataSvcUtil.exe
EventType = Process.Start
Tag = proc-start-lolbas-data-exfiltration-by-datasvcutil.exe
RiskScore = 50
Query = ((Process.CommandLine like r"%/in:%" or Process.CommandLine like r"%/out:%" or Process.CommandLine like r"%/uri:%") and (Process.Path like r"%\\DataSvcUtil.exe" or Process.Name == "DataSvcUtil.exe"))

[ActivityMonitoringRule]
# Detects suspicious execution of 'Msbuild.exe' by a uncommon parent process
RuleName = Suspicious Msbuild Execution By Uncommon Parent Process
EventType = Process.Start
Tag = proc-start-suspicious-msbuild-execution-by-uncommon-parent-process
RiskScore = 50
Query = ((Process.Path like r"%\\MSBuild.exe" or Process.Name == "MSBuild.exe") and not ((Parent.Path like r"%\\devenv.exe" or Parent.Path like r"%\\cmd.exe" or Parent.Path like r"%\\msbuild.exe" or Parent.Path like r"%\\python.exe" or Parent.Path like r"%\\explorer.exe" or Parent.Path like r"%\\nuget.exe")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects the usage of the "sftp.exe" binary as a LOLBIN by abusing the "-D" flag
RuleName = Use Of The SFTP.EXE Binary As A LOLBIN
EventType = Process.Start
Tag = proc-start-use-of-the-sftp.exe-binary-as-a-lolbin
RiskScore = 50
Query = (Process.Path like r"%\\sftp.exe" and (Process.CommandLine like r"% -D ..%" or Process.CommandLine like r"% -D C:\\%"))

[ActivityMonitoringRule]
# Detects possible search for office tokens via CLI by looking for the string "eyJ0eX". This string is used as an anchor to look for the start of the JWT token used by office and similar apps.
RuleName = Suspicious Office Token Search Via CLI
EventType = Process.Start
Tag = proc-start-suspicious-office-token-search-via-cli
RiskScore = 50
Query = (Process.CommandLine like r"%eyJ0eXAiOi%" or Process.CommandLine like r"% eyJ0eX%" or Process.CommandLine like r"% \"eyJ0eX\"%" or Process.CommandLine like r"% 'eyJ0eX'%")

[ActivityMonitoringRule]
# Csi.exe is a signed binary from Microsoft that comes with Visual Studio and provides C# interactive capabilities. It can be used to run C# code from a file passed as a parameter in command line. Early version of this utility provided with Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'
RuleName = Suspicious Csi.exe Usage
EventType = Process.Start
Tag = proc-start-suspicious-csi.exe-usage
RiskScore = 50
Query = (((Process.Path like r"%\\csi.exe" or Process.Path like r"%\\rcsi.exe") or Process.Name in ["csi.exe", "rcsi.exe"]) and Process.Company == "Microsoft Corporation")
GenericProperty1 = Process.Company

[ActivityMonitoringRule]
# Threat actors performed dumping of SAM, SECURITY and SYSTEM registry hives using DelegateExecute key
RuleName = Suspicious Reg Add Open Command
EventType = Process.Start
Tag = proc-start-suspicious-reg-add-open-command
RiskScore = 50
Query = ((Process.CommandLine like r"%reg%" and Process.CommandLine like r"%add%" and Process.CommandLine like r"%hkcu\\software\\classes\\ms-settings\\shell\\open\\command%" and Process.CommandLine like r"%/ve %" and Process.CommandLine like r"%/d%") or (Process.CommandLine like r"%reg%" and Process.CommandLine like r"%add%" and Process.CommandLine like r"%hkcu\\software\\classes\\ms-settings\\shell\\open\\command%" and Process.CommandLine like r"%/v%" and Process.CommandLine like r"%DelegateExecute%") or (Process.CommandLine like r"%reg%" and Process.CommandLine like r"%delete%" and Process.CommandLine like r"%hkcu\\software\\classes\\ms-settings%"))

[ActivityMonitoringRule]
# Detect malicious GPO modifications can be used to implement many other malicious behaviors.
RuleName = Modify Group Policy Settings
EventType = Process.Start
Tag = proc-start-modify-group-policy-settings
RiskScore = 50
Query = ((Process.Path like r"%\\reg.exe" or Process.Name == "reg.exe") and Process.CommandLine like r"%\\SOFTWARE\\Policies\\Microsoft\\Windows\\System%" and (Process.CommandLine like r"%GroupPolicyRefreshTimeDC%" or Process.CommandLine like r"%GroupPolicyRefreshTimeOffsetDC%" or Process.CommandLine like r"%GroupPolicyRefreshTime%" or Process.CommandLine like r"%GroupPolicyRefreshTimeOffset%" or Process.CommandLine like r"%EnableSmartScreen%" or Process.CommandLine like r"%ShellSmartScreenLevel%"))

[ActivityMonitoringRule]
# Detects Microsoft Visual Studio vsls-agent.exe lolbin execution with a suspicious library load using the --agentExtensionPath parameter
RuleName = Suspicious Vsls-Agent Command With AgentExtensionPath Load
EventType = Process.Start
Tag = proc-start-suspicious-vsls-agent-command-with-agentextensionpath-load
RiskScore = 50
Query = ((Process.Path like r"%\\vsls-agent.exe" and Process.CommandLine like r"%--agentExtensionPath%") and not (Process.CommandLine like r"%Microsoft.VisualStudio.LiveShare.Agent.%"))

[ActivityMonitoringRule]
# The psr.exe captures desktop screenshots and saves them on the local machine
RuleName = Psr.exe Capture Screenshots
EventType = Process.Start
Tag = proc-start-psr.exe-capture-screenshots
RiskScore = 50
Query = (Process.Path like r"%\\Psr.exe" and Process.CommandLine like r"%/start%")

[ActivityMonitoringRule]
# Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0
RuleName = PowerShell Downgrade Attack
EventType = Process.Start
Tag = proc-start-powershell-downgrade-attack
RiskScore = 50
Query = ((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") and (Process.CommandLine like r"% -version 2 %" or Process.CommandLine like r"% -versio 2 %" or Process.CommandLine like r"% -versi 2 %" or Process.CommandLine like r"% -vers 2 %" or Process.CommandLine like r"% -ver 2 %" or Process.CommandLine like r"% -ve 2 %"))

[ActivityMonitoringRule]
# Execute C# code with the Build Provider and proper folder structure in place.
RuleName = Suspicious aspnet_compiler.exe Execution
EventType = Process.Start
Tag = proc-start-suspicious-aspnet_compiler.exe-execution
RiskScore = 50
Query = (Process.Path like r"%C:\\Windows\\Microsoft.NET\\Framework%" and Process.Path like r"%aspnet\_compiler.exe%")

[ActivityMonitoringRule]
# Detects execution of the "mofcomp" utility as a child of a suspicious shell or script running utility or by having a supsicious path in the commandline.
# The "mofcomp" utility parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository.
# Attackers abuse this utility to install malicious MOF scripts
RuleName = Suspicious Mofcomp Execution
EventType = Process.Start
Tag = proc-start-suspicious-mofcomp-execution
RiskScore = 50
Query = (Process.Path like r"%\\mofcomp.exe" and ((Parent.Path like r"%\\cmd.exe" or Parent.Path like r"%\\powershell.exe" or Parent.Path like r"%\\pwsh.exe" or Parent.Path like r"%\\wsl.exe" or Parent.Path like r"%\\wscript.exe" or Parent.Path like r"%\\cscript.exe") or (Process.CommandLine like r"%\\AppData\\Local\\Temp%" or Process.CommandLine like r"%\\Users\\Public\\%" or Process.CommandLine like r"%\\WINDOWS\\Temp\\%" or Process.CommandLine like r"%\%temp\%%" or Process.CommandLine like r"%\%tmp\%%" or Process.CommandLine like r"%\%appdata\%%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects the removal of a port or application rule in the Windows Firewall configuration using netsh
RuleName = Netsh Firewall Rule Deletion
EventType = Process.Start
Tag = proc-start-netsh-firewall-rule-deletion
RiskScore = 50
Query = ((Process.Path like r"%\\netsh.exe" and Process.CommandLine like r"%firewall%" and Process.CommandLine like r"%delete%") and not (Parent.Path like r"%\\Dropbox.exe" and Process.CommandLine like r"%name=Dropbox%"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# A symbolic link is a type of file that contains a reference to another file.
# This is probably done to make sure that the ransomware is able to follow shortcuts on the machine in order to find the original file to encrypt
RuleName = Fsutil Behavior Set SymlinkEvaluation
EventType = Process.Start
Tag = proc-start-fsutil-behavior-set-symlinkevaluation
RiskScore = 50
Query = (Process.Path like r"%\\fsutil.exe" and Process.CommandLine like r"%behavior %" and Process.CommandLine like r"%set %" and Process.CommandLine like r"%SymlinkEvaluation%")

[ActivityMonitoringRule]
# Detects the use of Setres.exe to set the screen resolution and then potentially launch a file named "choice" (with any executable extension such as ".cmd" or ".exe") from the current execution path
RuleName = Use of Setres.exe
EventType = Process.Start
Tag = proc-start-use-of-setres.exe
RiskScore = 50
Query = (Parent.Path like r"%\\setres.exe" and Process.Path like r"%\\choice")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects usage of the Get-ADUser cmdlet to collect user information and output it to a file
RuleName = User Discovery And Export Via Get-ADUser Cmdlet
EventType = Process.Start
Tag = proc-start-user-discovery-and-export-via-get-aduser-cmdlet
RiskScore = 50
Query = (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") or Process.Name in ["PowerShell.EXE", "pwsh.dll"]) and (Process.CommandLine like r"%Get-ADUser %" and Process.CommandLine like r"% -Filter \*" and (Process.CommandLine like r"% > %" or Process.CommandLine like r"% | Select %" or Process.CommandLine like r"%Out-File%" or Process.CommandLine like r"%Set-Content%" or Process.CommandLine like r"%Add-Content%")))

[ActivityMonitoringRule]
# Detects, possibly, malicious unauthorized usage of bcdedit.exe
RuleName = Possible Ransomware or Unauthorized MBR Modifications
EventType = Process.Start
Tag = proc-start-possible-ransomware-or-unauthorized-mbr-modifications
RiskScore = 50
Query = (Process.Path like r"%\\bcdedit.exe" and (Process.CommandLine like r"%delete%" or Process.CommandLine like r"%deletevalue%" or Process.CommandLine like r"%import%" or Process.CommandLine like r"%safeboot%" or Process.CommandLine like r"%network%"))

[ActivityMonitoringRule]
# Detects suspicious child processes of electron apps (teams, discord, slack...).
# This could be a potential sign of ".asar" file tampering (See reference section for more information)
RuleName = Suspicious Electron Application Child Processes
EventType = Process.Start
Tag = proc-start-suspicious-electron-application-child-processes
RiskScore = 50
Query = (((Parent.Path like r"%\\Teams.exe" or Parent.Path like r"%\\slack.exe" or Parent.Path like r"%\\discord.exe") and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\mshta.exe")) and not (Parent.Path like r"%\\Discord.exe" and Process.CommandLine like r"%\\NVSMI\\nvidia-smi.exe%"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.
RuleName = Renamed Binary
EventType = Process.Start
Tag = proc-start-renamed-binary
RiskScore = 50
Query = ((Process.Name like r"Cmd.Exe" or Process.Name like r"CONHOST.EXE" or Process.Name like r"PowerShell.EXE" or Process.Name like r"pwsh.dll" or Process.Name like r"powershell\_ise.EXE" or Process.Name like r"psexec.exe" or Process.Name like r"psexec.c" or Process.Name like r"cscript.exe" or Process.Name like r"wscript.exe" or Process.Name like r"MSHTA.EXE" or Process.Name like r"REGSVR32.EXE" or Process.Name like r"wmic.exe" or Process.Name like r"CertUtil.exe" or Process.Name like r"RUNDLL32.EXE" or Process.Name like r"CMSTP.EXE" or Process.Name like r"msiexec.exe" or Process.Name like r"7z.exe" or Process.Name like r"WinRAR.exe" or Process.Name like r"wevtutil.exe" or Process.Name like r"net.exe" or Process.Name like r"net1.exe" or Process.Name like r"netsh.exe" or Process.Name like r"InstallUtil.exe") and not ((Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\conhost.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\powershell\_ise.exe" or Process.Path like r"%\\psexec.exe" or Process.Path like r"%\\psexec64.exe" or Process.Path like r"%\\cscript.exe" or Process.Path like r"%\\wscript.exe" or Process.Path like r"%\\mshta.exe" or Process.Path like r"%\\regsvr32.exe" or Process.Path like r"%\\WMIC.exe" or Process.Path like r"%\\certutil.exe" or Process.Path like r"%\\rundll32.exe" or Process.Path like r"%\\cmstp.exe" or Process.Path like r"%\\msiexec.exe" or Process.Path like r"%\\7z.exe" or Process.Path like r"%\\WinRAR.exe" or Process.Path like r"%\\wevtutil.exe" or Process.Path like r"%\\net.exe" or Process.Path like r"%\\net1.exe" or Process.Path like r"%\\netsh.exe" or Process.Path like r"%\\InstallUtil.exe")))

[ActivityMonitoringRule]
# A General detection for svchost.exe spawning rundll32.exe with command arguments like C:\windows\system32\davclnt.dll,DavSetCookie.
# This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server).
RuleName = Suspicious WebDav Client Execution
EventType = Process.Start
Tag = proc-start-suspicious-webdav-client-execution
RiskScore = 50
Query = ((Process.Path like r"%\\rundll32.exe" or Process.Name == "RUNDLL32.EXE") and Process.CommandLine like r"%C:\\windows\\system32\\davclnt.dll,DavSetCookie%")

[ActivityMonitoringRule]
# Threat actors can use the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery.
RuleName = Suspicious Use of PsLogList
EventType = Process.Start
Tag = proc-start-suspicious-use-of-psloglist
RiskScore = 50
Query = ((Process.Name == "psloglist.exe" or (Process.Path like r"%\\psloglist.exe" or Process.Path like r"%\\psloglist64.exe")) or (Process.CommandLine like r"%security%" and Process.CommandLine like r"%accepteula%" and (Process.CommandLine like r"% -d%" or Process.CommandLine like r"% /d%" or Process.CommandLine like r"% -x%" or Process.CommandLine like r"% /x%" or Process.CommandLine like r"% -s%" or Process.CommandLine like r"% /s%")))

[ActivityMonitoringRule]
# Detects execution of the Notepad++ updater (gup) to launch other commands or executables
RuleName = Execute Arbitrary Binaries Using GUP Utility
EventType = Process.Start
Tag = proc-start-execute-arbitrary-binaries-using-gup-utility
RiskScore = 50
Query = ((Parent.Path like r"%\\gup.exe" and Process.Path like r"%\\explorer.exe") and not ((Process.Path like r"%\\explorer.exe" and Process.CommandLine like r"%\\Notepad++\\notepad++.exe%") or (Parent.Path like r"%\\Notepad++\\updater\\%") or (Process.CommandLine == '')))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)
RuleName = Sysprep on AppData Folder
EventType = Process.Start
Tag = proc-start-sysprep-on-appdata-folder
RiskScore = 50
Query = (Process.Path like r"%\\sysprep.exe" and Process.CommandLine like r"%\\AppData\\%")

[ActivityMonitoringRule]
# Adversaries may abuse msiexec.exe to proxy the execution of malicious payloads
RuleName = Suspicious MsiExec Embedding Parent
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-embedding-parent
RiskScore = 50
Query = (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe" or Process.Path like r"%\\cmd.exe") and Parent.CommandLine like r"%MsiExec.exe%" and Parent.CommandLine like r"%-Embedding %") and not ((Process.Path like r"%:\\Windows\\System32\\cmd.exe" and Process.CommandLine like r"%C:\\Program Files\\SplunkUniversalForwarder\\bin\\%") or (Process.CommandLine like r"%\\DismFoDInstall.cmd%" or Parent.CommandLine like r"%\\MsiExec.exe -Embedding %" and Parent.CommandLine like r"%Global\\MSI0000%")))
GenericProperty1 = Parent.CommandLine

[ActivityMonitoringRule]
# Detects MsiExec loading a DLL and calling its DllUnregisterServer function
RuleName = Suspicious Msiexec Load DLL
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-load-dll
RiskScore = 50
Query = (Process.Path like r"%\\msiexec.exe" and (Process.CommandLine like r"% /z %" or Process.CommandLine like r"% -z %") and Process.CommandLine like r"%.dll%")

[ActivityMonitoringRule]
# Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.
RuleName = Root Certificate Installed
EventType = Process.Start
Tag = proc-start-root-certificate-installed
RiskScore = 50
Query = ((Process.Path like r"%\\certutil.exe" and Process.CommandLine like r"%-addstore%" and Process.CommandLine like r"%root%") or (Process.Path like r"%\\CertMgr.exe" and Process.CommandLine like r"%/add%" and Process.CommandLine like r"%root%"))

[ActivityMonitoringRule]
# Upload file, credentials or data exfiltration with Binary part of Windows Defender
RuleName = Suspicious ConfigSecurityPolicy Execution
EventType = Process.Start
Tag = proc-start-suspicious-configsecuritypolicy-execution
RiskScore = 50
Query = ((Process.CommandLine like r"%ConfigSecurityPolicy.exe%" or Process.Path like r"%\\ConfigSecurityPolicy.exe" or Process.Name == "ConfigSecurityPolicy.exe") and (Process.CommandLine like r"%https://%" or Process.CommandLine like r"%http://%" or Process.CommandLine like r"%ftp://%"))

[ActivityMonitoringRule]
# Detects Windows Installer service (msiexec.exe) spawning "cmd" or "powershell"
RuleName = Always Install Elevated MSI Spawned Cmd And Powershell
EventType = Process.Start
Tag = proc-start-always-install-elevated-msi-spawned-cmd-and-powershell
RiskScore = 50
Query = (((Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe") or Process.Name in ["Cmd.Exe", "PowerShell.EXE", "pwsh.dll"]) and (Parent.Path like r"%\\Windows\\Installer\\%" and Parent.Path like r"%msi%" and Parent.Path like r"%tmp"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities
RuleName = Compress Data and Lock With Password for Exfiltration With 7-ZIP
EventType = Process.Start
Tag = proc-start-compress-data-and-lock-with-password-for-exfiltration-with-7-zip
RiskScore = 50
Query = ((Process.CommandLine like r"%7z.exe%" or Process.CommandLine like r"%7za.exe%") and Process.CommandLine like r"% -p%" and (Process.CommandLine like r"% a %" or Process.CommandLine like r"% u %"))

[ActivityMonitoringRule]
# Detect attacker collecting audio via SoundRecorder application.
RuleName = Audio Capture via SoundRecorder
EventType = Process.Start
Tag = proc-start-audio-capture-via-soundrecorder
RiskScore = 50
Query = (Process.Path like r"%\\SoundRecorder.exe" and Process.CommandLine like r"%/FILE%")

[ActivityMonitoringRule]
# Emulates attack via documents through protocol handler in Microsoft Office. On successful execution you should see Microsoft Word launch a blank file.
RuleName = ProtocolHandler.exe Downloaded Suspicious File
EventType = Process.Start
Tag = proc-start-protocolhandler.exe-downloaded-suspicious-file
RiskScore = 50
Query = ((Process.Path like r"%\\protocolhandler.exe" or Process.Name == "ProtocolHandler.exe") and (Process.CommandLine like r"%\"ms-word%" and Process.CommandLine like r"%.docx\"%"))

[ActivityMonitoringRule]
# Payloads may be compressed, archived, or encrypted in order to avoid detection
RuleName = Run from a Zip File
EventType = Process.Start
Tag = proc-start-run-from-a-zip-file
RiskScore = 50
Query = Process.Path like r"%.zip\\%"

[ActivityMonitoringRule]
# Detects the Installation of a Exchange Transport Agent
RuleName = MSExchange Transport Agent Installation
EventType = Process.Start
Tag = proc-start-msexchange-transport-agent-installation
RiskScore = 50
Query = Process.CommandLine like r"%Install-TransportAgent%"

[ActivityMonitoringRule]
# The Workflow Command-line Compiler can be used for AWL bypass and is listed in Microsoft's recommended block rules.
RuleName = Use of Wfc.exe
EventType = Process.Start
Tag = proc-start-use-of-wfc.exe
RiskScore = 50
Query = (Process.Path like r"%\\wfc.exe" or Process.Name == "wfc.exe")

[ActivityMonitoringRule]
# Detects the use of the 'Pubprn.vbs' Microsoft signed script to execute commands.
RuleName = Pubprn.vbs Proxy Execution
EventType = Process.Start
Tag = proc-start-pubprn.vbs-proxy-execution
RiskScore = 50
Query = (Process.CommandLine like r"%\\pubprn.vbs%" and Process.CommandLine like r"%script:%")

[ActivityMonitoringRule]
# Detects suspicious child processes of SysAidServer (as seen in MERCURY threat actor intrusions)
RuleName = Suspicious SysAidServer Child
EventType = Process.Start
Tag = proc-start-suspicious-sysaidserver-child
RiskScore = 50
Query = ((Parent.Path like r"%\\java.exe" or Parent.Path like r"%\\javaw.exe") and Parent.CommandLine like r"%SysAidServer%")
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration
RuleName = Zip A Folder With PowerShell For Staging In Temp
EventType = Process.Start
Tag = proc-start-zip-a-folder-with-powershell-for-staging-in-temp
RiskScore = 50
Query = (Process.CommandLine like r"%Compress-Archive %" and Process.CommandLine like r"% -Path %" and Process.CommandLine like r"% -DestinationPath %" and Process.CommandLine like r"%$env:TEMP\\%")

[ActivityMonitoringRule]
# Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity
RuleName = NirCmd Tool Execution
EventType = Process.Start
Tag = proc-start-nircmd-tool-execution
RiskScore = 50
Query = ((Process.Path like r"%\\NirCmd.exe" or Process.Name == "NirCmd.exe" or (Process.CommandLine like r"% execmd %" or Process.CommandLine like r"%.exe script %" or Process.CommandLine like r"%.exe shexec %" or Process.CommandLine like r"% runinteractive %")) or ((Process.CommandLine like r"% exec %" or Process.CommandLine like r"% exec2 %") and (Process.CommandLine like r"% show %" or Process.CommandLine like r"% hide %")))

[ActivityMonitoringRule]
# Detects shell spawned from Java host process, which could be a sign of exploitation (e.g. log4j exploitation)
RuleName = Shells Spawned by Java
EventType = Process.Start
Tag = proc-start-shells-spawned-by-java
RiskScore = 50
Query = ((Parent.Path like r"%\\java.exe" and (Process.Path like r"%\\cmd.exe" or Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\pwsh.exe")) and not (Parent.Path like r"%build%" and Process.CommandLine like r"%build%"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detect use of TruffleSnout.exe
RuleName = Launch TruffleSnout Executable
EventType = Process.Start
Tag = proc-start-launch-trufflesnout-executable
RiskScore = 50
Query = (Process.Name == "TruffleSnout.exe" or Process.Path like r"%\\TruffleSnout.exe")

[ActivityMonitoringRule]
# Adversaries may search the Registry on compromised systems for insecurely stored credentials.
# The Windows Registry stores configuration information that can be used by the system or other programs.
# Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services
RuleName = Enumeration for Credentials in Registry
EventType = Process.Start
Tag = proc-start-enumeration-for-credentials-in-registry
RiskScore = 50
Query = ((Process.Path like r"%\\reg.exe" and Process.CommandLine like r"% query %" and Process.CommandLine like r"%/t %" and Process.CommandLine like r"%REG\_SZ%" and Process.CommandLine like r"%/s%") and ((Process.CommandLine like r"%/f %" and Process.CommandLine like r"%HKLM%") or (Process.CommandLine like r"%/f %" and Process.CommandLine like r"%HKCU%") or Process.CommandLine like r"%HKCU\\Software\\SimonTatham\\PuTTY\\Sessions%"))

[ActivityMonitoringRule]
# Detects the execution of AdvancedRun utility
RuleName = Suspicious AdvancedRun Execution
EventType = Process.Start
Tag = proc-start-suspicious-advancedrun-execution
RiskScore = 50
Query = (Process.Name == "AdvancedRun.exe" or (Process.CommandLine like r"% /EXEFilename %" and Process.CommandLine like r"% /Run%") or (Process.CommandLine like r"% /WindowState 0%" and Process.CommandLine like r"% /RunAs %" and Process.CommandLine like r"% /CommandLine %"))

[ActivityMonitoringRule]
# Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.
RuleName = WinRM Access with Evil-WinRM
EventType = Process.Start
Tag = proc-start-winrm-access-with-evil-winrm
RiskScore = 50
Query = (Process.Path like r"%\\ruby.exe" and Process.CommandLine like r"%-i %" and Process.CommandLine like r"%-u %" and Process.CommandLine like r"%-p %")

[ActivityMonitoringRule]
# Application Virtualization Utility is included with Microsoft Office. We are able to abuse "AppVLP" to execute shell commands.
# Normally, this binary is used for Application Virtualization, but we can use it as an abuse binary to circumvent the ASR file path rule folder
# or to mark a file as a system file.
RuleName = Using AppVLP To Circumvent ASR File Path Rule
EventType = Process.Start
Tag = proc-start-using-appvlp-to-circumvent-asr-file-path-rule
RiskScore = 50
Query = (Process.CommandLine like r"%appvlp.exe%" and (Process.CommandLine like r"%cmd.exe%" or Process.CommandLine like r"%powershell.exe%" or Process.CommandLine like r"%pwsh.exe%") and (Process.CommandLine like r"%.sh%" or Process.CommandLine like r"%.exe%" or Process.CommandLine like r"%.dll%" or Process.CommandLine like r"%.bin%" or Process.CommandLine like r"%.bat%" or Process.CommandLine like r"%.cmd%" or Process.CommandLine like r"%.js%" or Process.CommandLine like r"%.msh%" or Process.CommandLine like r"%.reg%" or Process.CommandLine like r"%.scr%" or Process.CommandLine like r"%.ps%" or Process.CommandLine like r"%.vb%" or Process.CommandLine like r"%.jar%" or Process.CommandLine like r"%.pl%" or Process.CommandLine like r"%.inf%"))

[ActivityMonitoringRule]
# Uses the .NET InstallUtil.exe application in order to execute image without log
RuleName = Suspicious Execution of InstallUtil Without Log
EventType = Process.Start
Tag = proc-start-suspicious-execution-of-installutil-without-log
RiskScore = 50
Query = (Process.Path like r"%\\InstallUtil.exe" and Process.Path like r"%Microsoft.NET\\Framework%" and Process.CommandLine like r"%/logfile= %" and Process.CommandLine like r"%/LogToConsole=false%")

[ActivityMonitoringRule]
# Detects the use of a Visual Studio bundled tool named DumpMinitool.exe
RuleName = DumpMinitool Usage
EventType = Process.Start
Tag = proc-start-dumpminitool-usage
RiskScore = 50
Query = ((Process.Path like r"%\\DumpMinitool.exe" or Process.Name == "DumpMinitool.exe") or (Process.CommandLine like r"% --processId %" and Process.CommandLine like r"% --dumpType Full%"))

[ActivityMonitoringRule]
# Detects file execution using the msdeploy.exe lolbin
RuleName = Execute Files with Msdeploy.exe
EventType = Process.Start
Tag = proc-start-execute-files-with-msdeploy.exe
RiskScore = 50
Query = (Process.CommandLine like r"%verb:sync%" and Process.CommandLine like r"%-source:RunCommand%" and Process.CommandLine like r"%-dest:runCommand%" and Process.Path like r"%\\msdeploy.exe")

[ActivityMonitoringRule]
# Extexport.exe loads dll and is execute from other folder the original path
RuleName = Suspicious Extexport Execution
EventType = Process.Start
Tag = proc-start-suspicious-extexport-execution
RiskScore = 50
Query = (Process.CommandLine like r"%Extexport.exe%" or Process.Path like r"%\\Extexport.exe" or Process.Name == "extexport.exe")

[ActivityMonitoringRule]
# Detects suspicious ways to download files or content using PowerShell
RuleName = PowerShell Web Download
EventType = Process.Start
Tag = proc-start-powershell-web-download
RiskScore = 50
Query = (Process.CommandLine like r"%.DownloadString(%" or Process.CommandLine like r"%.DownloadFile(%")

[ActivityMonitoringRule]
# Tools to Capture Network Packets on the windows 10 with October 2018 Update or later.
RuleName = Use of PktMon.exe
EventType = Process.Start
Tag = proc-start-use-of-pktmon.exe
RiskScore = 50
Query = (Process.Path like r"%PktMon.exe" or Process.Name == "PktMon.exe")

[ActivityMonitoringRule]
# Detects Access to Domain Group Policies stored in SYSVOL
RuleName = Suspicious SYSVOL Domain Group Policy Access
EventType = Process.Start
Tag = proc-start-suspicious-sysvol-domain-group-policy-access
RiskScore = 50
Query = (Process.CommandLine like r"%\\SYSVOL\\%" and Process.CommandLine like r"%\\policies\\%")

[ActivityMonitoringRule]
# Detects a code page switch in command line or batch scripts to a rare language
RuleName = Suspicious Code Page Switch
EventType = Process.Start
Tag = proc-start-suspicious-code-page-switch
RiskScore = 50
Query = (Process.Path like r"%\\chcp.com" and (Process.CommandLine like r"% 936" or Process.CommandLine like r"% 1258"))

[ActivityMonitoringRule]
# Detects the execution of CustomShellHost binary where the child isn't located in 'C:\Windows\explorer.exe'
RuleName = Suspicious CustomShellHost Execution
EventType = Process.Start
Tag = proc-start-suspicious-customshellhost-execution
RiskScore = 50
Query = (Parent.Path like r"%\\CustomShellHost.exe" and not (Process.Path like r"C:\\Windows\\explorer.exe"))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)
RuleName = AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl
EventType = Process.Start
Tag = proc-start-awl-bypass-with-winrm.vbs-and-malicious-wsmpty.xsl/wsmtxt.xsl
RiskScore = 50
Query = (Process.CommandLine like r"%winrm%" and (Process.CommandLine like r"%format:pretty%" or Process.CommandLine like r"%format:\"pretty\"%" or Process.CommandLine like r"%format:\"text\"%" or Process.CommandLine like r"%format:text%") and not ((Process.Path like r"C:\\Windows\\System32\\%" or Process.Path like r"C:\\Windows\\SysWOW64\\%")))

[ActivityMonitoringRule]
# Looks for changes to registry to disable any write-protect property for storage devices. This could be a precursor to a ransomware attack and has been an observed technique used by cypherpunk group.
RuleName = Write Protect For Storage Disabled
EventType = Process.Start
Tag = proc-start-write-protect-for-storage-disabled
RiskScore = 50
Query = (Process.CommandLine like r"%reg add%" and Process.CommandLine like r"%\\system\\currentcontrolset\\control%" and Process.CommandLine like r"%write protection%" and Process.CommandLine like r"%0%" and (Process.CommandLine like r"%storage%" or Process.CommandLine like r"%storagedevicepolicies%"))

[ActivityMonitoringRule]
# Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.
RuleName = Remote Desktop Protocol Use Mstsc
EventType = Process.Start
Tag = proc-start-remote-desktop-protocol-use-mstsc
RiskScore = 50
Query = ((((Process.Path like r"%\\mstsc.exe" or Process.Name == "mstsc.exe") and Process.CommandLine like r"% /v:%") and not ((Parent.Path like r"C:\\Windows\\System32\\lxss\\wslhost.exe" and Process.CommandLine like r"%C:\\ProgramData\\Microsoft\\WSL\\wslg.rdp%"))) or ((Process.Path like r"%\\cmdkey.exe" or Process.Name == "cmdkey.exe") and (Process.CommandLine like r"% /g%" and Process.CommandLine like r"% /u%" and Process.CommandLine like r"% /p%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects the use of Ldifde.exe with specific command line arguments to potentially load an LDIF file containing HTTP-based arguments.
# Ldifde.exe is present, by default, on domain controllers and only requires user-level authentication to execute.
RuleName = Suspicious Ldifde Command Usage
EventType = Process.Start
Tag = proc-start-suspicious-ldifde-command-usage
RiskScore = 50
Query = ((Process.Path like r"%\\ldifde.exe" or Process.Name == "ldifde.exe.mui") and (Process.CommandLine like r"%-i%" and Process.CommandLine like r"%-f%"))

[ActivityMonitoringRule]
# dotnet.exe will execute any DLL and execute unsigned code
RuleName = Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN
EventType = Process.Start
Tag = proc-start-dotnet.exe-exec-dll-and-execute-unsigned-code-lolbin
RiskScore = 50
Query = ((Process.CommandLine like r"%.dll" or Process.CommandLine like r"%.csproj") and Process.Path like r"%\\dotnet.exe")

[ActivityMonitoringRule]
# Detects creation of a scheduled task with a GUID like name
RuleName = Suspicious Scheduled Task Name As GUID
EventType = Process.Start
Tag = proc-start-suspicious-scheduled-task-name-as-guid
RiskScore = 50
Query = (Process.Path like r"%\\schtasks.exe" and Process.CommandLine like r"%/Create %" and (Process.CommandLine like r"%/TN \"{%" or Process.CommandLine like r"%/TN '{%" or Process.CommandLine like r"%/TN {%") and (Process.CommandLine like r"%}\"%" or Process.CommandLine like r"%}'%" or Process.CommandLine like r"%} %"))

[ActivityMonitoringRule]
# Detects netsh commands that configure a port forwarding (PortProxy)
RuleName = Netsh Port Forwarding
EventType = Process.Start
Tag = proc-start-netsh-port-forwarding
RiskScore = 50
Query = ((Process.Path like r"%\\netsh.exe" and Process.CommandLine like r"%interface%" and Process.CommandLine like r"%portproxy%" and Process.CommandLine like r"%add%" and Process.CommandLine like r"%v4tov4%") or (Process.Path like r"%\\netsh.exe" and Process.CommandLine like r"%connectp%" and Process.CommandLine like r"%listena%" and Process.CommandLine like r"%c=%"))

[ActivityMonitoringRule]
# Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
# Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
RuleName = Suspicious Msiexec Quiet Install
EventType = Process.Start
Tag = proc-start-suspicious-msiexec-quiet-install
RiskScore = 50
Query = (((Process.Path like r"%\\msiexec.exe" or Process.Name == "msiexec.exe") and (Process.CommandLine like r"%/i%" or Process.CommandLine like r"%-i%" or Process.CommandLine like r"%/package%" or Process.CommandLine like r"%-package%" or Process.CommandLine like r"%/a%" or Process.CommandLine like r"%-a%" or Process.CommandLine like r"%/j%" or Process.CommandLine like r"%-j%") and (Process.CommandLine like r"%/q%" or Process.CommandLine like r"%-q%")) and not ((Parent.Path like r"C:\\Users\\%" and Parent.Path like r"%\\AppData\\Local\\Temp\\%") or (Parent.Path like r"C:\\Windows\\Temp\\%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects dropping of dll files in system32 that may be used to retrieve user credentials from LSASS
RuleName = Dropping Of Password Filter DLL
EventType = Process.Start
Tag = proc-start-dropping-of-password-filter-dll
RiskScore = 50
Query = (Process.CommandLine like r"%HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa%" and Process.CommandLine like r"%scecli\\0%" and Process.CommandLine like r"%reg add%")

[ActivityMonitoringRule]
# Detect use of the Windows 8.3 short name. Which could be used as a method to avoid command-line detection
RuleName = Use Short Name Path in Command Line
EventType = Process.Start
Tag = proc-start-use-short-name-path-in-command-line
RiskScore = 50
Query = ((Process.CommandLine like r"%~1\\%" or Process.CommandLine like r"%~2\\%") and not ((Parent.Path like r"C:\\Windows\\System32\\Dism.exe" or Parent.Path like r"C:\\Windows\\System32\\cleanmgr.exe" or Parent.Path like r"C:\\Program Files\\GPSoftware\\Directory Opus\\dopus.exe") or (Parent.Path like r"%\\WebEx\\WebexHost.exe" or Parent.Path like r"%\\thor\\thor64.exe" or Parent.Path like r"%\\veam.backup.shell.exe" or Parent.Path like r"%\\winget.exe" or Parent.Path like r"%\\Everything\\Everything.exe") or Parent.Path like r"%\\AppData\\Local\\Temp\\WinGet\\%" or (Process.CommandLine like r"%\\appdata\\local\\webex\\webex64\\meetings\\wbxreport.exe%" or Process.CommandLine like r"%C:\\Program Files\\Git\\post-install.bat%" or Process.CommandLine like r"%C:\\Program Files\\Git\\cmd\\scalar.exe%")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# The "Squirrel.exe" binary that is part of multiple software (Slack, Teams, Discord...etc) can be used as a LOLBIN
RuleName = Use of Squirrel.exe
EventType = Process.Start
Tag = proc-start-use-of-squirrel.exe
RiskScore = 50
Query = (Process.Path like r"%\\squirrel.exe" and (Process.CommandLine like r"% --download %" or Process.CommandLine like r"% --update %" or Process.CommandLine like r"% --updateRollback=%") and Process.CommandLine like r"%http%")

[ActivityMonitoringRule]
# Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)
RuleName = Execute Code with Pester.bat as Parent
EventType = Process.Start
Tag = proc-start-execute-code-with-pester.bat-as-parent
RiskScore = 50
Query = ((Parent.Path like r"%\\powershell.exe" or Parent.Path like r"%\\pwsh.exe") and Parent.CommandLine like r"%\\WindowsPowerShell\\Modules\\Pester\\%" and (Parent.CommandLine like r"%{ Invoke-Pester -EnableExit ;%" or Parent.CommandLine like r"%{ Get-Help \"%"))
GenericProperty1 = Parent.Path
GenericProperty2 = Parent.CommandLine

[ActivityMonitoringRule]
# Detects Possible usage of Windows Subsystem for Linux (WSL) binary as a LOLBIN
RuleName = WSL Execution
EventType = Process.Start
Tag = proc-start-wsl-execution
RiskScore = 50
Query = (((Process.Path like r"%\\wsl.exe" or Process.Name == "wsl.exe") and (Process.CommandLine like r"% -e %" or Process.CommandLine like r"% --exec %" or Process.CommandLine like r"% --system %" or Process.CommandLine like r"% /mnt/c%")) and not ((Parent.Path like r"%\\cmd.exe" and Process.CommandLine like r"% -d %" and Process.CommandLine like r"% -e kill %")))
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# Detects WMI script event consumers
RuleName = WMI Persistence - Script Event Consumer
EventType = Process.Start
Tag = proc-start-wmi-persistence-script-event-consumer
RiskScore = 50
Query = (Process.Path like r"C:\\WINDOWS\\system32\\wbem\\scrcons.exe" and Parent.Path like r"C:\\Windows\\System32\\svchost.exe")
GenericProperty1 = Parent.Path

[ActivityMonitoringRule]
# RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).
RuleName = Abusable Invoke-ATHRemoteFXvGPUDisablementCommand
EventType = Process.Start
Tag = proc-start-abusable-invoke-athremotefxvgpudisablementcommand
RiskScore = 50
Query = (Process.CommandLine like r"%Invoke-ATHRemoteFXvGPUDisablementCommand %" and (Process.CommandLine like r"%-ModuleName %" or Process.CommandLine like r"%-ModulePath %" or Process.CommandLine like r"%-ScriptBlock %" or Process.CommandLine like r"%-RemoteFXvGPUDisablementFilePath%"))

[ActivityMonitoringRule]
# Launch 64-bit shellcode from a debugger script file using cdb.exe.
RuleName = Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner
EventType = Process.Start
Tag = proc-start-possible-app-whitelisting-bypass-via-windbg/cdb-as-a-shellcode-runner
RiskScore = 50
Query = ((Process.Path like r"%\\cdb.exe" or Process.Name == "CDB.Exe") and (Process.CommandLine like r"% -c %" or Process.CommandLine like r"% -cf %"))

[ActivityMonitoringRule]
# Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.
RuleName = Domain Trust Discovery
EventType = Process.Start
Tag = proc-start-domain-trust-discovery
RiskScore = 50
Query = ((Process.Path like r"%\\nltest.exe" and (Process.CommandLine like r"%domain\_trusts%" or Process.CommandLine like r"%all\_trusts%" or Process.CommandLine like r"%/trusted\_domains%" or Process.CommandLine like r"%/dclist%")) or (Process.Path like r"%\\dsquery.exe" and Process.CommandLine like r"%trustedDomain%") or (Process.Path like r"%\\dsquery.exe" and Process.CommandLine like r"%-filter%" and Process.CommandLine like r"%trustedDomain%"))

[ActivityMonitoringRule]
# Detects the redirection of an alternate data stream (ADS) of / within a Windows command line session
RuleName = Cmd Stream Redirection
EventType = Process.Start
Tag = proc-start-cmd-stream-redirection
RiskScore = 50
Query = ((Process.Path like r"%\\cmd.exe" and Process.CommandLine like r"%> %" and Process.CommandLine like r"%:%") and not (Process.CommandLine like r"%:\\%"))

[ActivityMonitoringRule]
# Detects potential DLL sideloading using ClassicExplorer32.dll from the Classic Shell software
RuleName = Potential DLL Sideloading Via ClassicExplorer32.dll
EventType = Image.Load
Tag = potential-dll-sideloading-via-classicexplorer32.dll
RiskScore = 50
Query = (Image.Path like r"%\\ClassicExplorer32.dll" and not (Image.Path like r"C:\\Program Files\\Classic Shell\\%"))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects DLL sideloading of DLLs that are part of web browsers
RuleName = Web Browsers DLL Sideloading
EventType = Image.Load
Tag = web-browsers-dll-sideloading
RiskScore = 50
Query = (Image.Path like r"%\\chrome\_frame\_helper.dll" and not (Image.Path like r"%\\AppData\\local\\Google\\Chrome\\Application\\%" or (Image.Path like r"C:\\Program Files\\Google\\Chrome\\Application\\%" or Image.Path like r"C:\\Program Files (x86)\\Google\\Chrome\\Application\\%")))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects DLL sideloading of "dbgcore.dll"
RuleName = DLL Sideloading Of DBGCORE.DLL
EventType = Image.Load
Tag = dll-sideloading-of-dbgcore.dll
RiskScore = 50
Query = (Image.Path like r"%\\dbgcore.dll" and not (((Image.Path like r"C:\\Windows\\System32\\%" or Image.Path like r"C:\\Windows\\SysWOW64\\%" or Image.Path like r"C:\\Windows\\WinSxS\\%" or Image.Path like r"C:\\Windows\\SoftwareDistribution\\%" or Image.Path like r"C:\\Windows\\SystemTemp\\%" or Image.Path like r"C:\\Program Files (x86)\\%" or Image.Path like r"C:\\Program Files\\%")) or (Image.Path like r"%\\Steam\\bin\\cef\\cef.win7x64\\dbgcore.dll")))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects DLL sideloading of DLLs that are part of third party software (zoom, discord....etc)
RuleName = Third Party Software DLL Sideloading
EventType = Image.Load
Tag = third-party-software-dll-sideloading
RiskScore = 50
Query = ((Image.Path like r"%\\commfunc.dll" and not (Image.Path like r"%\\AppData\\local\\Google\\Chrome\\Application\\%" or (Image.Path like r"C:\\Program Files\\Lenovo\\Communications Utility\\%" or Image.Path like r"C:\\Program Files (x86)\\Lenovo\\Communications Utility\\%"))) or (Image.Path like r"%\\tosbtkbd.dll" and not ((Image.Path like r"C:\\Program Files\\Toshiba\\Bluetooth Toshiba Stack\\%" or Image.Path like r"C:\\Program Files (x86)\\Toshiba\\Bluetooth Toshiba Stack\\%"))))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects DLL sideloading of DLLs that are loaded by the SCM for some services (IKE, IKEEXT, SessionEnv) which do not exists on a typical modern system
RuleName = SCM DLL Sideload
EventType = Image.Load
Tag = scm-dll-sideload
RiskScore = 50
Query = ((Image.Path like r"C:\\Windows\\System32\\WLBSCTRL.dll" or Image.Path like r"C:\\Windows\\System32\\TSMSISrv.dll" or Image.Path like r"C:\\Windows\\System32\\TSVIPSrv.dll") and Process.Path like r"C:\\Windows\\System32\\svchost.exe")
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution.
RuleName = Suspicious WSMAN Provider Image Loads
EventType = Image.Load
Tag = suspicious-wsman-provider-image-loads
RiskScore = 50
Query = (((((Image.Path like r"%\\WsmSvc.dll" or Image.Path like r"%\\WsmAuto.dll" or Image.Path like r"%\\Microsoft.WSMan.Management.ni.dll") or Process.Name in ["WsmSvc.dll", "WSMANAUTOMATION.DLL", "Microsoft.WSMan.Management.dll"]) or (Process.Path like r"%\\svchost.exe" and Process.Name == "WsmWmiPl.dll")) and not (((Process.Path like r"%\\powershell.exe" or Process.Path like r"%C:\\Windows\\System32\\sdiagnhost.exe" or Process.Path like r"%C:\\Windows\\System32\\services.exe")) or ((Process.CommandLine like r"%svchost.exe -k netsvcs -p -s BITS%" or Process.CommandLine like r"%svchost.exe -k GraphicsPerfSvcGroup -s GraphicsPerfSvc%" or Process.CommandLine like r"%svchost.exe -k NetworkService -p -s Wecsvc%" or Process.CommandLine like r"%svchost.exe -k netsvcs%")) or ((Process.Path like r"C:\\Windows\\Microsoft.NET\\Framework64\\v%" or Process.Path like r"C:\\Windows\\Microsoft.NET\\Framework\\v%") and Process.Path like r"%\\mscorsvw.exe") or ((Process.Path like r"C:\\Windows\\System32\\Configure-SMRemoting.exe" or Process.Path like r"C:\\Windows\\System32\\ServerManager.exe")) or (Process.Path like r"C:\\Windows\\Temp\\asgard2-agent\\%") or (Process.Path like r"C:\\Program Files\\Citrix\\%") or (Process.Path like r"%\\powershell\_ise.exe") or (Process.Path like r"C:\\$WINDOWS.~BT\\Sources\\%"))) and not ((Process.Path like r"%\\svchost.exe" and Process.CommandLine == '')))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Loading unsigned image (DLL, EXE) into LSASS process
RuleName = Unsigned Image Loaded Into LSASS Process
EventType = Image.Load
Tag = unsigned-image-loaded-into-lsass-process
RiskScore = 50
Query = (Process.Path like r"%\\lsass.exe" and Image.IsSigned == "false")
GenericProperty1 = Image.IsSigned

[ActivityMonitoringRule]
# Detects DLL sideloading of DLLs that are part of antivirus software suchas McAfee, Symantec...etc
RuleName = Antivirus Software DLL Sideloading
EventType = Image.Load
Tag = antivirus-software-dll-sideloading
RiskScore = 50
Query = ((((Image.Path like r"%\\log.dll" and not (((Image.Path like r"C:\\Program Files\\Bitdefender Antivirus Free\\%" or Image.Path like r"C:\\Program Files (x86)\\Bitdefender Antivirus Free\\%")) or (Process.Path like r"C:\\Program Files\\Dell\\SARemediation\\audit\\TelemetryUtility.exe" and (Image.Path like r"C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll" or Image.Path like r"C:\\Program Files\\Dell\\SARemediation\\audit\\log.dll")) or (Image.Path like r"C:\\Program Files\\Canon\\MyPrinter\\%"))) or (Image.Path like r"%\\qrt.dll" and not ((Image.Path like r"C:\\Program Files\\F-Secure\\Anti-Virus\\%" or Image.Path like r"C:\\Program Files (x86)\\F-Secure\\Anti-Virus\\%")))) or ((Image.Path like r"%\\ashldres.dll" or Image.Path like r"%\\lockdown.dll" or Image.Path like r"%\\vsodscpl.dll") and not ((Image.Path like r"C:\\Program Files\\McAfee\\%" or Image.Path like r"C:\\Program Files (x86)\\McAfee\\%")))) or (Image.Path like r"%\\vftrace.dll" and not ((Image.Path like r"C:\\Program Files\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\%" or Image.Path like r"C:\\Program Files (x86)\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\%"))))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects DLL sideloading of VMGuestLib.dll by the WmiApSrv service.
RuleName = VMGuestLib DLL Sideload
EventType = Image.Load
Tag = vmguestlib-dll-sideload
RiskScore = 50
Query = ((Image.Path like r"%\\VMware\\VMware Tools\\vmStatsProvider\\win32%" and Image.Path like r"%\\vmGuestLib.dll%" and Process.Path like r"%\\Windows\\System32\\wbem\\WmiApSrv.exe") and not (Image.IsSigned == "true"))
GenericProperty1 = Image.Path
GenericProperty2 = Image.IsSigned

[ActivityMonitoringRule]
# Detects DLL sideloading of DLLs usually located in system locations (System32, SysWOW64...)
RuleName = System DLL Sideloading From Non System Locations
EventType = Image.Load
Tag = system-dll-sideloading-from-non-system-locations
RiskScore = 50
Query = ((Image.Path like r"%\\shfolder.dll" or Image.Path like r"%\\activeds.dll" or Image.Path like r"%\\adsldpc.dll" or Image.Path like r"%\\aepic.dll" or Image.Path like r"%\\apphelp.dll" or Image.Path like r"%\\applicationframe.dll" or Image.Path like r"%\\appxalluserstore.dll" or Image.Path like r"%\\appxdeploymentclient.dll" or Image.Path like r"%\\archiveint.dll" or Image.Path like r"%\\atl.dll" or Image.Path like r"%\\audioses.dll" or Image.Path like r"%\\auditpolcore.dll" or Image.Path like r"%\\authfwcfg.dll" or Image.Path like r"%\\authz.dll" or Image.Path like r"%\\avrt.dll" or Image.Path like r"%\\bcd.dll" or Image.Path like r"%\\bcp47langs.dll" or Image.Path like r"%\\bcp47mrm.dll" or Image.Path like r"%\\bcrypt.dll" or Image.Path like r"%\\cabinet.dll" or Image.Path like r"%\\cabview.dll" or Image.Path like r"%\\certenroll.dll" or Image.Path like r"%\\cldapi.dll" or Image.Path like r"%\\clipc.dll" or Image.Path like r"%\\clusapi.dll" or Image.Path like r"%\\cmpbk32.dll" or Image.Path like r"%\\coloradapterclient.dll" or Image.Path like r"%\\colorui.dll" or Image.Path like r"%\\comdlg32.dll" or Image.Path like r"%\\connect.dll" or Image.Path like r"%\\coremessaging.dll" or Image.Path like r"%\\credui.dll" or Image.Path like r"%\\cryptbase.dll" or Image.Path like r"%\\cryptdll.dll" or Image.Path like r"%\\cryptui.dll" or Image.Path like r"%\\cryptxml.dll" or Image.Path like r"%\\cscapi.dll" or Image.Path like r"%\\cscobj.dll" or Image.Path like r"%\\cscui.dll" or Image.Path like r"%\\d2d1.dll" or Image.Path like r"%\\d3d10.dll" or Image.Path like r"%\\d3d10\_1.dll" or Image.Path like r"%\\d3d10\_1core.dll" or Image.Path like r"%\\d3d10core.dll" or Image.Path like r"%\\d3d10warp.dll" or Image.Path like r"%\\d3d11.dll" or Image.Path like r"%\\d3d12.dll" or Image.Path like r"%\\d3d9.dll" or Image.Path like r"%\\dataexchange.dll" or Image.Path like r"%\\davclnt.dll" or Image.Path like r"%\\dcomp.dll" or Image.Path like r"%\\defragproxy.dll" or Image.Path like r"%\\desktopshellext.dll" or Image.Path like r"%\\deviceassociation.dll" or Image.Path like r"%\\devicecredential.dll" or Image.Path like r"%\\devicepairing.dll" or Image.Path like r"%\\devobj.dll" or Image.Path like r"%\\devrtl.dll" or Image.Path like r"%\\dhcpcmonitor.dll" or Image.Path like r"%\\dhcpcsvc.dll" or Image.Path like r"%\\dhcpcsvc6.dll" or Image.Path like r"%\\directmanipulation.dll" or Image.Path like r"%\\dismapi.dll" or Image.Path like r"%\\dismcore.dll" or Image.Path like r"%\\dmcfgutils.dll" or Image.Path like r"%\\dmcmnutils.dll" or Image.Path like r"%\\dmenrollengine.dll" or Image.Path like r"%\\dmenterprisediagnostics.dll" or Image.Path like r"%\\dmiso8601utils.dll" or Image.Path like r"%\\dmoleaututils.dll" or Image.Path like r"%\\dmprocessxmlfiltered.dll" or Image.Path like r"%\\dmpushproxy.dll" or Image.Path like r"%\\dmxmlhelputils.dll" or Image.Path like r"%\\dnsapi.dll" or Image.Path like r"%\\dot3api.dll" or Image.Path like r"%\\dot3cfg.dll" or Image.Path like r"%\\drprov.dll" or Image.Path like r"%\\dsclient.dll" or Image.Path like r"%\\dsparse.dll" or Image.Path like r"%\\dsreg.dll" or Image.Path like r"%\\dsrole.dll" or Image.Path like r"%\\dui70.dll" or Image.Path like r"%\\duser.dll" or Image.Path like r"%\\dusmapi.dll" or Image.Path like r"%\\dwmapi.dll" or Image.Path like r"%\\dwrite.dll" or Image.Path like r"%\\dxgi.dll" or Image.Path like r"%\\dxva2.dll" or Image.Path like r"%\\eappcfg.dll" or Image.Path like r"%\\eappprxy.dll" or Image.Path like r"%\\edputil.dll" or Image.Path like r"%\\efsadu.dll" or Image.Path like r"%\\efsutil.dll" or Image.Path like r"%\\esent.dll" or Image.Path like r"%\\execmodelproxy.dll" or Image.Path like r"%\\explorerframe.dll" or Image.Path like r"%\\fastprox.dll" or Image.Path like r"%\\faultrep.dll" or Image.Path like r"%\\fddevquery.dll" or Image.Path like r"%\\feclient.dll" or Image.Path like r"%\\fhcfg.dll" or Image.Path like r"%\\firewallapi.dll" or Image.Path like r"%\\flightsettings.dll" or Image.Path like r"%\\fltlib.dll" or Image.Path like r"%\\fveapi.dll" or Image.Path like r"%\\fwbase.dll" or Image.Path like r"%\\fwcfg.dll" or Image.Path like r"%\\fwpolicyiomgr.dll" or Image.Path like r"%\\fwpuclnt.dll" or Image.Path like r"%\\getuname.dll" or Image.Path like r"%\\hid.dll" or Image.Path like r"%\\hnetmon.dll" or Image.Path like r"%\\httpapi.dll" or Image.Path like r"%\\idstore.dll" or Image.Path like r"%\\ieadvpack.dll" or Image.Path like r"%\\iedkcs32.dll" or Image.Path like r"%\\iertutil.dll" or Image.Path like r"%\\ifmon.dll" or Image.Path like r"%\\iphlpapi.dll" or Image.Path like r"%\\iri.dll" or Image.Path like r"%\\iscsidsc.dll" or Image.Path like r"%\\iscsium.dll" or Image.Path like r"%\\isv.exe\_rsaenh.dll" or Image.Path like r"%\\joinutil.dll" or Image.Path like r"%\\ksuser.dll" or Image.Path like r"%\\ktmw32.dll" or Image.Path like r"%\\licensemanagerapi.dll" or Image.Path like r"%\\licensingdiagspp.dll" or Image.Path like r"%\\linkinfo.dll" or Image.Path like r"%\\loadperf.dll" or Image.Path like r"%\\logoncli.dll" or Image.Path like r"%\\logoncontroller.dll" or Image.Path like r"%\\lpksetupproxyserv.dll" or Image.Path like r"%\\magnification.dll" or Image.Path like r"%\\mapistub.dll" or Image.Path like r"%\\mfcore.dll" or Image.Path like r"%\\mfplat.dll" or Image.Path like r"%\\mi.dll" or Image.Path like r"%\\midimap.dll" or Image.Path like r"%\\miutils.dll" or Image.Path like r"%\\mlang.dll" or Image.Path like r"%\\mmdevapi.dll" or Image.Path like r"%\\mobilenetworking.dll" or Image.Path like r"%\\mpr.dll" or Image.Path like r"%\\mprapi.dll" or Image.Path like r"%\\mrmcorer.dll" or Image.Path like r"%\\msacm32.dll" or Image.Path like r"%\\mscms.dll" or Image.Path like r"%\\mscoree.dll" or Image.Path like r"%\\msctf.dll" or Image.Path like r"%\\msctfmonitor.dll" or Image.Path like r"%\\msdrm.dll" or Image.Path like r"%\\msftedit.dll" or Image.Path like r"%\\msi.dll" or Image.Path like r"%\\msutb.dll" or Image.Path like r"%\\mswb7.dll" or Image.Path like r"%\\mswsock.dll" or Image.Path like r"%\\msxml3.dll" or Image.Path like r"%\\mtxclu.dll" or Image.Path like r"%\\napinsp.dll" or Image.Path like r"%\\ncrypt.dll" or Image.Path like r"%\\ndfapi.dll" or Image.Path like r"%\\netid.dll" or Image.Path like r"%\\netiohlp.dll" or Image.Path like r"%\\netplwiz.dll" or Image.Path like r"%\\netprofm.dll" or Image.Path like r"%\\netsetupapi.dll" or Image.Path like r"%\\netshell.dll" or Image.Path like r"%\\netutils.dll" or Image.Path like r"%\\networkexplorer.dll" or Image.Path like r"%\\newdev.dll" or Image.Path like r"%\\ninput.dll" or Image.Path like r"%\\nlaapi.dll" or Image.Path like r"%\\nlansp\_c.dll" or Image.Path like r"%\\npmproxy.dll" or Image.Path like r"%\\nshhttp.dll" or Image.Path like r"%\\nshipsec.dll" or Image.Path like r"%\\nshwfp.dll" or Image.Path like r"%\\ntdsapi.dll" or Image.Path like r"%\\ntlanman.dll" or Image.Path like r"%\\ntlmshared.dll" or Image.Path like r"%\\ntmarta.dll" or Image.Path like r"%\\ntshrui.dll" or Image.Path like r"%\\oleacc.dll" or Image.Path like r"%\\omadmapi.dll" or Image.Path like r"%\\onex.dll" or Image.Path like r"%\\osbaseln.dll" or Image.Path like r"%\\osuninst.dll" or Image.Path like r"%\\p2p.dll" or Image.Path like r"%\\p2pnetsh.dll" or Image.Path like r"%\\p9np.dll" or Image.Path like r"%\\pcaui.dll" or Image.Path like r"%\\pdh.dll" or Image.Path like r"%\\peerdistsh.dll" or Image.Path like r"%\\pla.dll" or Image.Path like r"%\\pnrpnsp.dll" or Image.Path like r"%\\policymanager.dll" or Image.Path like r"%\\polstore.dll" or Image.Path like r"%\\printui.dll" or Image.Path like r"%\\propsys.dll" or Image.Path like r"%\\prvdmofcomp.dll" or Image.Path like r"%\\puiapi.dll" or Image.Path like r"%\\radcui.dll" or Image.Path like r"%\\rasapi32.dll" or Image.Path like r"%\\rasgcw.dll" or Image.Path like r"%\\rasman.dll" or Image.Path like r"%\\rasmontr.dll" or Image.Path like r"%\\reagent.dll" or Image.Path like r"%\\regapi.dll" or Image.Path like r"%\\resutils.dll" or Image.Path like r"%\\rmclient.dll" or Image.Path like r"%\\rpcnsh.dll" or Image.Path like r"%\\rsaenh.dll" or Image.Path like r"%\\rtutils.dll" or Image.Path like r"%\\rtworkq.dll" or Image.Path like r"%\\samcli.dll" or Image.Path like r"%\\samlib.dll" or Image.Path like r"%\\sapi\_onecore.dll" or Image.Path like r"%\\sas.dll" or Image.Path like r"%\\scansetting.dll" or Image.Path like r"%\\scecli.dll" or Image.Path like r"%\\schedcli.dll" or Image.Path like r"%\\secur32.dll" or Image.Path like r"%\\shell32.dll" or Image.Path like r"%\\slc.dll" or Image.Path like r"%\\snmpapi.dll" or Image.Path like r"%\\spp.dll" or Image.Path like r"%\\sppc.dll" or Image.Path like r"%\\srclient.dll" or Image.Path like r"%\\srpapi.dll" or Image.Path like r"%\\srvcli.dll" or Image.Path like r"%\\ssp.exe\_rsaenh.dll" or Image.Path like r"%\\ssp\_isv.exe\_rsaenh.dll" or Image.Path like r"%\\sspicli.dll" or Image.Path like r"%\\ssshim.dll" or Image.Path like r"%\\staterepository.core.dll" or Image.Path like r"%\\structuredquery.dll" or Image.Path like r"%\\sxshared.dll" or Image.Path like r"%\\tapi32.dll" or Image.Path like r"%\\tbs.dll" or Image.Path like r"%\\tdh.dll" or Image.Path like r"%\\tquery.dll" or Image.Path like r"%\\tsworkspace.dll" or Image.Path like r"%\\ttdrecord.dll" or Image.Path like r"%\\twext.dll" or Image.Path like r"%\\twinapi.dll" or Image.Path like r"%\\twinui.appcore.dll" or Image.Path like r"%\\uianimation.dll" or Image.Path like r"%\\uiautomationcore.dll" or Image.Path like r"%\\uireng.dll" or Image.Path like r"%\\uiribbon.dll" or Image.Path like r"%\\updatepolicy.dll" or Image.Path like r"%\\userenv.dll" or Image.Path like r"%\\utildll.dll" or Image.Path like r"%\\uxinit.dll" or Image.Path like r"%\\uxtheme.dll" or Image.Path like r"%\\vaultcli.dll" or Image.Path like r"%\\virtdisk.dll" or Image.Path like r"%\\vssapi.dll" or Image.Path like r"%\\vsstrace.dll" or Image.Path like r"%\\wbemprox.dll" or Image.Path like r"%\\wbemsvc.dll" or Image.Path like r"%\\wcmapi.dll" or Image.Path like r"%\\wcnnetsh.dll" or Image.Path like r"%\\wdi.dll" or Image.Path like r"%\\wdscore.dll" or Image.Path like r"%\\webservices.dll" or Image.Path like r"%\\wecapi.dll" or Image.Path like r"%\\wer.dll" or Image.Path like r"%\\wevtapi.dll" or Image.Path like r"%\\whhelper.dll" or Image.Path like r"%\\wimgapi.dll" or Image.Path like r"%\\winbrand.dll" or Image.Path like r"%\\windows.storage.dll" or Image.Path like r"%\\windows.storage.search.dll" or Image.Path like r"%\\windowscodecs.dll" or Image.Path like r"%\\windowscodecsext.dll" or Image.Path like r"%\\windowsudk.shellcommon.dll" or Image.Path like r"%\\winhttp.dll" or Image.Path like r"%\\wininet.dll" or Image.Path like r"%\\winipsec.dll" or Image.Path like r"%\\winmde.dll" or Image.Path like r"%\\winmm.dll" or Image.Path like r"%\\winnsi.dll" or Image.Path like r"%\\winrnr.dll" or Image.Path like r"%\\winsqlite3.dll" or Image.Path like r"%\\winsta.dll" or Image.Path like r"%\\wkscli.dll" or Image.Path like r"%\\wlanapi.dll" or Image.Path like r"%\\wlancfg.dll" or Image.Path like r"%\\wldp.dll" or Image.Path like r"%\\wlidprov.dll" or Image.Path like r"%\\wmiclnt.dll" or Image.Path like r"%\\wmidcom.dll" or Image.Path like r"%\\wmiutils.dll" or Image.Path like r"%\\wmsgapi.dll" or Image.Path like r"%\\wofutil.dll" or Image.Path like r"%\\wpdshext.dll" or Image.Path like r"%\\wshbth.dll" or Image.Path like r"%\\wshelper.dll" or Image.Path like r"%\\wtsapi32.dll" or Image.Path like r"%\\wwapi.dll" or Image.Path like r"%\\xmllite.dll" or Image.Path like r"%\\xolehlp.dll" or Image.Path like r"%\\xwizards.dll" or Image.Path like r"%\\xwtpw32.dll" or Image.Path like r"%\\aclui.dll" or Image.Path like r"%\\bderepair.dll" or Image.Path like r"%\\bootmenuux.dll" or Image.Path like r"%\\dcntel.dll" or Image.Path like r"%\\dwmcore.dll" or Image.Path like r"%\\dynamoapi.dll" or Image.Path like r"%\\fhsvcctl.dll" or Image.Path like r"%\\fxsst.dll" or Image.Path like r"%\\inproclogger.dll" or Image.Path like r"%\\iumbase.dll" or Image.Path like r"%\\kdstub.dll" or Image.Path like r"%\\maintenanceui.dll" or Image.Path like r"%\\mdmdiagnostics.dll" or Image.Path like r"%\\mintdh.dll" or Image.Path like r"%\\msdtctm.dll" or Image.Path like r"%\\nettrace.dll" or Image.Path like r"%\\osksupport.dll" or Image.Path like r"%\\reseteng.dll" or Image.Path like r"%\\resetengine.dll" or Image.Path like r"%\\spectrumsyncclient.dll" or Image.Path like r"%\\srcore.dll" or Image.Path like r"%\\systemsettingsthresholdadminflowui.dll" or Image.Path like r"%\\timesync.dll" or Image.Path like r"%\\upshared.dll" or Image.Path like r"%\\wmpdui.dll" or Image.Path like r"%\\wwancfg.dll" or Image.Path like r"%\\dpx.dll" or Image.Path like r"%\\fxsapi.dll" or Image.Path like r"%\\fxstiff.dll" or Image.Path like r"%\\xpsservices.dll" or Image.Path like r"%\\appvpolicy.dll" or Image.Path like r"%\\batmeter.dll" or Image.Path like r"%\\bootux.dll" or Image.Path like r"%\\cmutil.dll" or Image.Path like r"%\\configmanager2.dll" or Image.Path like r"%\\coredplus.dll" or Image.Path like r"%\\coreuicomponents.dll" or Image.Path like r"%\\cryptsp.dll" or Image.Path like r"%\\dmcommandlineutils.dll" or Image.Path like r"%\\drvstore.dll" or Image.Path like r"%\\dsprop.dll" or Image.Path like r"%\\dxcore.dll" or Image.Path like r"%\\edgeiso.dll" or Image.Path like r"%\\framedynos.dll" or Image.Path like r"%\\fveskybackup.dll" or Image.Path like r"%\\fvewiz.dll" or Image.Path like r"%\\gpapi.dll" or Image.Path like r"%\\icmp.dll" or Image.Path like r"%\\ifsutil.dll" or Image.Path like r"%\\iumsdk.dll" or Image.Path like r"%\\lockhostingframework.dll" or Image.Path like r"%\\lrwizdll.dll" or Image.Path like r"%\\mbaexmlparser.dll" or Image.Path like r"%\\mfc42u.dll" or Image.Path like r"%\\msiso.dll" or Image.Path like r"%\\msvcp110\_win.dll" or Image.Path like r"%\\netapi32.dll" or Image.Path like r"%\\netjoin.dll" or Image.Path like r"%\\netprovfw.dll" or Image.Path like r"%\\opcservices.dll" or Image.Path like r"%\\pkeyhelper.dll" or Image.Path like r"%\\playsndsrv.dll" or Image.Path like r"%\\powrprof.dll" or Image.Path like r"%\\prntvpt.dll" or Image.Path like r"%\\profapi.dll" or Image.Path like r"%\\proximitycommon.dll" or Image.Path like r"%\\proximityservicepal.dll" or Image.Path like r"%\\rasdlg.dll" or Image.Path like r"%\\security.dll" or Image.Path like r"%\\sppcext.dll" or Image.Path like r"%\\srmtrace.dll" or Image.Path like r"%\\tpmcoreprovisioning.dll" or Image.Path like r"%\\umpdc.dll" or Image.Path like r"%\\unattend.dll" or Image.Path like r"%\\urlmon.dll" or Image.Path like r"%\\vdsutil.dll" or Image.Path like r"%\\version.dll" or Image.Path like r"%\\winbio.dll" or Image.Path like r"%\\windows.ui.immersive.dll" or Image.Path like r"%\\winscard.dll" or Image.Path like r"%\\winsync.dll" or Image.Path like r"%\\wscapi.dll" or Image.Path like r"%\\wsmsvc.dll" or Image.Path like r"%\\FxsCompose.dll" or Image.Path like r"%\\WfsR.dll" or Image.Path like r"%\\rpchttp.dll" or Image.Path like r"%\\storageusage.dll" or Image.Path like r"%\\amsi.dll" or Image.Path like r"%\\PrintIsolationProxy.dll" or Image.Path like r"%\\msdtcVSp1res.dll" or Image.Path like r"%\\rdpendp.dll" or Image.Path like r"%\\dxilconv.dll" or Image.Path like r"%\\utcutil.dll" or Image.Path like r"%\\appraiser.dll" or Image.Path like r"%\\dsound.dll" or Image.Path like r"%\\DispBroker.dll" or Image.Path like r"%\\FXSRESM.DLL" or Image.Path like r"%\\cryptnet.dll" or Image.Path like r"%\\COMRES.DLL" or Image.Path like r"%\\igdumdim64.dll" or Image.Path like r"%\\igd10iumd64.dll" or Image.Path like r"%\\igd12umd64.dll" or Image.Path like r"%\\igdusc64.dll" or Image.Path like r"%\\WLBSCTRL.dll" or Image.Path like r"%\\TSMSISrv.dll" or Image.Path like r"%\\TSVIPSrv.dll" or Image.Path like r"%\\wow64log.dll" or Image.Path like r"%\\WptsExtensions.dll" or Image.Path like r"%\\wbemcomn.dll") and not (((Image.Path like r"C:\\Windows\\System32\\%" or Image.Path like r"C:\\Windows\\SysWOW64\\%" or Image.Path like r"C:\\Windows\\WinSxS\\%" or Image.Path like r"C:\\Windows\\SoftwareDistribution\\%" or Image.Path like r"C:\\Windows\\SystemTemp\\%")) or (Image.Path like r"C:\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\AppVPolicy.dll" and Process.Path like r"C:\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\OfficeClickToRun.exe") or (Image.Path like r"C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\%") or ((Process.Path like r"C:\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs%" or Process.Path like r"C:\\Windows\\System32\\backgroundTaskHost.exe%") and Image.Path like r"C:\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs%") or (Process.Path like r"C:\\Windows\\System32\\cleanmgr.exe" and Image.Path like r"%\\ssshim.dll") or (Process.Path like r"C:\\$WINDOWS.~BT\\%")))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects potential DLL sideloading using JUSTSYSTEMS Japanese word processor
RuleName = Potential DLL Sideloading Via JsSchHlp
EventType = Image.Load
Tag = potential-dll-sideloading-via-jsschhlp
RiskScore = 50
Query = (Image.Path like r"%\\JSESPR.dll" and not (Image.Path like r"C:\\Program Files\\Common Files\\Justsystem\\JsSchHlp\\%"))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects DLL sideloading of "dbghelp.dll"
RuleName = DLL Sideloading Of DBGHELP.DLL
EventType = Image.Load
Tag = dll-sideloading-of-dbghelp.dll
RiskScore = 50
Query = (Image.Path like r"%\\dbghelp.dll" and not (((Image.Path like r"C:\\Windows\\System32\\%" or Image.Path like r"C:\\Windows\\SysWOW64\\%" or Image.Path like r"C:\\Windows\\WinSxS\\%" or Image.Path like r"C:\\Windows\\SoftwareDistribution\\%" or Image.Path like r"C:\\Windows\\SystemTemp\\%" or Image.Path like r"C:\\Program Files (x86)\\%" or Image.Path like r"C:\\Program Files\\%") or (Image.Path like r"%\\Epic Games\\Launcher\\Engine\\Binaries\\ThirdParty\\DbgHelp\\dbghelp.dll" or Image.Path like r"%\\Epic Games\\MagicLegends\\x86\\dbghelp.dll" or Image.Path like r"%\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\amd64\\dbghelp.dll" or Image.Path like r"%\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\i386\\dbghelp.dll"))))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects loading of essential DLL used by PowerShell, but not by the process powershell.exe. Detects meterpreter's "load powershell" extension.
RuleName = In-memory PowerShell
EventType = Image.Load
Tag = in-memory-powershell
RiskScore = 50
Query = ((Image.Path like r"%\\System.Management.Automation.Dll" or Image.Path like r"%\\System.Management.Automation.ni.Dll") and not (((Process.Path like r"C:\\Windows\\System32\\dsac.exe" or Process.Path like r"C:\\Program Files\\PowerShell\\7\\pwsh.exe") or (Process.Path like r"%\\powershell.exe" or Process.Path like r"%\\powershell\_ise.exe" or Process.Path like r"%\\WINDOWS\\System32\\sdiagnhost.exe" or Process.Path like r"%\\mscorsvw.exe" or Process.Path like r"%\\WINDOWS\\System32\\RemoteFXvGPUDisablement.exe" or Process.Path like r"%\\sqlps.exe" or Process.Path like r"%\\wsmprovhost.exe" or Process.Path like r"%\\winrshost.exe" or Process.Path like r"%\\syncappvpublishingserver.exe" or Process.Path like r"%\\runscripthelper.exe" or Process.Path like r"%\\ServerManager.exe" or Process.Path like r"%\\Microsoft SQL Server Management Studio %\\Common%\\IDE\\Ssms.exe" or Process.Path like r"%\\IDE\\devenv.exe" or Process.Path like r"%\\ServiceHub.VSDetouredHost.exe" or Process.Path like r"%\\ServiceHub.SettingsHost.exe" or Process.Path like r"%\\ServiceHub.Host.CLR.x86.exe" or Process.Path like r"%\\Citrix\\ConfigSync\\ConfigSyncRun.exe") or (Process.Path like r"C:\\Program Files (x86)\\Microsoft Visual Studio\\%" or Process.Path like r"C:\\Program Files\\Microsoft Visual Studio\\%")) or (Process.Path like r"C:\\Windows\\Temp\\asgard2-agent\\%" and (Process.Path like r"%\\thor64.exe" or Process.Path like r"%\\thor.exe")) or (Process.Path == '')))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects DLL sideloading of DLLs that are part of Microsoft Office from non standard location
RuleName = Microsoft Office DLL Sideload
EventType = Image.Load
Tag = microsoft-office-dll-sideload
RiskScore = 50
Query = (Image.Path like r"%\\outllib.dll" and not ((Image.Path like r"C:\\Program Files\\Microsoft Office\\OFFICE%" or Image.Path like r"C:\\Program Files (x86)\\Microsoft Office\\OFFICE%" or Image.Path like r"C:\\Program Files\\Microsoft Office\\Root\\OFFICE%" or Image.Path like r"C:\\Program Files (x86)\\Microsoft Office\\Root\\OFFICE%")))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc).
RuleName = WMIC Loading Scripting Libraries
EventType = Image.Load
Tag = wmic-loading-scripting-libraries
RiskScore = 50
Query = (Process.Path like r"%\\wmic.exe" and (Image.Path like r"%\\jscript.dll" or Image.Path like r"%\\vbscript.dll"))
GenericProperty1 = Image.Path

[ActivityMonitoringRule]
# Detects signs of the WMI script host process %SystemRoot%\system32\wbem\scrcons.exe functionality being used via images being loaded by a process.
RuleName = WMI Script Host Process Image Loaded
EventType = Image.Load
Tag = wmi-script-host-process-image-loaded
RiskScore = 50
Query = (Process.Path like r"%\\scrcons.exe" and (Image.Path like r"%\\vbscript.dll" or Image.Path like r"%\\wbemdisp.dll" or Image.Path like r"%\\wshom.ocx" or Image.Path like r"%\\scrrun.dll"))
GenericProperty1 = Image.Path

